{
  "openapi": "3.0.3",
  "info": {
    "title": "Medius Web API",
    "description": "This is the OpenAPI specification for Medius Public APIs. You are welcome to try the APIs below on your tenant. Remember to activate the OpenAPI test portal client application in Medius, for more information [click here](https://success.medius.com/documentation/integration-documentation/api_reference/specification/).\n\n Some useful links:\n- [Success documentation](https://success.medius.com/documentation/integration-documentation/) - the complete API documentation\n- [Postman collections](https://www.postman.com/medius-developers/medius-public-api) - Medius public API workspace",
    "termsOfService": "http://www.medius.com",
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more information in the success portal",
    "url": "https://success.mediusflow.com/documentation/integration-documentation/"
  },
  "tags": [
    {
      "name": "Master data - import",
      "description": "Master data import used by the suite"
    },
    {
      "name": "Master data - export",
      "description": "Companies and suppliers export"
    },
    {
      "name": "User import",
      "description": "User and user configuration import"
    },
    {
      "name": "AP Automation: Supplier invoices",
      "description": "Supplier invoice ERP synchronization"
    },
    {
      "name": "AP Automation: Purchase orders",
      "description": "Purchase order import/export"
    },
    {
      "name": "AP Automation: Invoice import",
      "description": "Import of supplier invoices from external source."
    },
    {
      "name": "Procurement: Purchase order import",
      "description": "Import of approved requisitions as purchase order documents"
    },
    {
      "name": "Procurement: Send orders to supplier",
      "description": "Send orders to supplier"
    },
    {
      "name": "Procurement: Purchase orders and receipts",
      "description": "Purchase order and goods receipt ERP synchronization"
    },
    {
      "name": "Pay",
      "description": "Import of payment batches and reconciliation"
    },
    {
      "name": "Supplier Onboarding: Suppliers synchronization",
      "description": "Synchronize suppliers with ERP"
    },
    {
      "name": "File and media",
      "description": "Images and attachments"
    }
  ],
  "paths": {
    "/integration/masterdata/v1/accrualTemplateImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send accrual templates that will be imported by the Medius master data import queue.\nThe accrual template have the company and the dimension values used in the template as prerequisites.\nRemember that by sending in accrual templates the integration will updated them all the time, so manual changes of the properties included\nin this data is not possible to set within Medius.",
        "operationId": "AccrualTemplateImportBatch_Post",
        "requestBody": {
          "description": "The accrual templates to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfAccrualTemplate",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationAccrualTemplateDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfAccrualTemplate",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationAccrualTemplateDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "accrualTemplates"
      }
    },
    "/integration/masterdata/v1/accrualTemplateImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "AccrualTemplateImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "AccrualTemplateImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/ApprovalGroupImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send approval groups that will be imported by the Medius master data import queue.\nThe approval groups have company and currency prerequisite.\n\n For detailed information on approval group set-up, see [Success portal](https://success.medius.com/documentation/administration_guide/administration_pages/approval_group/)",
        "operationId": "ApprovalGroupBatchImport_Post",
        "requestBody": {
          "description": "The approval group to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntegrationApprovalGroupDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfApprovalGroup",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationApprovalGroupDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "approvalGroups"
      }
    },
    "/integration/masterdata/v1/ApprovalGroupImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "ApprovalGroupBatchImport_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "ApprovalGroupBatchImport_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/companies": {
      "get": {
        "tags": [
          "Master data - export"
        ],
        "description": "When calling this endpoint a list of companies will be returned. The list includes both \"real\" and \"virtual\" companies.\nThere exists one filter parameter to this request, that is updatedSince, it filters out companies that have been changed since\nthe updatedSince time stamp.\nIt's possible adjust page sizes and offsets.",
        "operationId": "CompanyExport_Get",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The offset",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false,
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of records returned(max 1000)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false,
              "default": 1000
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Tells the service that we only want companies that have been changed after this date and time",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyExportPageDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyExportPageDto"
                }
              }
            }
          }
        }
      }
    },
    "/integration/masterdata/v1/companyImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send a set of companies that will be imported by the Medius master data import queue.\nThe company have Currency as prerequisite\nThe company will be created as a child company to either the root company or to another company provided",
        "operationId": "CompanyImportBatch_Post",
        "requestBody": {
          "description": "The companies to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfCompany",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationCompanyDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfCompany",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationCompanyDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "companies"
      }
    },
    "/integration/masterdata/v1/companyImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "CompanyImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "CompanyImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/currencyImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send currencies that will be imported by the Medius master data import queue.\nThe currency have no prerequisite.",
        "operationId": "CurrencyImportBatch_Post",
        "requestBody": {
          "description": "The currency to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfCurrency",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationCurrencyDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfCurrency",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationCurrencyDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "currencies"
      }
    },
    "/integration/masterdata/v1/currencyImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "CurrencyImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "CurrencyImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/currencyRateImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send currency rates that will be imported by the Medius master data import queue.\nThe currency rate have currency as prerequisite.",
        "operationId": "CurrencyRateImportBatch_Post",
        "requestBody": {
          "description": "The currency rate to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfCurrencyRate",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationCurrencyRateDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfCurrencyRate",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationCurrencyRateDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "currencyRates"
      }
    },
    "/integration/masterdata/v1/currencyRateImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "CurrencyRateImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "CurrencyRateImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/deliveryLineImportBatches": {
      "post": {
        "tags": [
          "AP Automation: Purchase orders"
        ],
        "description": "The POST method allows the client to send a set of delivery lines that will be imported by the Medius master data import queue.\nThe purchase order line header must exist in Medius before a delivery line can be imported. Use of key PurchaseOrderLineExternalSystemId is mandatory to be able to find corresponding purchase order line.",
        "operationId": "DeliveryLinesImportBatch_Post",
        "requestBody": {
          "description": "The delivery line to import.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfDeliveryLine",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationDeliveryLineDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfDeliveryLine",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationDeliveryLineDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "deliveryLines"
      }
    },
    "/integration/masterdata/v1/deliveryLineImportBatches/{importId}": {
      "get": {
        "tags": [
          "AP Automation: Purchase orders"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "DeliveryLinesImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      }
    },
    "/integration/masterdata/v1/deliveryTermImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send delivery terms that will be imported by the Medius master data import queue.\nThe delivery terms have company prerequisite.",
        "operationId": "DeliveryTermImportBatch_Post",
        "requestBody": {
          "description": "The delivery terms to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfDeliveryTerm",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationDeliveryTermDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfDeliveryTerm",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationDeliveryTermDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "deliveryterms"
      }
    },
    "/integration/masterdata/v1/deliveryTermImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "DeliveryTermImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "DeliveryTermImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/dimensionValueConfigurationImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send configurations related to dimensions value that will be imported by the Medius master data import queue.\nThe dimension value configuration have the corresponding dimension as a prerequisites.\nRemember that by sending in dimension configuration the integration will updated them all the time, so manual changes of the properties included\nin this data is not possible to set within Medius. ",
        "operationId": "DimensionValueConfigurationImportBatch_Post",
        "requestBody": {
          "description": "The dimension value configuration to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfDimensionValueConfiguration",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationDimensionValueConfigurationDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfDimensionValueConfiguration",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationDimensionValueConfigurationDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "integrationDimensionValueConfigurations"
      }
    },
    "/integration/masterdata/v1/dimensionValueConfigurationImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "DimensionValueConfigurationImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "DimensionValueConfigurationImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/dimensionValueImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send dimension values that will be imported by the Medius master data import queue.\nThe dimension values have company as mandatory prerequisite.",
        "operationId": "DimensionValueImportBatch_Post",
        "requestBody": {
          "description": "The payment terms to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfDimensionValue",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationDimensionValueDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfDimensionValue",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationDimensionValueDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "dimensionvalues"
      }
    },
    "/integration/masterdata/v1/dimensionValueImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "DimensionValueImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "DimensionValueImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/media/v1/document/{documentId}/images": {
      "get": {
        "tags": [
          "File and media"
        ],
        "description": "This method returns a list of file links for a document identified by parameter 'documentId'.\nEach file link consists of the original file name and a link for downloading this file.\nDraft, migrated and long-term archived documents are not supported by this API.",
        "operationId": "DocumentMediaExport_GetDocumentImagesLinks",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileLink"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfFileLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/FileLink"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/integration/media/v1/document/{documentId}/images/{imageHash}": {
      "get": {
        "tags": [
          "File and media"
        ],
        "description": "This method returns a file with the given hash for a document identified by parameter 'documentId'.\nYou can get a link for this file, containing hash, by calling 'integration/media/v1/document/{documentId}/images'.\nDraft, migrated and long-term archived documents are not supported by this API.",
        "operationId": "DocumentMediaExport_GetImage",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "imageHash",
            "in": "path",
            "description": "Hash of image",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/integration/media/v1/document/{documentId}/attachments": {
      "get": {
        "tags": [
          "File and media"
        ],
        "description": "This method returns the list of attachment links for a document identified by parameter 'documentId'.\nEach attachment link consists of the original attachment name, and a link for downloading this attachment.\nDraft, migrated and long-term archived documents are not supported by this API.",
        "operationId": "DocumentMediaExport_GetDocumentAttachmentsLinks",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileLink"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfFileLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/FileLink"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/integration/media/v1/document/{documentId}/attachments/{attachmentHash}": {
      "get": {
        "tags": [
          "File and media"
        ],
        "description": "This method returns the attachment with a given hash for the document identified by parameter 'documentId'.\nYou can get the link for this attachment, containing hash, by calling 'integration/media/v1/document/{documentId}/attachments'.\nDraft, migrated and long-term archived documents are not supported by this API.",
        "operationId": "DocumentMediaExport_GetAttachment",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "attachmentHash",
            "in": "path",
            "description": "Hash of attachment",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/integration/message/v1/supplierInvoice/errors/{messageStatus}/{messageId}": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method returns the error messages content from a message that matches the status and the id.\nIf the message id is in another status, nothing will be returned. To find a message, use the other GET method that only provides message id as input.",
        "operationId": "ErrorMessage_Get",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "The id of the message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "messageStatus",
            "in": "path",
            "description": "The message status, can be Posted, Fetched, Processing, Sent, Closed or Error",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/integration/message/v1/supplierInvoice/errors/{messageId}": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method will return a status and an effective link to the real error messages content.\nThe main idea with this method is to be able to check status for a give message and to be able to find where a message is in terms of statuses.",
        "operationId": "ErrorMessage_GetStatus",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "The message id of the message to find/check status",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          }
        }
      }
    },
    "/integration/message/v1/supplierInvoice/errors": {
      "post": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method accepts a error message object including a list of error messages.\nThe error message object requires a CorrelationKey that needs to match the corresponding supplier invoice message.",
        "operationId": "ErrorMessage_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponseDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponseDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "errorMessage"
      }
    },
    "/integration/masterdata/v1/itemImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send items that will be imported by the Medius master data import queue.\nThe items have supplier and company as mandatory prerequisite.",
        "operationId": "ItemImportBatch_Post",
        "requestBody": {
          "description": "The items to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfItem",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationItemDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfItem",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationItemDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "items"
      }
    },
    "/integration/masterdata/v1/itemImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "ItemImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "ItemImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/message/v1/supplierInvoice/paymentInformations/{messageStatus}/{messageId}": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method returns the payment information content from a message that matches the status and the id.\nIf the message id is in another status, nothing will be returned. To find a message, use the other GET method that only provides message id as input.",
        "operationId": "PaymentInformationMessage_Get",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "The id of the message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "messageStatus",
            "in": "path",
            "description": "The message status, can be Posted, Fetched, Processing, Sent, Closed or Error",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPaymentInformationDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPaymentInformationDto"
                }
              }
            }
          }
        }
      }
    },
    "/integration/message/v1/supplierInvoice/paymentInformations/{messageId}": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method will return a status and an effective link to the real payment information content.\nThe main idea with this method is to be able to check status for a given message and to be able to find where a message is in terms of statuses.",
        "operationId": "PaymentInformationMessage_GetStatus",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "The message id of the message to find/check status",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          }
        }
      }
    },
    "/integration/message/v1/supplierInvoice/paymentInformations": {
      "post": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method accepts a payment information as a response to the supplier invoice message that was retrieved in earlier step.\nThe payment information object requires a CorrelationKey that needs to match the corresponding supplier invoice message.",
        "operationId": "PaymentInformationMessage_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPaymentInformationDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPaymentInformationDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "paymentInformationDto"
      }
    },
    "/integration/masterdata/v1/paymentTermImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "PaymentTermImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "PaymentTermImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/paymentTermImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send payment terms that will be imported by the Medius master data import queue.\nThe payment terms have company prerequisite.",
        "operationId": "PaymentTermImportBatch_Post",
        "requestBody": {
          "description": "The payment terms to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfPaymentTerm",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationPaymentTermDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfPaymentTerm",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationPaymentTermDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "paymentTerms"
      }
    },
    "/integration/masterdata/v1/periodImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send periods that will be imported by the Medius master data import queue.\nThe periods have Company as prerequisites.\nRemember that by sending in periods the integration will updated them all the time, so manual changes of the properties included\nin this data is not possible to set within Medius. For periods it might be better to keep them in Medius to be able to control the\nposting dates separated from the ERP system, for flexibility reasons.",
        "operationId": "PeriodImportBatch_Post",
        "requestBody": {
          "description": "The periods to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfPeriod",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationPeriodDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfPeriod",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationPeriodDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "periods"
      }
    },
    "/integration/masterdata/v1/periodImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "PeriodImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "PeriodImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/purchaseOrderImportBatches": {
      "post": {
        "tags": [
          "AP Automation: Purchase orders"
        ],
        "description": "The POST method allows the client to send a set of purchase orders that will be imported by the Medius master data import queue.\nThe purchase order need to be imported after the mandatory pre requisites are imported, these are Company and Supplier.\nIf specific units and items are used, these needs to be in place also.",
        "operationId": "PurchaseOrderImportBatch_Post",
        "requestBody": {
          "description": "The purchase orders to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfPurchaseOrder",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationPurchaseOrderDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfPurchaseOrder",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationPurchaseOrderDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "purchaseorders"
      }
    },
    "/integration/masterdata/v1/purchaseOrderImportBatches/{importId}": {
      "get": {
        "tags": [
          "AP Automation: Purchase orders"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "PurchaseOrderImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AP Automation: Purchase orders"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "PurchaseOrderImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/purchaseOrders": {
      "get": {
        "tags": [
          "AP Automation: Purchase orders"
        ],
        "summary": "Purchase order export",
        "description": "When calling this endpoint a list of purchase orders will be returned.\nThere exists one filter parameter to this request, that is updatedSince, it filters out purchase orders that have been changed since\nthe updatedSince time stamp.\nIt's possible adjust page sizes and offsets.",
        "operationId": "PurchaseOrderExport_Get",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The offset",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false,
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of records returned(max 1000)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false,
              "default": 1000
            }
          },
          {
            "name": "includeLines",
            "in": "query",
            "description": "Include purchase order lines with delivery lines and items data in the response or not",
            "schema": {
              "type": "boolean",
              "nullable": false,
              "default": false
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Tells the service that we only want purchase orders with or without lines that have been changed after this date and time",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderExportPageDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderExportPageDto"
                }
              }
            }
          }
        }
      }
    },
    "/integration/message/v1/procurement/purchaseOrders/{messageStatus}/{messageId}": {
      "get": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "The GET method returns the purchase order content from a message that matches the provided status and id.\nIf the message id is in another status, nothing is returned. To find a message, use the other GET method that only requires message id as input.",
        "operationId": "PurchaseOrderRequestMessage_Get",
        "parameters": [
          {
            "name": "messageStatus",
            "in": "path",
            "description": "Message status. Can be: Posted, Fetched, Processing, Sent, Closed or Error",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "The message id of the message to find",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderRequestMessageDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderRequestMessageDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method updates the status of a purchase order message when processing it.",
        "operationId": "PurchaseOrderRequestMessage_Put",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Message id to change the status for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "messageStatus",
            "in": "path",
            "description": "Status that the message is in before the status change",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "description": "The status to set. Possible statuses are: Fetched, Processing or Sent",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/purchaseOrders/{messageId}": {
      "get": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "The GET method with message id as input returns a status and an effective link to real purchase order content.\nThis method allows you to check the status of a given message.",
        "operationId": "PurchaseOrderRequestMessage_GetStatus",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Message id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          }
        }
      }
    },
    "/integration/message/v1/procurement/purchaseOrders/posted": {
      "get": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method returns all messages that match the specified parameters.\nThe mandatory parameter is the status. All other parameters are sent as querystring parameters to narrow down the result.\nThe query string parameters are used, for example, to only return messages of certain type\nThe correlation key filter is used to filter out messages by the it's value, typically used to filter on invoice type or company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Posted_MessagesIds",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Posted_Put",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/purchaseOrders/fetched": {
      "get": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method returns all messages that match the specified parameters.\nThe mandatory parameter is the status. All other parameters are sent as querystring parameters to narrow down the result.\nThe query string parameters are used, for example, to only return messages of certain type\nThe correlation key filter is used to filter out messages by the it's value, typically used to filter on invoice type or company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Fetched_MessagesIds",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Fetched_Put",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/purchaseOrders/processing": {
      "get": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method returns all messages that match the specified parameters.\nThe mandatory parameter is the status. All other parameters are sent as querystring parameters to narrow down the result.\nThe query string parameters are used, for example, to only return messages of certain type\nThe correlation key filter is used to filter out messages by the it's value, typically used to filter on invoice type or company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Processing_MessagesIds",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Processing_Put",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/purchaseOrders/sent": {
      "get": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method returns all messages that match the specified parameters.\nThe mandatory parameter is the status. All other parameters are sent as querystring parameters to narrow down the result.\nThe query string parameters are used, for example, to only return messages of certain type\nThe correlation key filter is used to filter out messages by the it's value, typically used to filter on invoice type or company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Sent_MessagesIds",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Sent_Put",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/purchaseOrders/closed": {
      "get": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method returns all messages that match the specified parameters.\nThe mandatory parameter is the status. All other parameters are sent as querystring parameters to narrow down the result.\nThe query string parameters are used, for example, to only return messages of certain type\nThe correlation key filter is used to filter out messages by the it's value, typically used to filter on invoice type or company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Closed_MessagesIds",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Closed_Put",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/purchaseOrders/error": {
      "get": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method returns all messages that match the specified parameters.\nThe mandatory parameter is the status. All other parameters are sent as querystring parameters to narrow down the result.\nThe query string parameters are used, for example, to only return messages of certain type\nThe correlation key filter is used to filter out messages by the it's value, typically used to filter on invoice type or company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Error_MessagesIds",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Error_Put",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "Message tags. For a purchase order, these can be: REQUEST or CANCEL",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/errors": {
      "post": {
        "tags": [
          "Procurement: Send orders to supplier",
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method accepts an error message object, including a list of error messages.\nThe error message object includes a CorrelationKey that needs to match the corresponding purchase order message.",
        "operationId": "PurchaseOrderRequestMessage_Post_Errors",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponseDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponseDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "dto"
      }
    },
    "/integration/message/v1/procurement/purchaseOrderRequestConfirmation": {
      "post": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method accepts a purchase order confirmation as a response to the purchase order message that was retrieved in the earlier step.\nThe purchase order confirmation object includes a CorrelationKey that needs to match the corresponding purchase order message.",
        "operationId": "PurchaseOrderRequestMessage_Post_Confirmation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestResponseDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestResponseDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "confirmationDto"
      }
    },
    "/integration/message/v1/procurement/purchaseOrderCancelationConfirmation": {
      "post": {
        "tags": [
          "Procurement: Send orders to supplier"
        ],
        "description": "This method accepts a purchase order cancellation as a response to the purchase order message that was retrieved in the earlier step.\nThe purchase order cancellation object includes a CorrelationKey that needs to match the corresponding purchase order message.",
        "operationId": "PurchaseOrderRequestMessage_Post_Cancellation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestResponseDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequestResponseDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "confirmationDto"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/goodsReceiptNotes/{messageStatus}/{messageId}": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "The GET method returns the goods receipt note content from a message that matches the provided status and id.\nIf the message id is in another status, nothing is returned.",
        "operationId": "PurchaseOrderRequestMessage_GetGrn",
        "parameters": [
          {
            "name": "messageStatus",
            "in": "path",
            "description": "Message status. Can be: Posted, Fetched, Processing, Sent, Closed or Error",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "Message id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrnPurchaseOrderDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GrnPurchaseOrderDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method updates the status of a goods receipt note message when processing it.",
        "operationId": "PurchaseOrderRequestMessage_PutGrn",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Message id to change the status for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "messageStatus",
            "in": "path",
            "description": "Status that the message is in before the status change",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "description": "Status to set. Possible statuses are: Fetched and Processing, Sent",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/purchaseOrders/{messageStatus}/{messageId}": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "The GET method returns the purchase order content from a message that matches the provided status and id.\nIf the message id is in another status, nothing is returned.",
        "operationId": "PurchaseOrderRequestMessage_GetPurchaseOrders",
        "parameters": [
          {
            "name": "messageStatus",
            "in": "path",
            "description": "Message status. Can be: Posted, Fetched, Processing, Sent, Closed or Error",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "Message id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcurementPurchaseOrderDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcurementPurchaseOrderDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method updates the status of a purchase order message when processing it.",
        "operationId": "PurchaseOrderRequestMessage_PutPo",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Message id to change the status for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "messageStatus",
            "in": "path",
            "description": "Status that the message is in before the status change",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "description": "Status to set. Possible statuses are: Fetched and Processing, Sent",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/purchaseOrders/{messageId}": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "The GET method with message id as input returns a status and an effective link to purchase order content.\nThis method allows you to check the status of a given message.",
        "operationId": "PurchaseOrderRequestMessage_GetPoToErpStatus",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Message id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          }
        }
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/goodsReceiptNotes/{messageId}": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "The GET method with message id as input returns a status and an effective link to goods receipt note content.\nThis method allows you to check the status of a given message.",
        "operationId": "PurchaseOrderRequestMessage_GetGrnStatus",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Message id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          }
        }
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/goodsReceiptNotes/posted": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method returns all goods receipt note messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Posted_GetGrnMessagesIds",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method updates statuses of all goods receipt note messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Posted_PutGrn",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/goodsReceiptNotes/fetched": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method returns all goods receipt note messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Fetched_GetGrnMessagesIds",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method updates statuses of all goods receipt note messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Fetched_PutGrn",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/goodsReceiptNotes/processing": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method returns all goods receipt note messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Processing_GetGrnMessagesIds",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method updates statuses of all goods receipt note messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Processing_PutGrn",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/goodsReceiptNotes/sent": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method returns all goods receipt note messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Sent_GetGrnMessagesIds",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method updates statuses of all goods receipt note messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Sent_PutGrn",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/goodsReceiptNotes/closed": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method returns all goods receipt note messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Closed_GetGrnMessagesIds",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method updates statuses of all goods receipt note messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Closed_PutGrn",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/goodsReceiptNotes/error": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method returns all goods receipt note messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Error_GetGrnMessagesIds",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method updates statuses of all goods receipt note messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages. Read the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Error_PutGrn",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/purchaseOrders/posted": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method returns all purchase order messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Posted_GetPoMessagesIds",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages.\nRead the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Posted_PutPo",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/purchaseOrders/fetched": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method returns all purchase order messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Fetched_GetPoMessagesIds",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages.\nRead the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Fetched_PutPo",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/purchaseOrders/processing": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method returns all purchase order messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Processing_GetPoMessagesIds",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages.\nRead the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Processing_PutPo",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/purchaseOrders/sent": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method returns all purchase order messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Sent_GetPoMessagesIds",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages.\nRead the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Sent_PutPo",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/purchaseOrders/closed": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method returns all purchase order messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Closed_GetPoMessagesIds",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages.\nRead the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Closed_PutPo",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/purchaseOrders/error": {
      "get": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method returns all purchase order messages that match the specified parameters.\nThe mandatory parameter is the status. The other parameter is sent as querystring parameter to narrow down the result.\nThe correlation key filter is used to filter out messages by the it's value.\nThe correlation key filter is built on a set of properties on the purchase order document with a delimiter: ';'.\n(Be sure to check the number of ';' you have in your correlation key settings.)\nFor seeing all messages use ;;;;;; for a correlation key structure looking as: ERPId;company[49];supplier1;OrderItenfifier;CreatedDate;\nTo listen for a specific company, use a filter like: ERPID;company[49];;;;",
        "operationId": "PurchaseOrderRequestMessage_Error_GetPoMessagesIds",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method updates statuses of all purchase order messages that meet the filter parameters.\nThis method behaves in the same way as the GET method that returns purchase order messages.\nRead the documentation of that method for details.",
        "operationId": "PurchaseOrderRequestMessage_Error_PutPo",
        "parameters": [
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Status that you want to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/procurement/externalSystemSync/confirmations": {
      "post": {
        "tags": [
          "Procurement: Purchase orders and receipts"
        ],
        "description": "This method accepts a confirmation response to either the purchase order, goods receipt note or cancellation confirmation response, that was retrieved in the earlier step.\n\nThe confirmation object includes a `correlationKey` that needs to match the corresponding purchase order, goods receipt note or cancelation message.\n\n**The different scenarios expect different amount of response payload. Take a look at the examples and schemas below to see what is needed in the specific scenarios.**",
        "operationId": "PurchaseOrderRequestMessage_PostPoToErpOrGrnConfirmation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Use one of the schemas below to send either purchase order, goods receipt or cancelation response confirmation.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PurchaseOrderRequestResponseDto"
                  },
                  {
                    "$ref": "#/components/schemas/GoodsReceiptNoteRequestResponseDto"
                  },
                  {
                    "$ref": "#/components/schemas/CancelationResponseDto"
                  }
                ]
              },
              "examples": {
                "PurchaseOrder-example": {
                  "value": {
                    "correlationKey": "MyERP;TC1;TS1;MF-549;2024-09-26",
                    "purchaseOrderConfirmation": {
                      "orderNumber": "MF-549",
                      "externalOrderNumber": "ERP-MF-549",
                      "externalSystemMetadata": [
                        {
                          "name": "string",
                          "value": "string"
                        }
                      ],
                      "lines": [
                        {
                          "lineNumber": "1",
                          "externalOrderLineNumber": "1001",
                          "externalSystemMetadata": [
                            {
                              "name": "string",
                              "value": "string"
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "GoodsReceipt-example": {
                  "value": {
                    "correlationKey": "TC1;MF-549",
                    "purchaseOrderConfirmation": {
                      "orderNumber": "MF-549",
                      "externalOrderNumber": "ERP-MF-549",
                      "externalSystemMetadata": [
                        {
                          "name": "string",
                          "value": "string"
                        }
                      ]
                    },
                    "goodsReceiptNoteConfirmation": {
                      "referenceNumber": "GRN-549.1",
                      "externalReferenceNumber": "ERP-GRN-549.1",
                      "lines": [
                        {
                          "deliveryNumber": "5095367-9d4d-4b4d-b7e3-9654a4e03c0c",
                          "externalDeliveryNumber": "ERP-GRN-549.1-5000100",
                          "externalSystemMetadata": [
                            {
                              "name": "string",
                              "value": "string"
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "Cancelation-example": {
                  "value": {
                    "correlationKey": "TC1;MF-549"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrderRequestResponseXMLDto"
              },
              "examples": {
                "PurchaseOrderXML-example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<PurchaseOrderResponse>\n    <CorrelationKey>MyERP;TC1;TS1;MF-549;2024-09-26</CorrelationKey>\n    <PurchaseOrderConfirmation>\n        <OrderNumber>MF-549</OrderNumber>\n        <ExternalOrderNumber>ERP-MF-549</ExternalOrderNumber>\n        <ExternalSystemMetadata>\n            <ExternalSystemMetadataEntry>\n                 <Name>string</Name>\n                 <Value>string</Value>\n            </ExternalSystemMetadataEntry>\n        </ExternalSystemMetadata>\n        <Lines>\n            <PurchaseOrderLineConfirmation>\n                <LineNumber>1</LineNumber>\n                <ExternalOrderLineNumber>1001</ExternalOrderLineNumber>\n                <ExternalSystemMetadata>\n                    <ExternalSystemMetadataEntry>\n                        <Name>string</Name>\n                        <Value>string</Value>\n                    </ExternalSystemMetadataEntry>\n                </ExternalSystemMetadata>\n            </PurchaseOrderLineConfirmation>\n        </Lines>\n    </PurchaseOrderConfirmation>\n</PurchaseOrderResponse>"
                },
                "GoodsReceiptXML-example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<PurchaseOrderResponse>\n    <CorrelationKey>TC1;MF-549</CorrelationKey>\n    <PurchaseOrderConfirmation>\n        <OrderNumber>MF-549</OrderNumber>\n        <ExternalOrderNumber>ERP-MF-549</ExternalOrderNumber>\n        <ExternalSystemMetadata>\n            <ExternalSystemMetadataEntry>\n                <Name>string</Name>\n                <Value>string</Value>\n            </ExternalSystemMetadataEntry>\n        </ExternalSystemMetadata>\n    </PurchaseOrderConfirmation>\n    <GoodsReceiptNoteConfirmation>\n        <ReferenceNumber>GRN-549.1</ReferenceNumber>\n        <ExternalReferenceNumber>ERP-GRN-549.1</ExternalReferenceNumber>\n        <Lines>\n            <GoodsReceiptNoteLineConfirmation>\n                <DeliveryNumber>697bf569-8456-4020-90yt-e9740393625</DeliveryNumber>\n                <ExternalDeliveryNumber>ERP-GRN-549.1-5000100</ExternalDeliveryNumber>\n                <ExternalSystemMetadata>\n                    <ExternalSystemMetadataEntry>\n                        <Name>string</Name>\n                        <Value>string</Value>\n                    </ExternalSystemMetadataEntry>\n                </ExternalSystemMetadata>\n            </GoodsReceiptNoteLineConfirmation>\n        </Lines>\n    </GoodsReceiptNoteConfirmation>\n</PurchaseOrderResponse>"
                },
                "CancelationXML-example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<PurchaseOrderResponse>\n    <CorrelationKey>TC1;MF-549</CorrelationKey>\n</PurchaseOrderResponse>"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "confirmationDto"
      }
    },
    "/integration/masterdata/v1/basicRestrictionImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send basic restrictions for a dimension value that will be imported by the Medius master data import queue.\nThe dimensions involved in the restriction are mandatory.\nControlling dimension key is the dimension that will get the restriction applied on it, the property RestrictedDimension includes a list\nwith dimensions to restrict. For each restriction there is a set of RestrictionTypes, these are: Fixed, Forbidden, Default and Required",
        "operationId": "RestrictionImportBatch_Post",
        "requestBody": {
          "description": "The restrictions to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfBasicRestriction",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationBasicRestrictionsDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfBasicRestriction",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationBasicRestrictionsDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "basicRestrictions"
      }
    },
    "/integration/masterdata/v1/basicRestrictionImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "RestrictionImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "RestrictionImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/restrictionRuleImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send restriction rules that will be imported by data import queue.\nThe Restriction rules have company prerequisite.",
        "operationId": "RestrictionRuleImportBatch_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfRestrictionRuleGroup",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/RestrictionRuleGroupDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfRestrictionRuleGroup",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/RestrictionRuleGroupDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "restrictionStructuresList"
      }
    },
    "/integration/masterdata/v1/restrictionRuleImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "RestrictionRuleImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      }
    },
    "/integration/masterdata/v1/supplierConfigurationImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send a set of supplier configurations that will be imported by the Medius master data import queue.\nThe supplier configuration needs to have the corresponding supplier in place before being imported.\nRemember that by sending in supplier configurations the integration will updated them all the time, so manual changes of the properties included\nin this data is not possible to set within Medius.",
        "operationId": "SupplierConfigurationBatch_Post",
        "requestBody": {
          "description": "The supplier configurations to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfSupplierConfiguration",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationSupplierConfigurationDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfSupplierConfiguration",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationSupplierConfigurationDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "supplierConfigrations"
      }
    },
    "/integration/masterdata/v1/supplierConfigurationImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "SupplierConfigurationBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "SupplierConfigurationBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/suppliers": {
      "get": {
        "tags": [
          "Master data - export"
        ],
        "description": "When calling this endpoint a list of suppliers will be returned.\nThere exists one filter parameter to this request, that is updatedSince, it filters out suppliers that have been changed since\nthe updatedSince time stamp.\nIt's possible adjust page sizes and offsets.",
        "operationId": "SupplierExport_Get",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The offset",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false,
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of records returned(max 1000).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false,
              "default": 1000
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Tells the service that we only want suppliers that have been changed after this date and time.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "identifierType",
            "in": "query",
            "description": "Filter suppliers by identifier type, eg. BANK_ACCOUNT. Requires identifier value.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "identifierValue",
            "in": "query",
            "description": "Filter suppliers by identifier value, e.g. bank account number.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierExportPageDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierExportPageDto"
                }
              }
            }
          }
        }
      }
    },
    "/integration/masterdata/v1/supplierImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send suppliers that will be imported by the Medius master data import queue.\nThe supplier have payment term and company as mandatory prerequisite.\nIf additional dimensions are going to be used or Vat groups they need to be imported in advance.",
        "operationId": "SupplierImportBatch_Post",
        "requestBody": {
          "description": "The suppliers to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfSupplier",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationSupplierDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfSupplier",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationSupplierDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "suppliers"
      }
    },
    "/integration/masterdata/v1/supplierImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "SupplierImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "SupplierImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/message/v1/supplierInvoice/invoices/{messageStatus}/{messageId}": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "The GET method returns the supplier invoice content from a message that matches the status and the id.\nIf the message id is in another status, nothing will be returned. To find a message, use the other GET method that only provides message id as input.",
        "operationId": "SupplierInvoiceMessage_Get",
        "parameters": [
          {
            "name": "messageStatus",
            "in": "path",
            "description": "The message status, can be Posted, Fetched, Processing, Sent, Closed or Error",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "The id of the message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceRequestDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceRequestDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method updates the status for a supplier invoice message when processing it.",
        "operationId": "SupplierInvoiceMessage_Put",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "The message id to change status for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "messageStatus",
            "in": "path",
            "description": "The status that the message is in before the status change",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "description": "The status to set. Possible statuses are: Fetched, Processing or Sent",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/supplierInvoice/invoices/{messageId}": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "The GET method with message id as input will return a status and an effective link to the real supplier invoice content.\nThe main idea with this method is to be able to check status for a give message and to be able to find where a message is in terms of statuses.",
        "operationId": "SupplierInvoiceMessage_GetStatus",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "The message id of the message to find/check status",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          }
        }
      }
    },
    "/integration/message/v1/supplierInvoice/invoices/posted": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method returns all messages that matches the parameters sent in.\nThe mandatory parameter is the status parameter, besides that the other parameters are sent in as querystring parameters to narrow down the result.\nThe query string parameters are used to for instance limit on message type e.g. Preliminary or Posted.\nThe correlation key filter is used to filter out messages by the correlation key, typically used to filter on invoice type or by company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Please check the number of ';' you have in your correlation key settings.)\nSeeing all messages would be ;;;;;; for a correlation key looking as: company[49];company[49];supplier1;company[49];supplier1;Invoice1;\nListing for a given company would give the following filter: company[49];;;;;;",
        "operationId": "SupplierInvoiceMessage_Get_Posted_MessagesIds",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL, CANCEL or RELEASE_PAYMENT",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method updates the status for all supplier invoice messages that meet the filter parameters.\nThis method behaves the same as the GET method that returns supplier invoice messages, please read there for details.",
        "operationId": "SupplierInvoiceMessage_Posted_Put",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL, CANCEL or RELEASE_PAYMENT",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The status that you want to change",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/supplierInvoice/invoices/fetched": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method returns all messages that matches the parameters sent in.\nThe mandatory parameter is the status parameter, besides that the other parameters are sent in as querystring parameters to narrow down the result.\nThe query string parameters are used to for instance limit on message type e.g. Preliminary or Posted.\nThe correlation key filter is used to filter out messages by the correlation key, typically used to filter on invoice type or by company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Please check the number of ';' you have in your correlation key settings.)\nSeeing all messages would be ;;;;;; for a correlation key looking as: company[49];company[49];supplier1;company[49];supplier1;Invoice1;\nListing for a given company would give the following filter: company[49];;;;;;",
        "operationId": "SupplierInvoiceMessage_Get_Fetched_MessagesIds",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL, CANCEL or RELEASE_PAYMENT",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method updates the status for all supplier invoice messages that meet the filter parameters.\nThis method behaves the same as the GET method that returns supplier invoice messages, please read there for details.",
        "operationId": "SupplierInvoiceMessage_Fetched_Put",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL, CANCEL or RELEASE_PAYMENT",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The status that you want to change",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/supplierInvoice/invoices/processing": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method returns all messages that matches the parameters sent in.\nThe mandatory parameter is the status parameter, besides that the other parameters are sent in as querystring parameters to narrow down the result.\nThe query string parameters are used to for instance limit on message type e.g. Preliminary or Posted.\nThe correlation key filter is used to filter out messages by the correlation key, typically used to filter on invoice type or by company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Please check the number of ';' you have in your correlation key settings.)\nSeeing all messages would be ;;;;;; for a correlation key looking as: company[49];company[49];supplier1;company[49];supplier1;Invoice1;\nListing for a given company would give the following filter: company[49];;;;;;",
        "operationId": "SupplierInvoiceMessage_Get_Processing_MessagesIds",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL, CANCEL or RELEASE_PAYMENT",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method updates the status for all supplier invoice messages that meet the filter parameters.\nThis method behaves the same as the GET method that returns supplier invoice messages, please read there for details.",
        "operationId": "SupplierInvoiceMessage_Processing_Put",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL, CANCEL or RELEASE_PAYMENT",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The status that you want to change",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/supplierInvoice/invoices/sent": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method returns all messages that matches the parameters sent in.\nThe mandatory parameter is the status parameter, besides that the other parameters are sent in as querystring parameters to narrow down the result.\nThe query string parameters are used to for instance limit on message type e.g. Preliminary or Posted.\nThe correlation key filter is used to filter out messages by the correlation key, typically used to filter on invoice type or by company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Please check the number of ';' you have in your correlation key settings.)\nSeeing all messages would be ;;;;;; for a correlation key looking as: company[49];company[49];supplier1;company[49];supplier1;Invoice1;\nListing for a given company would give the following filter: company[49];;;;;;",
        "operationId": "SupplierInvoiceMessage_Get_Sent_MessagesIds",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL, CANCEL or RELEASE_PAYMENT",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method updates the status for all supplier invoice messages that meet the filter parameters.\nThis method behaves the same as the GET method that returns supplier invoice messages, please read there for details.",
        "operationId": "SupplierInvoiceMessage_Sent_Put",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL, CANCEL or RELEASE_PAYMENT",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The status that you want to change",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/supplierInvoice/invoices/closed": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method returns all messages that matches the parameters sent in.\nThe mandatory parameter is the status parameter, besides that the other parameters are sent in as querystring parameters to narrow down the result.\nThe query string parameters are used to for instance limit on message type e.g. Preliminary or Posted.\nThe correlation key filter is used to filter out messages by the correlation key, typically used to filter on invoice type or by company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Please check the number of ';' you have in your correlation key settings.)\nSeeing all messages would be ;;;;;; for a correlation key looking as: company[49];company[49];supplier1;company[49];supplier1;Invoice1;\nListing for a given company would give the following filter: company[49];;;;;;",
        "operationId": "SupplierInvoiceMessage_Get_Closed_MessagesIds",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL, CANCEL or RELEASE_PAYMENT",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method updates the status for all supplier invoice messages that meet the filter parameters.\nThis method behaves the same as the GET method that returns supplier invoice messages, please read there for details.",
        "operationId": "SupplierInvoiceMessage_Closed_Put",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL, CANCEL or RELEASE_PAYMENT",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The status that you want to change",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/message/v1/supplierInvoice/invoices/error": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method returns all messages that matches the parameters sent in.\nThe mandatory parameter is the status parameter, besides that the other parameters are sent in as querystring parameters to narrow down the result.\nThe query string parameters are used to for instance limit on message type e.g. Preliminary or Posted.\nThe correlation key filter is used to filter out messages by the correlation key, typically used to filter on invoice type or by company.\nThe correlation key filter is built on a set of properties on the invoice with a delimiter: ';'.\n(Please check the number of ';' you have in your correlation key settings.)\nSeeing all messages would be ;;;;;; for a correlation key looking as: company[49];company[49];supplier1;company[49];supplier1;Invoice1;\nListing for a given company would give the following filter: company[49];;;;;;",
        "operationId": "SupplierInvoiceMessage_Get_Error_MessagesIds",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL, CANCEL or RELEASE_PAYMENT",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "ArrayOfLink"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method updates the status for all supplier invoice messages that meet the filter parameters.\nThis method behaves the same as the GET method that returns supplier invoice messages, please read there for details.",
        "operationId": "SupplierInvoiceMessage_Error_Put",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "The message tags, these can be the following for an invoice PRELIMINARY, FINAL, CANCEL or RELEASE_PAYMENT",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "correlationKeyFilter",
            "in": "query",
            "description": "The Correlation key filter as explained in the summary ",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The status that you want to change",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "statusRequest"
      }
    },
    "/integration/masterdata/v1/taxGroupImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "TaxGroupImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "TaxGroupImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/taxGroupImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send tax groups that will be imported by the Medius master data import queue.\nThe tax group have company as mandatory prerequisite.\nThe tax group consists of a set of tax codes, in many \"less advance\" systems the translation is that tax code is the same as the tax group entity in Medius.\nThis means that if a tax code from the ERP i X, then tax group will be X and there will be one tax code line with X within the tax group.\nWhen performing accounting on an invoice, the tax group is the one used. When providing a TaxIndicator on Supplier or dimensions, the Tax Group is the one to reference.\nThere is a property IndicatorNumber, this one decides if the TaxGroup is going to work with TaxIndicator 1 or 2. ",
        "operationId": "TaxGroupImportBatch_Post",
        "requestBody": {
          "description": "The tax groups to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfTaxGroup",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationTaxGroupDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfTaxGroup",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationTaxGroupDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "taxGroups"
      }
    },
    "/integration/masterdata/v1/unitImportBatches": {
      "post": {
        "tags": [
          "Master data - import"
        ],
        "description": "The POST method allows the client to send units that will be imported by the Medius master data import queue.\nThe units have no prerequisite.\nRemember that the functionality around units is limited in Medius and the reason for importing them should probably be considered\nbefore doing it. The usual case is to set the Unit on purchase order line to the default unit in Medius =&gt; '-'",
        "operationId": "UnitImportBatch_Post",
        "requestBody": {
          "description": "The units to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfUnit",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationUnitDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfUnit",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationUnitDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "unit"
      }
    },
    "/integration/masterdata/v1/unitImportBatches/{importId}": {
      "get": {
        "tags": [
          "Master data - import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "UnitImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Master data - import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "UnitImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/userImportBatches": {
      "post": {
        "tags": [
          "User import"
        ],
        "description": "The POST method allows the client to send users that will be imported by the Medius master data import queue.\nThe users have the company and the corresponding role to set for the user as prerequisites.",
        "operationId": "UserImportBatch_Post",
        "requestBody": {
          "description": "The users to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfUser",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationUserDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfUser",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationUserDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "users"
      }
    },
    "/integration/masterdata/v1/userImportBatches/{importId}": {
      "get": {
        "tags": [
          "User import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "UserImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "UserImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/masterdata/v1/userConfigurationImportBatches": {
      "post": {
        "tags": [
          "User import"
        ],
        "description": "The POST method allows the client to send user configurations that will be imported by the Medius master data import queue.\nThe user configurations have the company and the corresponding user as prerequisites.\nRemember that by sending configurations for users the integration will updated them all the time, so manual changes of the properties included\nin this data is not possible to set within Medius. ",
        "operationId": "UserConfigurationImportBatch_Post",
        "requestBody": {
          "description": "The user configurations to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfUserConfiguration",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationUserConfigurationDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "xml": {
                  "name": "ArrayOfUserConfiguration",
                  "wrapped": true
                },
                "items": {
                  "$ref": "#/components/schemas/IntegrationUserConfigurationDto"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "userConfigurations"
      }
    },
    "/integration/masterdata/v1/userConfigurationImportBatches/{importId}": {
      "get": {
        "tags": [
          "User import"
        ],
        "description": "The GET method will allow you to check status for an imported batch. When performing a POST, the link returned is pointing to this method.\nThis method allows the client to orchestrate so that the client can wait until dependent master data is imported correctly before sending that data.",
        "operationId": "UserConfigurationImportBatch_Get",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User import"
        ],
        "description": "The DELETE method allows a client to remove an import item from the queue, this to allow an integration to take full responsibility\nof resending master data batches and handle all error on the client side instead of within Medius. it's only possible to remove items that are not in a running state.",
        "operationId": "UserConfigurationImportBatch_Delete",
        "parameters": [
          {
            "name": "importId",
            "in": "path",
            "description": "The import id is either retrieved by the full link from the result of the POST or from within the Medius master data import queue",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/integration/message/v1/supplierInvoice/vouchers/{messageStatus}/{messageId}": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method returns the voucher content from a message that matches the status and the id.\nIf the message id is in another status, nothing will be returned. To find a message, use the other GET method that only provides message id as input.",
        "operationId": "VoucherMessage_Get",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "The id of the message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "messageStatus",
            "in": "path",
            "description": "The message status, can be Posted, Fetched, Processing, Sent, Closed or Error",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherResponseDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/integration/message/v1/supplierInvoice/vouchers/{messageId}": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method will return a status and an effective link to the real voucher content.\nThe main idea with this method is to be able to check status for a give message and to be able to find where a message is in terms of statuses.",
        "operationId": "VoucherMessage_GetStatus",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "The message id of the message to find/check status",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          }
        }
      }
    },
    "/integration/message/v1/supplierInvoice/vouchers": {
      "post": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method accepts a voucher as a response to the supplier invoice message that was retrieved in earlier step.\nThe voucher requires a CorrelationKey that needs to match the corresponding supplier invoice message.",
        "operationId": "VoucherMessage_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoucherResponseDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/VoucherResponseDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "voucher"
      }
    },
    "/integration/message/v1/supplierInvoice/releasePayment/{messageStatus}/{messageId}": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method returns the release payment content from a message that matches the status and the id.\nIf the message id is in another status, nothing will be returned. To find a message, use the other GET method that only provides message id as input.",
        "operationId": "ReleasePaymentMessage_Get",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "The id of the message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "messageStatus",
            "in": "path",
            "description": "The message status, can be Posted, Fetched, Processing, Sent, Closed or Error",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleasePaymentResponseDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ReleasePaymentResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/integration/message/v1/supplierInvoice/releasePayment/{messageId}": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method will return a status and an effective link to the real releasepayment content.\nThe main idea with this method is to be able to check status for a give message and to be able to find where a message is in terms of statuses.",
        "operationId": "ReleasePaymentMessage_GetStatus",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "The message id of the message to find/check status",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          }
        }
      }
    },
    "/integration/message/v1/supplierInvoice/releasePayment": {
      "post": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "description": "This method accepts a release payment response to the release payment that was retrieved in earlier step.\nThe release payment requires a CorrelationKey that needs to match the corresponding release payment message.",
        "operationId": "ReleasePaymentMessage_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleasePaymentResponseDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ReleasePaymentResponseDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "releasePaymentResponseDto"
      }
    },
    "/integration/documentImport/v1/supplierInvoices/{id}": {
      "get": {
        "tags": [
          "AP Automation: Invoice import"
        ],
        "summary": "Supplier invoice import status from APA",
        "description": "The GET Method returns the status for a given DocumentImport document in Medius.\nIt also returns the \"real\" invoice that was created by the imported document.",
        "operationId": "SupplierInvoice_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the supplier invoice sent in. A full link to this method is returned by the POST method",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportDocumentStatusDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ImportDocumentStatusDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      }
    },
    "/integration/documentImport/v1/supplierInvoices": {
      "post": {
        "tags": [
          "AP Automation: Invoice import"
        ],
        "summary": "Supplier invoice import to APA",
        "description": "The POST method imports a supplier invoice, this is done with multipart/form content.\nThe location header in the response includes a full link to the GET method, this link can be stored as a ticket/receipt that Medius received the imported document.\nNOTE: Due to that it needs to be sent in as multipart/form, the self testing experience in Swagger UI is limited.\nTo get the full test experience, please test this method in the Postman tool, all examples can be found here: https://www.getpostman.com/collections/36b522ecbddf6a8934d4",
        "operationId": "SupplierInvoice_Post",
        "requestBody": {
          "description": "DISCLAIMER: This is a multipart/form data type. Due to Swagger 2.0 it is impossible to visualize. Here you can see the definitions for the form data, and you can try it out. Image and attachments can not be included. For a complete specification see Postman or https://success.mediusflow.com/documentation/integration-documentation/technical/rest/scenarios/#running-the-supplier-invoice-import.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdiSupplierInvoiceImportEnvelope"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EdiSupplierInvoiceImportEnvelope"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the document is processing within Medius.",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "supplierinvoices"
      }
    },
    "/integration/documentImport/v1/file/supplierInvoices/": {
      "post": {
        "tags": [
          "AP Automation: Invoice import"
        ],
        "summary": "Supplier invoice file import to Capture",
        "description": "The POST method uploads a PDF or XML invoice file from body to Capture.\nIt returns id of uploaded file. Note: the self testing experience in Swagger UI is limited. It is only possible to paste the XML body. Please use Postman or other test tools to send in PDF and XML files as binary.",
        "operationId": "File_SupplierInvoice_Post",
        "parameters": [
          {
            "name": "companyGlobalId",
            "in": "query",
            "description": "Unique company identifier",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "supplierGlobalId",
            "in": "query",
            "description": "Unique supplier identifier",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "externalId",
            "in": "query",
            "description": "Unique external identifier to corresponding entity",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "A PEPPOL BIS Billing 3.0 XML or PDF file containing invoice for Capture. Maximum file size is 50 MB.",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ImportDocumentSupplierInvoiceFile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Response includes the id of uploaded file",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "invoice"
      }
    },
    "/integration/payment/v1/paymentBatches": {
      "get": {
        "tags": [
          "Pay"
        ],
        "description": "Get payment batch reconciliation status. Basic information about payment batches",
        "operationId": "paymentBatches_Get_externalBatchId",
        "parameters": [
          {
            "name": "externalBatchId",
            "in": "query",
            "description": "External payment batch ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of matching payment batches",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentBatchReconciliationStatusResponse"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "PaymentBatches"
                  },
                  "items": {
                    "$ref": "#/components/schemas/PaymentBatchReconciliationStatusResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Pay"
        ],
        "description": "The POST method allows the client to send payment batches that will be imported into Medius Pay to be approved and paid. When import fails, incorrect payment batch is saved in Import error inbox within Medius Pay. This API has region settings, you will find both US and EU PaymentItem in schemas. The schema is decided on your company location. You can also see both US and EU example files.",
        "operationId": "paymentBatches_Post",
        "requestBody": {
          "description": "Payment batch with list of payment items.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentBatch"
              },
              "examples": {
                "US-example": {
                  "value": {
                    "payorId": "Medius",
                    "externalBatchId": "WBC43728",
                    "items": [
                      {
                        "invoiceNumber": "2/2021",
                        "voucherNumber": "1519c142-c405-4753-bb2f-5fbec59375d4",
                        "invoiceVoucherNumber": "2419c142-c405-4753-bb2f-5fbec5937556",
                        "invoiceCompanyId": "Medius",
                        "payeeId": "sinid",
                        "remitToId": "345123R",
                        "payeeName": "Larson - Roob",
                        "payeeStreetLine1": "3346 Pagac Union",
                        "payeeStreetLine2": "PO box 1202",
                        "payeeCity": "Lake Miller",
                        "payeeZipOrPostalCode": "32202-4934",
                        "payeeStateCode": "RI",
                        "payeeCountryCode": "US",
                        "paymentAmount": 732.43,
                        "paymentCurrencyCode": "USD",
                        "invoiceDate": "2021-04-10T00:00:00.000Z",
                        "invoiceDueDate": "2021-04-10T00:00:00.000Z",
                        "invoiceAmount": 732.43,
                        "invoiceCurrencyCode": "USD",
                        "payorBankAccountIdentifier": "BankId1",
                        "comment": "Comment for payee",
                        "payorIdInPayeeSystem": "897578762",
                        "payeeBankName": "Bank Zachodni WBK S.A.",
                        "payeeBankStreetLine1": "PL.WOLNOSCI 15",
                        "payeeBankStreetLine2": "BUILDING B",
                        "payeeBankCity": "POZNAN",
                        "payeeBankCountryCode": "PL",
                        "payeeAccountNumber": "PL88109013620000000036000000",
                        "payeeRoutingNumber": "202020",
                        "payeeRoutingNumberType": "ACH",
                        "payeeBankSwiftCode": "WBKPPLPP",
                        "purposeOfPayment": "BillPayment",
                        "payeeContactEmail": "email1@example.com, email2@example.com",
                        "paymentReference": "P012701",
                        "discountAmount": 0,
                        "discountCurrencyCode": "USD",
                        "importedCheckNumber": "0000007455"
                      }
                    ]
                  }
                },
                "EU-example": {
                  "value": {
                    "payorId": "Medius",
                    "externalBatchId": "WBC43728",
                    "items": [
                      {
                        "invoiceNumber": "2/2021",
                        "voucherNumber": "1519c142-c405-4753-bb2f-5fbec59375d4",
                        "invoiceVoucherNumber": "2419c142-c405-4753-bb2f-5fbec5937556",
                        "invoiceCompanyId": "Medius",
                        "payeeId": "sinid",
                        "remitToId": "345123R",
                        "payeeName": "Larson - Roob",
                        "payeeStreetLine1": "3346 Pagac Union",
                        "payeeStreetLine2": "PO box 1202",
                        "payeeCity": "Lake Miller",
                        "payeeZipOrPostalCode": "89262-8263",
                        "payeeStateCode": "RI",
                        "payeeCountryCode": "US",
                        "paymentAmount": 732.43,
                        "paymentCurrencyCode": "USD",
                        "invoiceDate": "2021-04-10T00:00:00.000Z",
                        "invoiceDueDate": "2021-04-10T00:00:00.000Z",
                        "preferredPaymentDate": "2021-04-10T00:00:00.000Z",
                        "invoiceAmount": 732.43,
                        "invoiceCurrencyCode": "USD",
                        "comment": "Payment related comment to supplier",
                        "payorBankAccountIdentifier": "Bank1",
                        "payeeBankName": "Bank Zachodni WBK S.A.",
                        "payeeBankStreetLine1": "PL.WOLNOSCI 15",
                        "payeeBankStreetLine2": "BUILDING B",
                        "payeeBankCity": "POZNAN",
                        "payeeBankCountryCode": "PL",
                        "payeeAccountNumber": "PL88109013620000000036000000",
                        "payeeBankgiroNumber": "3452334",
                        "payeeRoutingNumber": "202020",
                        "payeeBankSwiftCode": "WBKPPLPP",
                        "payeeContactEmail": "email1@example.com, email2@example.com",
                        "paymentReference": "P012701",
                        "payeeTaxRegistrationNumber": "12598"
                      }
                    ]
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentBatch"
                  }
                ]
              },
              "examples": {
                "US-example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<PaymentBatch>\n    <PayorId>Medius</PayorId>\n    <ExternalBatchId>WBC43728</ExternalBatchId>\n    <Items>\n        <Item>\n            <InvoiceNumber>2/2021</InvoiceNumber>\n            <VoucherNumber>1519c142-c405-4753-bb2f-5fbec59375d4</VoucherNumber>\n            <InvoiceVoucherNumber>2419c142-c405-4753-bb2f-5fbec5937556</InvoiceVoucherNumber>\n            <InvoiceCompanyId>Medius</InvoiceCompanyId>\n            <PayeeId>sinid</PayeeId>\n            <RemitToId>345123R</RemitToId>\n            <PayeeName>Larson - Roob</PayeeName>\n            <PayeeStreetLine1>3346 Pagac Union</PayeeStreetLine1>\n            <PayeeStreetLine2>PO box 1202</PayeeStreetLine2>\n            <PayeeCity>Lake Miller</PayeeCity>\n            <PayeeZipOrPostalCode>32202-4934</PayeeZipOrPostalCode>\n            <PayeeStateCode>RI</PayeeStateCode>\n            <PayeeCountryCode>US</PayeeCountryCode>\n            <PaymentAmount>732.43</PaymentAmount>\n            <PaymentCurrencyCode>USD</PaymentCurrencyCode>\n            <InvoiceDate>2021-04-10T00:00:00.000Z</InvoiceDate>\n            <InvoiceDueDate>2021-04-10T00:00:00.000Z</InvoiceDueDate>\n            <InvoiceAmount>732.43</InvoiceAmount>\n            <InvoiceCurrencyCode>USD</InvoiceCurrencyCode>\n            <PayorBankAccountIdentifier>BankId1</PayorBankAccountIdentifier>\n            <Comment>Comment for payee</Comment>\n            <PayorIdInPayeeSystem>897578762</PayorIdInPayeeSystem>\n                        <PayeeBankName>Bank Zachodni WBK S.A.</PayeeBankName>\n            <PayeeBankStreetLine1>PL.WOLNOSCI 15</PayeeBankStreetLine1>\n            <PayeeBankStreetLine2>BUILDING B</PayeeBankStreetLine2>\n            <PayeeBankCity>POZNAN</PayeeBankCity>\n            <PayeeBankCountryCode>PL</PayeeBankCountryCode>\n            <PayeeAccountNumber>PL88109013620000000036000000</PayeeAccountNumber>\n            <PayeeRoutingNumber>202020</PayeeRoutingNumber>\n            <PayeeRoutingNumberType>ACH</PayeeRoutingNumberType>\n            <PayeeBankSwiftCode>WBKPPLPP</PayeeBankSwiftCode>\n            <PurposeOfPayment>BillPayment</PurposeOfPayment>\n            <PayeeContactEmail>email1@example.com, email2@example.com</PayeeContactEmail>\n            <PaymentReference>P012701</PaymentReference>\n            <DiscountAmount>0</DiscountAmount>\n            <DiscountCurrencyCode>USD</DiscountCurrencyCode>\n            <ImportedCheckNumber>0000007455</ImportedCheckNumber>\n            </Item>\n    </Items>\n</PaymentBatch>"
                },
                "EU-example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<PaymentBatch>\n    <PayorId>Medius</PayorId>\n    <ExternalBatchId>WBC43728</ExternalBatchId>\n    <Items>\n        <Item>\n            <InvoiceNumber>2/2021</InvoiceNumber>\n            <VoucherNumber>1519c142-c405-4753-bb2f-5fbec59375d4</VoucherNumber>\n            <InvoiceVoucherNumber>2419c142-c405-4753-bb2f-5fbec5937556</InvoiceVoucherNumber>\n            <InvoiceCompanyId>Medius</InvoiceCompanyId>\n            <PayeeId>sinid</PayeeId>\n            <RemitToId>345123R</RemitToId>\n            <PayeeName>Larson - Roob</PayeeName>\n            <PayeeStreetLine1>3346 Pagac Union</PayeeStreetLine1>\n            <PayeeStreetLine2>PO box 1202</PayeeStreetLine2>\n            <PayeeCity>Lake Miller</PayeeCity>\n            <PayeeZipOrPostalCode>89262-8263</PayeeZipOrPostalCode>\n            <PayeeStateCode>RI</PayeeStateCode>\n            <PayeeCountryCode>US</PayeeCountryCode>\n            <PaymentAmount>732.43</PaymentAmount>\n            <PaymentCurrencyCode>USD</PaymentCurrencyCode>\n            <InvoiceDate>2021-04-10T00:00:00.000Z</InvoiceDate>\n            <InvoiceDueDate>2021-04-10T00:00:00.000Z</InvoiceDueDate>\n            <PreferredPaymentDate>2021-04-10T00:00:00.000Z</PreferredPaymentDate>\n            <InvoiceAmount>732.43</InvoiceAmount>\n            <InvoiceCurrencyCode>USD</InvoiceCurrencyCode>\n            <Comment>Payment related comment to supplier</Comment>\n            <PayorBankAccountIdentifier>Bank1</PayorBankAccountIdentifier>\n            <PayeeBankName>Bank Zachodni WBK S.A.</PayeeBankName>\n            <PayeeBankStreetLine1>PL.WOLNOSCI 15</PayeeBankStreetLine1>\n            <PayeeBankStreetLine2>BUILDING B</PayeeBankStreetLine2>\n            <PayeeBankCity>POZNAN</PayeeBankCity>\n            <PayeeBankCountryCode>PL</PayeeBankCountryCode>\n            <PayeeAccountNumber>PL88109013620000000036000000</PayeeAccountNumber>\n            <PayeeBankgiroNumber>3452334</PayeeBankgiroNumber>\n            <PayeeRoutingNumber>202020</PayeeRoutingNumber>\n            <PayeeBankSwiftCode>WBKPPLPP</PayeeBankSwiftCode>\n            <PayeeContactEmail>email1@example.com, email2@example.com</PayeeContactEmail>\n            <PaymentReference>P012701</PaymentReference>\n            <PayeeTaxRegistrationNumber>12598</PayeeTaxRegistrationNumber>\n        </Item>\n    </Items>\n</PaymentBatch>"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Payment batch saved in Medius Pay. IsSuccessful flag indicates the status of import.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResult"
                }
              }
            }
          },
          "400": {
            "description": "When server was unable to parse the request, 400 status code with generic parsing error is returned.",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/integration/payment/v1/paymentBatches/{paymentBatchId}": {
      "get": {
        "tags": [
          "Pay"
        ],
        "description": "Get payment batch reconciliation status. Basic information about payment batch",
        "operationId": "paymentBatches_Get_paymentBatchId",
        "parameters": [
          {
            "name": "paymentBatchId",
            "in": "path",
            "description": "Payment batch ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment batch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentBatchReconciliationStatusResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentBatchReconciliationStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Payment batch with given paymentBatchId not found",
            "content": {}
          }
        }
      }
    },
    "/integration/payment/v1/paymentBatches/{paymentBatchId}/items": {
      "get": {
        "tags": [
          "Pay"
        ],
        "description": "Get payment items reconciliation status. Detailed information about the items of payment batch",
        "operationId": "paymentBatches_Get_paymentBatchId_Items",
        "parameters": [
          {
            "name": "paymentBatchId",
            "in": "path",
            "description": "Payment batch ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Batch headers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentItemReconciliationStatusResponse"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "xml": {
                    "wrapped": true,
                    "name": "Items"
                  },
                  "items": {
                    "$ref": "#/components/schemas/PaymentItemReconciliationStatusResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Payment batch with given paymentBatchId not found",
            "content": {}
          }
        }
      }
    },
    "/integration/message/v1/supplierInvoice/actualPaymentDates/{messageStatus}/{messageId}": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "summary": "Deprecated API, please use paymentInformations instead.",
        "description": "Deprecated API, please use paymentInformations instead. This method returns the payment date content from a message that matches the status and the id.\nIf the message id is in another status, nothing will be returned. To find a message, use the other GET method that only provides message id as input.",
        "operationId": "ActualPaymentDate_Get",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "The id of the message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "messageStatus",
            "in": "path",
            "description": "The message status, can be Posted, Fetched, Processing, Sent, Closed or Error",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActualPaymentDateResponseDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ActualPaymentDateResponseDto"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/integration/message/v1/supplierInvoice/actualPaymentDates/{messageId}": {
      "get": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "summary": "Deprecated API, please use paymentInformations instead.",
        "description": "Deprecated API, please use paymentInformations instead. This method will return a status and an effective link to the real actual payment date content.\nThe main idea with this method is to be able to check status for a give message and to be able to find where a message is in terms of statuses.",
        "operationId": "ActualPaymentDate_GetStatus",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "The message id of the message to find/check status",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLink"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/integration/message/v1/supplierInvoice/actualPaymentDates": {
      "post": {
        "tags": [
          "AP Automation: Supplier invoices"
        ],
        "summary": "Deprecated API, please use paymentInformations instead.",
        "description": "Deprecated API, please use paymentInformations instead. This method accepts a actual payment date as a response to the supplier invoice message that was retrieved in earlier step.\nThe actual payment date object requires a CorrelationKey that needs to match the corresponding supplier invoice message.",
        "operationId": "ActualPaymentDate_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualPaymentDateResponseDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ActualPaymentDateResponseDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {}
          }
        },
        "deprecated": true,
        "x-codegen-request-body-name": "actualPaymentDate"
      }
    },
    "/integration/message/v1/suppliers": {
      "get": {
        "tags": [
          "Supplier Onboarding: Suppliers synchronization"
        ],
        "description": "This method returns URLs to all suppliers that are available for ERP synchronization. Use the returned URL to get the complete supplier record.",
        "operationId": "GetCorrelations",
        "parameters": [
          {
            "name": "erp",
            "in": "query",
            "description": "ERP Id",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": false
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupplierIntegrationsResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/integration/message/v1/suppliers/{correlationId}": {
      "get": {
        "tags": [
          "Supplier Onboarding: Suppliers synchronization"
        ],
        "description": "This method returns the supplier record with all details available. To find a supplier message, use the GET method without {correlationId}.",
        "operationId": "GetCorrelationByKey",
        "parameters": [
          {
            "name": "correlationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierIntegrationSupplierDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/integration/message/v1/suppliers/{correlationId}/response/success": {
      "post": {
        "tags": [
          "Supplier Onboarding: Suppliers synchronization"
        ],
        "description": "Post a successful integration response",
        "operationId": "UpdateIntegrationAsSuccess",
        "parameters": [
          {
            "name": "correlationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierIntegrationSuccessDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/integration/message/v1/suppliers/{correlationId}/response/error": {
      "post": {
        "tags": [
          "Supplier Onboarding: Suppliers synchronization"
        ],
        "description": "Post an error response for an integration",
        "operationId": "UpdateIntegrationAsError",
        "parameters": [
          {
            "name": "correlationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierIntegrationErrorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/integration/documentImport/v1/PurchaseOrderDocument": {
      "post": {
        "tags": [
          "Procurement: Purchase order import"
        ],
        "description": "The POST method allows the client to send a purchase order document that will be imported to Medius Procurement.\nThe import do look-ups for referenced master data entities, and you will get response with success or failure.",
        "operationId": "PurchaseOrderDocument_Post",
        "requestBody": {
          "description": "Create new PurchaseOrderDocument",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPurchaseOrderDocumentDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Response includes Location header with a link to the import batch, this link will give the status of how the batch is processing within Medius",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Detailed error message.",
                      "example": "Required lookup 'CompanyId' ('test') failed"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "purchaseorders"
      }
    },
    "/integration/documentImport/v1/PurchaseOrderDocument/{importTrackingId}": {
      "get": {
        "tags": [
          "Procurement: Purchase order import"
        ],
        "description": "This method returns the purchase order document record with a status. You get the `importTrackingId` in the header of the POST API.",
        "operationId": "PurchaseOrderDocument_Get",
        "parameters": [
          {
            "name": "importTrackingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationStatusDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/connect/userInfo": {
      "get": {
        "tags": [
          "OpenIdConnect"
        ],
        "summary": "Returns user claims as JSON object (XML is not allowed by OpenId Connect specification). Claims includes: user's external system id, e-mail, first name, last name, locale, personal role id, preffered format, username and default company id.",
        "operationId": "UserInfo_Get",
        "responses": {
          "200": {
            "description": "JSON object with claims",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "IntegrationAccrualTemplateDto": {
        "required": [
          "companyId",
          "externalSystemId",
          "isActive",
          "name"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "name": {
            "maxLength": 450,
            "type": "string",
            "description": "Name of Accrual template",
            "xml": {
              "name": "Name"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CompanyId"
            }
          },
          "accrualCodeString": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntegrationCodingDimensionsMasterdataDto"
              }
            ],
            "xml": {
              "name": "AccrualCodeString"
            }
          },
          "accrualPeriods": {
            "type": "array",
            "xml": {
              "name": "AccrualPeriods",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationImportAccrualPeriodDto"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive",
            "xml": {
              "name": "IsActive"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "accrualErpIdentifier": {
            "maxLength": 100,
            "type": "string",
            "description": "ErpIdentifier for the accrual template",
            "xml": {
              "name": "AccrualErpIdentifier"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          }
        },
        "xml": {
          "name": "AccrualTemplate"
        }
      },
      "IntegrationCodingDimensionsDto": {
        "type": "object",
        "properties": {
          "dimension1": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension1"
            }
          },
          "dimension1ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "Dimension1ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "dimension2": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension2"
            }
          },
          "dimension2ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "Dimension2ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "dimension3": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension3"
            }
          },
          "dimension3ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "Dimension3ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "dimension4": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension4"
            }
          },
          "dimension4ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "Dimension4ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "dimension5": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension5"
            }
          },
          "dimension5ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "Dimension5ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "dimension6": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension6"
            }
          },
          "dimension6ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "Dimension6ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "dimension7": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension7"
            }
          },
          "dimension7ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "Dimension7ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "dimension8": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension8"
            }
          },
          "dimension8ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "Dimension8ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "dimension9": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension9"
            }
          },
          "dimension9ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "Dimension9ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "dimension10": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension10"
            }
          },
          "dimension10ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "Dimension10ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "dimension11": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension11"
            }
          },
          "dimension11ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "Dimension11ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "dimension12": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension12"
            }
          },
          "dimension12ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "Dimension12ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "freeText1": {
            "maxLength": 200,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "FreeText1"
            }
          },
          "freeText2": {
            "maxLength": 200,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "FreeText2"
            }
          },
          "freeText3": {
            "maxLength": 200,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "FreeText3"
            }
          },
          "freeText4": {
            "maxLength": 200,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "FreeText4"
            }
          },
          "freeText5": {
            "maxLength": 200,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "FreeText5"
            }
          }
        },
        "xml": {
          "name": "Dimensions"
        }
      },
      "IntegrationCodingDimensionsMasterdataDto": {
        "type": "object",
        "properties": {
          "dimension1": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension1"
            }
          },
          "dimension2": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension2"
            }
          },
          "dimension3": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension3"
            }
          },
          "dimension4": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension4"
            }
          },
          "dimension5": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension5"
            }
          },
          "dimension6": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension6"
            }
          },
          "dimension7": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension7"
            }
          },
          "dimension8": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension8"
            }
          },
          "dimension9": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension9"
            }
          },
          "dimension10": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension10"
            }
          },
          "dimension11": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension11"
            }
          },
          "dimension12": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Dimension12"
            }
          },
          "freeText1": {
            "maxLength": 200,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "FreeText1"
            }
          },
          "freeText2": {
            "maxLength": 200,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "FreeText2"
            }
          },
          "freeText3": {
            "maxLength": 200,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "FreeText3"
            }
          },
          "freeText4": {
            "maxLength": 200,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "FreeText4"
            }
          },
          "freeText5": {
            "maxLength": 200,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "FreeText5"
            }
          }
        },
        "xml": {
          "name": "Dimensions"
        }
      },
      "IntegrationImportAccrualPeriodDto": {
        "required": [
          "percentage",
          "period"
        ],
        "type": "object",
        "properties": {
          "period": {
            "type": "integer",
            "description": "Number of the period",
            "format": "int32",
            "xml": {
              "name": "Period"
            }
          },
          "percentage": {
            "type": "number",
            "description": "Percentage of period. Decimal format (28,14)",
            "format": "decimal",
            "xml": {
              "name": "Percentage"
            }
          }
        },
        "xml": {
          "name": "ImportAccrualPeriod"
        }
      },
      "BatchDto": {
        "required": [
          "isSuccessful",
          "itemsCount",
          "itemsSaved",
          "queueItemId"
        ],
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "xml": {
              "name": "State"
            }
          },
          "details": {
            "type": "string",
            "xml": {
              "name": "Details"
            }
          },
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "ItemsCount"
            }
          },
          "itemsSaved": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "ItemsSaved"
            }
          },
          "isSuccessful": {
            "type": "boolean",
            "xml": {
              "name": "IsSuccessful"
            }
          },
          "errorMessages": {
            "type": "array",
            "xml": {
              "name": "ErrorMessages",
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "String"
              }
            }
          },
          "errors": {
            "type": "array",
            "xml": {
              "name": "Errors",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/BatchErrorDto"
            }
          },
          "queueItemId": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "QueueItemId"
            }
          }
        }
      },
      "BatchErrorDto": {
        "type": "object",
        "properties": {
          "externalSystemId": {
            "type": "string",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "validationMessage": {
            "type": "string",
            "xml": {
              "name": "ValidationMessage"
            }
          },
          "ValidationTag": {
            "$ref": "#/components/schemas/IntegrationErrorTag"
          }
        }
      },
      "IntegrationErrorTag": {
        "type": "integer",
        "description": "",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          94,
          95,
          96,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169
        ],
        "x-enumNames": [
          "UNKNOWN",
          "ACCOUNTING_CURRENY_MISSING",
          "ADVANCED_RESTRICTION_RULES_DATA_IS_INVALID",
          "ADVANCED_RESTRICTION_EXTERNAL_SYSTEM_ID_MISSING",
          "AT_LEAST_ONE_CODING_LINE_OF_TYPE_COST_IS_REQUIRED",
          "AUTHORIZATION_GROUP_NAME_MISSING",
          "AUTHORIZATION_GROUP_NOT_FOUND",
          "COMPANY_EXTERNAL_SYSTEM_ID_MISSING",
          "COMPANY_IS_ALREADY_IMPORTED_WITH_ANOTHER_ACCOUNTING_CURRENCY",
          "COMPANY_MISSING",
          "COMPANY_MISSING_ON_CONTROLLING_DIMENSION_VALUE",
          "COMPANY_NOT_FOUND",
          "COMPANY_RELATED_MUST_HAVE_COMPANY",
          "CONTROLLING_DIMENSION_VALUE_MISSING",
          "CONTROLLING_DIMENSION_VALUE_NOT_FOUND",
          "CONVERSION_FACTOR_MUST_BE_GREATER_THAN_ZERO",
          "COULD_NOT_FIND_ACCOUNTING_CURRENCY",
          "COULD_NOT_FIND_COMPANY_FOR_MASTERDATA",
          "COULD_NOT_FIND_COMPANY_IDENTIFIER_TYPE",
          "COULD_NOT_FIND_CONTACT_PERSON",
          "COULD_NOT_FIND_PARENT_COMPANY",
          "COULD_NOT_SAVE_RESTRICTIONS",
          "COULD_NOT_SAVE_RESTRICTIONS_AND_ROLLBACK",
          "CURRENCY_EXTERNAL_SYSTEM_ID_MISSING",
          "CURRENCY_IS_INACTIVE",
          "CURRENCY_MISSING",
          "CURRENCY_MISSING_ON_SUPPLIER_ITEM",
          "CURRENCY_MISSING_ON_SUPPLIER",
          "CURRENCY_NOT_FOUND",
          "CURRENCY_RATE_CODE_NOT_FOUND",
          "CURRENCY_RATE_CURRENCY_MISSING",
          "CURRENCY_RATE_DATE_IS_MISSING",
          "CURRENCY_RATE_NOT_FOUND",
          "CURRENCY_WITH_CODE_NOT_FOUND",
          "DATE_IS_NOT_IN_VALID_RANGE",
          "DELIVERY_NUMBER_MISSING",
          "DELIVERY_TERM_EXTERNAL_SYSTEM_ID_MISSING",
          "DELIVERY_TERM_NOT_FOUND",
          "DIFFERENT_TAX_CODE_SAME_CODE_ALREADY_EXISTS",
          "DIMENSION_DESCRIPTION_MISSING",
          "DIMENSION_MISSING",
          "DIMENSION_MISSING_ON_CONTROLLING_DIMENSION_VALUE",
          "DIMENSION_MISSING_ON_RESTRICTED_DIMENSION_VALUE",
          "DIMENSION_STRING_TAG_NOT_FOUND",
          "DIMENSION_VALUE_MISSING",
          "DIMENSION_VALUE_NOT_CONNECTED_WITH_PROPER_COMPANY",
          "DIMENSION_VALUE_NOT_FOUND_FOR_DIMENSION",
          "DIMENSION_DOES_NOT_EXIST_DIMENSION_NAME",
          "DIMENSION_VALUE_NOT_FOUND_DIM_EXTERNAL_SYSTEM_ID",
          "DUPLICATED_ROLES",
          "DOCUMENT_TYPE_REQUIRED",
          "END_VALUE_MISSING",
          "END_DATE_REQUIRED",
          "EXTERNAL_SYSTEM_ID_FOR_DIMENSION_VALUE_MISSING",
          "EXTERNAL_SYSTEM_ID_MISSING",
          "EXTERNAL_SYSTEM_ID_MISSING_FOR_TAX_GROUP",
          "EXTERNAL_SYSTEM_ID_MISSING_FOR_COMPANY",
          "FOLLOWUP_GROUP_NAME_MISSING",
          "FOLLOWUP_GROUP_NOT_FOUND",
          "INDICATOR_NUMBER1_ASSIGNED_TO_TAX_INDICATOR2",
          "INDICATOR_NUMBER2_ASSIGNED_TO_TAX_INDICATOR1",
          "INVALID_DATE",
          "INVALID_DIMENSION_SPECIFIED",
          "INVALID_DIMENSION_NAME",
          "INVALID_USER",
          "INVALID_ROLE",
          "INTEGRATION_MESSAGE_TYPE_REQUIRED",
          "ISSUE_WITH_SAVING_ITEM_PLEASE_REPROCESS",
          "MULTIPLE_RESTRICTIONS_DEFINED_FOR_DIMENSION_DIMENSION",
          "NAME_MISSING",
          "NO_RESTRICTED_DIMENSION_VALUES_PROVIDED",
          "ORDER_IDENTIFIER_MISSING",
          "PARENT_COMPANY_MISSING",
          "PAYMENT_TERM_EXTERNAL_SYSTEM_ID_MISSING",
          "PAYMENT_TERM_NOT_FOUND",
          "PRE_CODING_MISSING",
          "PURCHASE_ORDER_CANNOT_BE_IMPORTED_FOR_VIRTUAL_COMPANY",
          "PURCHASE_ORDER_CODING_LINES_CANNOT_BE_EMPTY",
          "PURCHASE_ORDER_WITH_IDENTIFIER_AND_COMPANY_ALREADY_EXIST",
          "RESPONSBILE_CONFIGURATION_MISSING",
          "RESTRICTED_DIMENSION_HAS_INCORRECT_DIMENSION_VALUE",
          "RESTRICTED_DIMENSION_VALUE_MISSING",
          "RESTRICTED_DIMENSION_MISSING",
          "RESTRICTED_DIMENSION_VALUE_NOT_FOUND_DIMENSION_VALUE",
          "RESTRICTED_DIMENSION_VALUE_NOT_FOUND_EXTERNAL_SYSTEM_ID",
          "RESTRICTED_DIMENSION_NOT_FOUND",
          "START_VALUE_MISSING",
          "START_DATE_REQUIRED",
          "SUPPLIER_EXTERNAL_SYSTEM_ID_MISSING",
          "SUPPLIER_MISSING",
          "SUPPLIER_MISSING_AND_CURRENCY_NOT_PROVIDED",
          "SUPPLIER_NOT_FOUND",
          "TAX_CODE_DEDUCTIBLE_MISSING_IN_TAXGROUP",
          "TAX_CODE_NOT_EXISTS",
          "TAX_CODE_PERCENTAGE_MISSING_IN_TAXGROUP",
          "TAX_GROUP_NOT_FOUND",
          "TAX_GROUP_WITH_DUPLICATED_TAX_CODES",
          "TAX_INDICATOR1_EXTERNAL_SYSTEM_ID_IS_MISSING",
          "TAX_INDICATOR1_EXTERNAL_SYSTEM_ID_NOT_FOUND",
          "TAX_INDICATOR2_EXTERNAL_SYSTEM_ID_IS_MISSING",
          "TAX_INDICATOR2_EXTERNAL_SYSTEM_ID_NOT_FOUND",
          "TAXGROUP_NOT_FOUND_FOR_COMPANY",
          "TEMPORARY_DELEGATION_RESPONSIBLE_MISSING",
          "TEMPORARY_DELEGATION_RESPONSIBLE_NOT_FOUND",
          "TRYING_TO_IMPORT_DIMENSION_VALUE_TO_WRONG_DIMENSION",
          "UNIT_IS_MISSING",
          "UNIT_NOT_FOUND",
          "UNIT_WITH_EXTERNAL_SYSTEM_ID_NOT_FOUND",
          "USER_COMPANY_MISSING",
          "USER_COMPANY_NOT_FOUND",
          "USER_DEFAULT_COMPANY_NOT_FOUND",
          "USER_IDENTIY_PROVIDER_NAME_MISSING",
          "USER_IDENTIY_PROVIDER_NAME_NOT_FOUND",
          "USER_NAME_MISSING",
          "USER_NOT_FOUND",
          "USER_ROLE_MISSING",
          "USER_ROLE_NOT_FOUND",
          "INVALID_UNIT",
          "ADVANCED_RESTRICTION_HAS_INVALID_DATA",
          "PAYMENT_DETAILS_EXTERNAL_SYSTEM_ID_NEEDS_TO_BE_UNIQUE",
          "PAYMENT_DETAILS_EXTERNAL_SYSTEM_ID_FOUND_ON_ANOTHER_SUPPLIER",
          "NUMBER_OF_MONTHS_OUTSIDE_THE_RANGE",
          "PAYMENT_TERM_WITH_IDENTIFIER_AND_COMPANY_ALREADY_EXIST",
          "PAYMENT_TERM_HAS_INVALID_DATA",
          "INTERFACE_MISMATCH",
          "SUPPLIER_ITEM_COMPANY_DOES_NOT_EXIST_IN_ITEM_COMPANY_TREE",
          "CURRENCY_MISMATCH_ON_PO",
          "INVALID_ORDER_TYPE",
          "ORDER_TYPE_CHANGE_ATTEMPT",
          "TWO_WAY_MATCHING_IMPORTING_GRS",
          "TWO_WAY_MATCHING_IMPORT_GR",
          "PURCHASE_ORDER_COMMENT_MISSING",
          "PURCHASE_ORDER_LINE_EXTERNAL_SYSTEM_ID_ALREADY_EXISTS",
          "PURCHASE_ORDER_LINE_NUMBER_ALREADY_EXISTS",
          "DELIVERY_LINE_EXTERNAL_SYSTEM_ID_ALREADY_EXISTS",
          "PURCHASE_ORDER_ALREADY_EXISTS",
          "PURCHASE_ORDER_CURRENCY_CHANGE_NOT_ALLOWED",
          "COULD_NOT_DELETE_RESTRICTIONS",
          "COULD_NOT_DELETE_RESTRICTIONS_AND_ROLLBACK",
          "CURRENCY_RATE_OUT_OF_RANGE",
          "CURRENCY_WITH_CODE_ALREADY_EXISTS",
          "PURCHASE_ORDER_LINE_SERVICE_BASED_FLAG_UPDATE_FAIL",
          "UPDATE_OF_DEFAULT_CURRENCY_IS_NOT_POSSIBLE",
          "NON_LEAF_LEVEL_CATEGORY",
          "PURCHASE_ORDER_TOO_MANY_IDENTIFIERS",
          "PURCHASE_ORDER_IDENTIFIERS_CONTAIN_DUPLICATES",
          "CATEGORY_NOT_FOUND",
          "COMPANY_ALREADY_EXIST",
          "SUPPLIER_ALREADY_EXIST",
          "LOCAL_DATETIME",
          "AUTHORIZATION_GROUP_WITH_NAME_AND_COMPANY_ALREADY_EXIST",
          "AUTHORIZATION_GROUP_CANNOT_UPDATE_COMPANY",
          "DOCUMENTTYPE_NOT_FOUND",
          "AUTHORIZATION_GROUP_CANNOT_UPDATE_CURRENCY",
          "AUTHORIZATION_GROUP_SUPPLIER_DOES_NOT_EXIST_IN_COMPANY_TREE",
          "AUTHORIZATION_GROUP_DIMENSION_DOES_NOT_EXIST",
          "AUTHORIZATION_GROUP_CREDITLIMIT_MUST_BE_NEGATIVE",
          "AUTHORIZATION_GROUP_DEBITLIMIT_MUST_BE_POSITIVE",
          "DIMENSION_ALREADY_EXIST",
          "ISSUE_WITH_SAVING_ITEM_TRANSIENT_ERROR_DETECTED",
          "SUPPLIER_MANAGEMENT_FIELD_VALIDATION_ERROR",
          "PAYMENT_DETAILS_INVALID_COUNTRY_CODE",
          "PAYMENT_DETAILS_INVALID_STATE_CODE",
          "COMPANY_INVALID_COUNTRY_CODE",
          "PAYMENT_DETAILS_INVALID_DESCRIPTION",
          "PURCHASE_ORDER_TOO_MANY_ITEM_NUMBERS",
          "PURCHASE_ORDER_ITEM_NUMBERS_CONTAIN_DUPLICATES",
          "MULTIPLE_RESTRICTIONS_TYPE_DEFINED_FOR_SAME_CONTROLLING_VALUE",
          "ISSUE_WITH_SAVING_WHOLE_BATCH_OF_MASTERDATA_PLEASE_REPROCESS",
          "SUPPLIER_COUNTRY_CODE_NOT_EXIST"
        ]
      },
      "ActualPaymentDateResponseDto": {
        "type": "object",
        "properties": {
          "actualPaymentDate": {
            "$ref": "#/components/schemas/IntegrationActualPaymentDateDto"
          },
          "correlationKey": {
            "type": "string",
            "xml": {
              "name": "CorrelationKey"
            }
          }
        },
        "xml": {
          "name": "ActualPaymentDateResponse"
        }
      },
      "IntegrationActualPaymentDateDto": {
        "required": [
          "actualPaymentDate"
        ],
        "type": "object",
        "properties": {
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "actualPaymentDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "ActualPaymentDate"
            }
          }
        },
        "xml": {
          "name": "ActualPaymentDate"
        }
      },
      "StatusLink": {
        "type": "object",
        "properties": {
          "ref": {
            "type": "string",
            "xml": {
              "name": "Ref"
            }
          },
          "status": {
            "type": "string",
            "xml": {
              "name": "Status"
            }
          }
        },
        "xml": {
          "name": "StatusLink"
        }
      },
      "IntegrationApprovalGroupDto": {
        "required": [
          "CompanyId",
          "ExternalSystemId",
          "IsActive",
          "Name"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive.",
            "xml": {
              "name": "IsActive"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "Unique identifier for the Company. I.e. CompanyId and not the ExternalSystemId for the Company.",
            "xml": {
              "name": "CompanyId"
            }
          },
          "currencyCode": {
            "maxLength": 100,
            "type": "string",
            "description": "ISO Code of currency.",
            "xml": {
              "name": "CurrencyCode"
            }
          },
          "name": {
            "maxLength": 450,
            "type": "string",
            "description": "Name of the Authorization group.",
            "xml": {
              "name": "Name"
            }
          },
          "documentTypes": {
            "type": "array",
            "xml": {
              "wrapped": true,
              "name": "DocumentTypes"
            },
            "items": {
              "type": "string",
              "description": "Type of document the authorization group will be connected to. Defaults to 'Document' if not provided.",
              "xml": {
                "name": "DocumentType",
                "wrapped": true
              },
              "enum": [
                "Document",
                "Invoice",
                "SupplierInvoice",
                "ExpenseInvoice",
                "OrderbasedInvoice",
                "PaymentRequest",
                "PurchaseRequisition",
                "ContractbasedInvoice"
              ]
            }
          },
          "generalDebitLimit": {
            "type": "number",
            "description": "A general debit limit for the selected document types. This is often used as fallback limit if no other limit is specified. Can be set to a fixed value, unlimited, or undefined.",
            "format": "decimal",
            "xml": {
              "name": "GeneralDebitLimit"
            }
          },
          "generalDebitUnlimited": {
            "type": "boolean",
            "description": "Set to true if the debit limit is unlimited.",
            "xml": {
              "name": "GeneralDebitUnlimited"
            }
          },
          "generalCreditLimit": {
            "type": "number",
            "description": "A general credit limit for the selected document types. This is often used as fallback limit if no other limit is specified. Can be set to a fixed value, unlimited, or undefined.",
            "format": "decimal",
            "xml": {
              "name": "GeneralCreditLimit"
            }
          },
          "generalCreditUnlimited": {
            "type": "boolean",
            "description": "Set to true if the credit limit is unlimited.",
            "xml": {
              "name": "GeneralCreditUnlimited"
            }
          },
          "deviationDebitLimit": {
            "type": "number",
            "description": "Deviation limit specifies the authorization limit for a sum of all deviations on a single document.",
            "format": "decimal",
            "xml": {
              "name": "DeviationDebitLimit"
            }
          },
          "deviationDebitUnlimited": {
            "type": "boolean",
            "description": "Set to true if the deviation debit limit is unlimited.",
            "xml": {
              "name": "DeviationDebitUnlimited"
            }
          },
          "deviationCreditLimit": {
            "type": "number",
            "description": "Deviation limit specifies the authorization limit for a sum of all deviations on a single document.",
            "format": "decimal",
            "xml": {
              "name": "DeviationCreditLimit"
            }
          },
          "deviationCreditUnlimited": {
            "type": "boolean",
            "description": "Set to true if the deviation credit limit is unlimited.",
            "xml": {
              "name": "DeviationCreditUnlimited"
            }
          },
          "supplierPermissions": {
            "type": "array",
            "description": "The limit is 500 items per batch.",
            "xml": {
              "wrapped": true,
              "name": "SupplierPermissions"
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationSupplierPermissionDto"
            }
          },
          "dimensionPermissions": {
            "type": "array",
            "description": "The limit is 500 items per batch.",
            "xml": {
              "wrapped": true,
              "name": "DimensionPermissions"
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationDimensionPermissionDto"
            }
          }
        },
        "xml": {
          "name": "ApprovalGroup"
        }
      },
      "IntegrationSupplierPermissionDto": {
        "required": [
          "SupplierId"
        ],
        "type": "object",
        "properties": {
          "debitLimit": {
            "type": "number",
            "description": "A debit limit set for a specific supplier.",
            "format": "decimal",
            "xml": {
              "name": "DebitLimit"
            }
          },
          "debitUnlimited": {
            "type": "boolean",
            "description": "Set to true if the debit limit is unlimited for specific supplier.",
            "xml": {
              "name": "DebitUnlimited"
            }
          },
          "creditLimit": {
            "type": "number",
            "description": "A credit limit set for a specific supplier.",
            "format": "decimal",
            "xml": {
              "name": "CreditLimit"
            }
          },
          "creditUnlimited": {
            "type": "boolean",
            "description": "Set to true if the debit limit is unlimited for specific supplier.",
            "xml": {
              "name": "CreditUnlimited"
            }
          },
          "supplierId": {
            "maxLength": 450,
            "type": "string",
            "description": "Unique identifier for the Supplier. I.e. SupplierId and not the ExternalSystemId for the Supplier.",
            "xml": {
              "name": "SupplierId"
            }
          }
        },
        "xml": {
          "name": "SupplierPermission"
        }
      },
      "IntegrationDimensionPermissionDto": {
        "required": [
          "DimensionName"
        ],
        "type": "object",
        "properties": {
          "debitLimit": {
            "type": "number",
            "description": "A debit limit set for a specific dimension value.",
            "format": "decimal",
            "xml": {
              "name": "DebitLimit"
            }
          },
          "debitUnlimited": {
            "type": "boolean",
            "description": "Set to true if the debit limit is unlimited for specific dimension value.",
            "xml": {
              "name": "DebitUnlimited"
            }
          },
          "creditLimit": {
            "type": "number",
            "description": "A credit limit set for a specific dimension value.",
            "format": "decimal",
            "xml": {
              "name": "CreditLimit"
            }
          },
          "creditUnlimited": {
            "type": "boolean",
            "description": "Set to true if the debit limit is unlimited for specific dimension value.",
            "xml": {
              "name": "CreditUnlimited"
            }
          },
          "approvalRights": {
            "type": "boolean",
            "description": "Approval right gives a user the right to approve a certain coding line.",
            "xml": {
              "name": "ApprovalRights"
            }
          },
          "codingRights": {
            "type": "boolean",
            "description": "Coding right for a specific dimension value gives a user the right to add and modify coding with that value.",
            "xml": {
              "name": "CodingRights"
            }
          },
          "dimensionName": {
            "type": "string",
            "description": "Name of the dimension.",
            "enum": [
              "Dimension1",
              "Dimension2",
              "Dimension3",
              "Dimension4",
              "Dimension5",
              "Dimension6",
              "Dimension7",
              "Dimension8",
              "Dimension9",
              "Dimension10",
              "Dimension11",
              "Dimension12"
            ],
            "xml": {
              "name": "DimensionName"
            }
          },
          "description": {
            "maxLength": 450,
            "type": "string",
            "description": "Referring to Dimension description. Used to include certain dimension descriptions from a range. The asterisk (*) is used as wildcard.",
            "xml": {
              "name": "Description"
            }
          },
          "value": {
            "type": "string",
            "description": "Referring to Dimension value. Used to include certain dimension values from a range. The asterisk (*) is used as wildcard.",
            "xml": {
              "name": "Value"
            }
          },
          "exceptionPermissions": {
            "type": "array",
            "xml": {
              "wrapped": true,
              "name": "ExceptionPermissions"
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationExceptionPermissionDto"
            }
          }
        },
        "xml": {
          "name": "DimensionPermission"
        }
      },
      "IntegrationExceptionPermissionDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Referring to Dimension description. Used to exclude certain dimension descriptions from a range. The asterisk (*) is used as wildcard.",
            "xml": {
              "name": "Description"
            }
          },
          "value": {
            "type": "string",
            "description": "Referring to Dimension value. Used to include certain dimension values from a range. The asterisk (*) is used as wildcard.",
            "xml": {
              "name": "Value"
            }
          }
        },
        "xml": {
          "name": "ExceptionPermission"
        }
      },
      "CompanyExportPageDto": {
        "required": [
          "limit",
          "offset",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "Total"
            }
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "Offset"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "Limit"
            }
          },
          "companies": {
            "type": "array",
            "xml": {
              "name": "Companies",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/CompanyDto"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/Paging"
          }
        },
        "xml": {
          "name": "CompanyPage"
        }
      },
      "CompanyDto": {
        "required": [
          "isActive",
          "isVirtualCompany"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "type": "string",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "name": "Name"
            }
          },
          "externalDisplayName": {
            "type": "string",
            "xml": {
              "name": "ExternalDisplayName"
            }
          },
          "companyId": {
            "type": "string",
            "xml": {
              "name": "CompanyId"
            }
          },
          "organizationNumber": {
            "type": "string",
            "xml": {
              "name": "OrganizationNumber"
            }
          },
          "parentCompany": {
            "type": "string",
            "xml": {
              "name": "ParentCompany"
            }
          },
          "isVirtualCompany": {
            "type": "boolean",
            "xml": {
              "name": "IsVirtualCompany"
            }
          },
          "identifiers": {
            "type": "array",
            "xml": {
              "name": "Identifiers",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IdentifierDto"
            }
          },
          "addresses": {
            "type": "array",
            "xml": {
              "name": "Addresses",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/AddressDto"
            }
          },
          "isActive": {
            "type": "boolean",
            "xml": {
              "name": "IsActive"
            }
          },
          "globalId": {
            "type": "string",
            "xml": {
              "name": "GlobalId"
            }
          },
          "accountingCurrencyCode": {
            "type": "string",
            "xml": {
              "name": "AccountingCurrencyCode"
            }
          },
          "countryCode": {
            "type": "string",
            "xml": {
              "name": "CountryCode"
            }
          }
        },
        "xml": {
          "name": "Company"
        }
      },
      "IdentifierDto": {
        "type": "object",
        "properties": {
          "identifierType": {
            "type": "string",
            "xml": {
              "name": "IdentifierType"
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "name": "Value"
            }
          }
        },
        "xml": {
          "name": "Identifier"
        }
      },
      "AddressDto": {
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string",
            "xml": {
              "name": "AddressType"
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "name": "Name"
            }
          },
          "streetAddress": {
            "type": "string",
            "xml": {
              "name": "StreetAddress"
            }
          },
          "state": {
            "type": "string",
            "xml": {
              "name": "State"
            }
          },
          "zip": {
            "type": "string",
            "xml": {
              "name": "Zip"
            }
          },
          "country": {
            "type": "string",
            "xml": {
              "name": "Country"
            }
          },
          "city": {
            "type": "string",
            "xml": {
              "name": "City"
            }
          },
          "telephone": {
            "type": "string",
            "xml": {
              "name": "Telephone"
            }
          },
          "fax": {
            "type": "string",
            "xml": {
              "name": "Fax"
            }
          },
          "homepage": {
            "type": "string",
            "xml": {
              "name": "Homepage"
            }
          },
          "email": {
            "type": "string",
            "xml": {
              "name": "Email"
            }
          }
        },
        "xml": {
          "name": "Address"
        }
      },
      "Paging": {
        "type": "object",
        "properties": {
          "previous": {
            "type": "string",
            "xml": {
              "name": "Previous"
            }
          },
          "next": {
            "type": "string",
            "xml": {
              "name": "Next"
            }
          }
        },
        "xml": {
          "name": "Paging"
        }
      },
      "IntegrationCompanyDto": {
        "required": [
          "accountingCurrencyCode",
          "companyId",
          "externalSystemId",
          "isActive",
          "isVirtual",
          "name",
          "organizationNumber",
          "parent"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "name": {
            "maxLength": 100,
            "type": "string",
            "description": "Company name.",
            "xml": {
              "name": "Name"
            }
          },
          "organizationNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "Organization number for company.",
            "xml": {
              "name": "OrganizationNumber"
            }
          },
          "parent": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to parent company in Medius.",
            "xml": {
              "name": "Parent"
            }
          },
          "isVirtual": {
            "type": "boolean",
            "description": "Identifies if company is a virtual or real company in Medius.",
            "xml": {
              "name": "IsVirtual"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive",
            "xml": {
              "name": "IsActive"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "Unique company identifier",
            "xml": {
              "name": "CompanyId"
            }
          },
          "accountingCurrencyCode": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding Currency.",
            "xml": {
              "name": "AccountingCurrencyCode"
            }
          },
          "companyIdentifiers": {
            "type": "array",
            "xml": {
              "name": "CompanyIdentifiers",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationCompanyIdentifierDto"
            }
          },
          "countryCode": {
            "type": "string",
            "maxLength": 2,
            "description": "The company country of origin. Can be used to track local regulations and data storage requirements. Format: ISO 3166-1 alpha 2, two-letter country code.",
            "xml": {
              "name": "CountryCode"
            }
          }
        },
        "xml": {
          "name": "Company"
        }
      },
      "IntegrationCompanyIdentifierDto": {
        "type": "object",
        "properties": {
          "identifierType": {
            "maxLength": 450,
            "type": "string",
            "description": "See list of available values for the identifier type. In GUI they are named differently, eg. Bank Account for BANK_ACCOUNT",
            "xml": {
              "name": "IdentifierType"
            },
            "enum": [
              "BANK_ACCOUNT",
              "ORGANIZATION_NUMBER",
              "VAT_REGISTRATION_NUMBER",
              "GLN_NUMBER",
              "IBAN_NUMBER",
              "OTHER",
              "ExternalSystemIdentifier",
              "CompanyNameIdentifier",
              "CompanyIdIdentifier"
            ]
          },
          "identifierValue": {
            "maxLength": 450,
            "type": "string",
            "description": "Identifier value, e.g. bank account number",
            "xml": {
              "name": "IdentifierValue"
            }
          }
        },
        "xml": {
          "name": "CompanyIdentifier"
        }
      },
      "IntegrationCurrencyDto": {
        "required": [
          "code",
          "externalSystemId",
          "isActive"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "code": {
            "maxLength": 10,
            "type": "string",
            "description": "ISO Code of currency",
            "xml": {
              "name": "Code"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive",
            "xml": {
              "name": "IsActive"
            }
          }
        },
        "xml": {
          "name": "Currency"
        }
      },
      "IntegrationCurrencyRateDto": {
        "required": [
          "code",
          "companyId",
          "externalSystemId",
          "rate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CompanyId"
            }
          },
          "code": {
            "maxLength": 10,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Code"
            }
          },
          "rate": {
            "type": "number",
            "description": "Currency rate. In 'to-format', e.g. Invoice currency * rate = Accounting currency. If you import rate = 0, the rate will automatically be set to inactive within the application. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "Rate"
            }
          },
          "startDate": {
            "type": "string",
            "description": "Start date of currency",
            "format": "date-time",
            "xml": {
              "name": "StartDate"
            }
          },
          "endDate": {
            "type": "string",
            "description": "End date of currency. If not provided, default = 9999-01-01 (YYYY-MM-DD)",
            "format": "date-time",
            "xml": {
              "name": "EndDate"
            }
          }
        },
        "xml": {
          "name": "CurrencyRate"
        }
      },
      "IntegrationDeliveryTermDto": {
        "required": [
          "companyId",
          "deliveryTermId",
          "externalSystemId",
          "isActive"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive",
            "xml": {
              "name": "IsActive"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CompanyId"
            }
          },
          "deliveryTermId": {
            "maxLength": 100,
            "type": "string",
            "description": "Unique identifier of the term",
            "xml": {
              "name": "DeliveryTermId"
            }
          },
          "name": {
            "maxLength": 450,
            "type": "string",
            "description": "Name of delivery term",
            "xml": {
              "name": "Name"
            }
          },
          "description": {
            "maxLength": 450,
            "type": "string",
            "description": "Description of the delivery term",
            "xml": {
              "name": "Description"
            }
          },
          "forceLocation": {
            "type": "boolean",
            "description": "If usage of the delivery term requires the user to enter a location, e.g., for CIP.",
            "xml": {
              "name": "ForceLocation"
            }
          }
        },
        "xml": {
          "name": "DeliveryTerm"
        }
      },
      "IntegrationDimensionValueConfigurationDto": {
        "required": [
          "company",
          "dimensionValue"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "company": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Company"
            }
          },
          "responsible": {
            "maxLength": 60,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP. Needs to be User.Username in Medius, *Can be empty if ResponsibleRole is used",
            "xml": {
              "name": "Responsible"
            }
          },
          "responsibleRole": {
            "maxLength": 60,
            "type": "string",
            "description": "Same as Responsible, but instead of User name it is Role name. Needs to be Role.Name in Medius, *Can be used instead of Responsible",
            "xml": {
              "name": "ResponsibleRole"
            }
          },
          "dimensionValue": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "DimensionValue"
            }
          },
          "responsibles": {
            "type": "array",
            "description": "Beta feature. Only available for Pilot customers.",
            "xml": {
              "name": "Responsibles",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationDimensionValueConfigurationResponsibleDto"
            }
          }
        },
        "xml": {
          "name": "DimensionValueConfiguration"
        }
      },
      "IntegrationDimensionValueConfigurationResponsibleDto": {
        "required": [
          "orderId"
        ],
        "type": "object",
        "properties": {
          "responsibleUser": {
            "type": "string",
            "description": "Beta feature. Only available for Pilot customers.",
            "xml": {
              "name": "ResponsibleUser"
            }
          },
          "responsibleRole": {
            "type": "string",
            "description": "Beta feature. Only available for Pilot customers.",
            "xml": {
              "name": "ResponsibleRole"
            }
          },
          "orderId": {
            "type": "integer",
            "description": "Beta feature. Only available for Pilot customers.",
            "format": "int32",
            "xml": {
              "name": "OrderId"
            }
          }
        },
        "description": "Beta feature. Only available for Pilot customers.",
        "xml": {
          "name": "DimensionValueConfigurationResponsible"
        }
      },
      "IntegrationDimensionValueDto": {
        "required": [
          "companyId",
          "description",
          "dimensionName",
          "externalSystemId",
          "isActive",
          "value"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive",
            "xml": {
              "name": "IsActive"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CompanyId"
            }
          },
          "dimensionName": {
            "maxLength": 450,
            "type": "string",
            "description": "Define the dimension order. Values: DIMENSION1, DIMENSION2, …, DIMENSION12",
            "xml": {
              "name": "DimensionName"
            }
          },
          "description": {
            "maxLength": 100,
            "type": "string",
            "description": "Description of the dimension value",
            "xml": {
              "name": "Description"
            }
          },
          "value": {
            "maxLength": 50,
            "type": "string",
            "description": "The dimension value",
            "xml": {
              "name": "Value"
            }
          },
          "taxIndicator1": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity (TaxGroup)",
            "xml": {
              "name": "TaxIndicator1"
            }
          },
          "taxIndicator2": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity (TaxGroup)",
            "xml": {
              "name": "TaxIndicator2"
            }
          },
          "isFictive": {
            "type": "boolean",
            "description": "If the entity is fictive or not",
            "xml": {
              "name": "IsFictive"
            }
          },
          "usableInPurchase": {
            "type": "boolean",
            "description": "Is dimension usable in Medius Buy",
            "xml": {
              "name": "UsableInPurchase"
            }
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          }
        },
        "xml": {
          "name": "DimensionValue"
        }
      },
      "FileLink": {
        "type": "object",
        "properties": {
          "ref": {
            "type": "string",
            "xml": {
              "name": "Ref"
            }
          },
          "fileName": {
            "type": "string",
            "xml": {
              "name": "FileName"
            }
          },
          "classification": {
            "type": "string",
            "xml": {
              "name": "Classification"
            }
          }
        },
        "xml": {
          "name": "FileLink"
        }
      },
      "ErrorResponseDto": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "xml": {
              "name": "Errors",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationErrorDto"
            }
          },
          "correlationKey": {
            "type": "string",
            "xml": {
              "name": "CorrelationKey"
            }
          }
        },
        "xml": {
          "name": "ErrorResponse"
        }
      },
      "IntegrationErrorDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "xml": {
              "name": "Message"
            }
          }
        },
        "xml": {
          "name": "Error"
        }
      },
      "IntegrationItemDto": {
        "required": [
          "companyId",
          "description",
          "externalSystemId",
          "isActive",
          "number",
          "supplierItems"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive",
            "xml": {
              "name": "IsActive"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CompanyId"
            }
          },
          "description": {
            "maxLength": 450,
            "type": "string",
            "description": "Description",
            "xml": {
              "name": "Description"
            }
          },
          "number": {
            "maxLength": 200,
            "type": "string",
            "description": "Item number in ERP system",
            "xml": {
              "name": "Number"
            }
          },
          "reference": {
            "maxLength": 200,
            "type": "string",
            "description": "Reference. Format: 'firstName lastName' or 'username'",
            "xml": {
              "name": "Reference"
            }
          },
          "supplierItems": {
            "type": "array",
            "xml": {
              "name": "SupplierItems",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationSupplierItemDto"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          }
        },
        "xml": {
          "name": "Item"
        }
      },
      "IntegrationSupplierItemDto": {
        "required": [
          "externalSystemId",
          "partNumber",
          "supplier"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "IsActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive. Default value 1",
            "xml": {
              "name": "IsActive"
            }
          },
          "partNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Supplier part number",
            "xml": {
              "name": "PartNumber"
            }
          },
          "supplier": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Supplier"
            }
          },
          "unit": {
            "maxLength": 100,
            "type": "string",
            "description": "Unit",
            "xml": {
              "name": "Unit"
            }
          },
          "unitPrice": {
            "type": "number",
            "description": "Unit price. Decimal format (28,14)",
            "format": "decimal",
            "xml": {
              "name": "UnitPrice"
            }
          },
          "currencyCode": {
            "maxLength": 100,
            "type": "string",
            "description": "Currency of Unit price",
            "xml": {
              "name": "CurrencyCode"
            }
          }
        },
        "xml": {
          "name": "SupplierItem"
        }
      },
      "IntegrationPaymentInformationDto": {
        "type": "object",
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/IntegrationPaymentInformationInvoiceDto"
          },
          "paymentLine": {
            "$ref": "#/components/schemas/IntegrationPaymentLineDto"
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          }
        },
        "xml": {
          "name": "PaymentInformation"
        }
      },
      "IntegrationPaymentInformationInvoiceDto": {
        "required": [
          "companyId",
          "date",
          "invoiceNumber",
          "supplierId"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Invoice date.",
            "format": "date-time",
            "xml": {
              "name": "Date"
            }
          },
          "supplierId": {
            "type": "string",
            "description": "Id of the supplier. Supplier.SupplierId.",
            "xml": {
              "name": "SupplierId"
            }
          },
          "companyId": {
            "type": "string",
            "description": "Id of the company. Company.CompanyId.",
            "xml": {
              "name": "CompanyId"
            }
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Invoice number.",
            "xml": {
              "name": "InvoiceNumber"
            }
          }
        },
        "description": "Required to identify which invoice that should be updated with payment informations.",
        "xml": {
          "name": "Invoice"
        }
      },
      "IntegrationPaymentLineDto": {
        "required": [
          "date",
          "externalIdentifier",
          "method"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of the payment.",
            "format": "date-time",
            "xml": {
              "name": "Date"
            }
          },
          "amount": {
            "type": "number",
            "description": "Amount of the payment. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "Amount"
            }
          },
          "status": {
            "maxLength": 450,
            "type": "string",
            "description": "Status of the payment.",
            "xml": {
              "name": "Status"
            },
            "default": "Final",
            "enum": [
              "Partial",
              "Final",
              "Cancel"
            ]
          },
          "method": {
            "maxLength": 450,
            "type": "string",
            "description": "Method used for payment. I.e. Bank, Check. Free text description.",
            "xml": {
              "name": "Method"
            }
          },
          "identifier": {
            "maxLength": 450,
            "type": "string",
            "description": "Payment identifier. I.e. check number or bank account number.",
            "xml": {
              "name": "Identifier"
            }
          },
          "externalIdentifier": {
            "maxLength": 450,
            "type": "string",
            "description": "Unique identifier used to match incoming payment lines with already imported in order to update them. Can be the same as Identifier but must be unique for all payment lines in given invoice.",
            "xml": {
              "name": "ExternalIdentifier"
            }
          },
          "additionalInformation": {
            "maxLength": 450,
            "type": "string",
            "description": "Additional description of the payment Method.",
            "xml": {
              "name": "AdditionalInformation"
            }
          }
        },
        "description": "Information about the payment.",
        "xml": {
          "name": "PaymentLine"
        }
      },
      "IntegrationPaymentTermDto": {
        "required": [
          "companyId",
          "description",
          "externalSystemId",
          "name",
          "paymentTermId"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "IsActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive"
          },
          "lines": {
            "type": "array",
            "xml": {
              "name": "Lines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationPaymentTermLineDto"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CompanyId"
            }
          },
          "paymentTermId": {
            "maxLength": 100,
            "type": "string",
            "description": "Term id from ERP",
            "xml": {
              "name": "PaymentTermId"
            }
          },
          "name": {
            "maxLength": 450,
            "type": "string",
            "description": "Name of Payment term",
            "xml": {
              "name": "Name"
            }
          },
          "description": {
            "maxLength": 450,
            "type": "string",
            "description": "Description",
            "xml": {
              "name": "Description"
            }
          },
          "numberOfDays": {
            "type": "integer",
            "description": "Only for backward compatibility. Line with 0 cash discount should be used for NET payment term.",
            "format": "int32",
            "deprecated": true,
            "xml": {
              "name": "NumberOfDays"
            }
          },
          "numberOfFreeMonths": {
            "type": "integer",
            "description": "Only for backward compatibility. Line with 0 cash discount should be used for NET payment term.",
            "format": "int32",
            "deprecated": true,
            "xml": {
              "name": "NumberOfFreeMonths"
            }
          },
          "startDate": {
            "$ref": "#/components/schemas/IntegrationPaymentTermStartDateDto"
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          }
        },
        "xml": {
          "name": "PaymentTerm"
        }
      },
      "IntegrationPaymentTermLineDto": {
        "required": [
          "cashDiscountPercentage",
          "endOfMonth",
          "numberOfDays",
          "numberOfMonths"
        ],
        "type": "object",
        "properties": {
          "cashDiscountPercentage": {
            "type": "number",
            "description": "Cash discount. Value: >=0 and <= 100. Decimal format (19,5)",
            "format": "decimal",
            "xml": {
              "name": "CashDiscountPercentage"
            }
          },
          "endOfMonth": {
            "type": "boolean",
            "description": "If set to true, causes date to be set to the last day of the month the invoice was issued in. Values from the other fields are applied to the date after that.",
            "xml": {
              "name": "EndOfMonth"
            }
          },
          "fixedPaymentDay": {
            "type": "integer",
            "description": "Day in month when the payment should be made. Value: >=1 and <=31 or null",
            "format": "int32",
            "xml": {
              "name": "FixedPaymentDay"
            }
          },
          "numberOfDays": {
            "type": "integer",
            "description": "Number of days within the term",
            "format": "int32",
            "xml": {
              "name": "NumberOfDays"
            }
          },
          "numberOfMonths": {
            "type": "integer",
            "description": "Number of months. Day of month remains the same. Value: >=0",
            "format": "int32",
            "xml": {
              "name": "NumberOfMonths"
            }
          }
        },
        "xml": {
          "name": "PaymentTermLine"
        }
      },
      "IntegrationPaymentTermStartDateDto": {
        "type": "object",
        "properties": {
          "type": {
            "maxLength": 450,
            "type": "string",
            "description": "Start date type for calculating due date. Can be null.",
            "xml": {
              "name": "Type"
            },
            "enum": [
              "InvoiceDate",
              "ImportDate",
              "FixedDay"
            ]
          },
          "fixedDay": {
            "type": "integer",
            "description": "The first day with the specified number after the invoice or imported date will be used as start date. Must be set when Type is set to FixedDay. Value: >=1 and <=31 or null",
            "format": "int32",
            "xml": {
              "name": "FixedDay"
            }
          },
          "numberOfMonths": {
            "type": "integer",
            "description": "Adds the specified number of months to calculate the start date. Value: >=0 and <= 255 or null",
            "format": "int32",
            "xml": {
              "name": "NumberOfMonths"
            }
          }
        },
        "xml": {
          "name": "StartDate"
        }
      },
      "IntegrationPeriodDto": {
        "required": [
          "companyId",
          "documentType",
          "endDate",
          "externalSystemId",
          "integrationMessageType",
          "isOpen",
          "name",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity.",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "name": {
            "maxLength": 450,
            "type": "string",
            "description": "Name of the period.",
            "xml": {
              "name": "Name"
            }
          },
          "isOpen": {
            "type": "boolean",
            "description": "If the period is open or closed.",
            "xml": {
              "name": "IsOpen"
            }
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the period.",
            "format": "date-time",
            "xml": {
              "name": "StartDate"
            }
          },
          "endDate": {
            "type": "string",
            "description": "End date of the period.",
            "format": "date-time",
            "xml": {
              "name": "EndDate"
            }
          },
          "fixedDate": {
            "type": "string",
            "description": "Fixed date of the period.",
            "format": "date-time",
            "xml": {
              "name": "FixedDate"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CompanyId"
            }
          },
          "integrationMessageType": {
            "maxLength": 100,
            "type": "string",
            "description": "Integration step in which the period is used.",
            "xml": {
              "name": "IntegrationMessageType"
            },
            "enum": [
              "PRELIMINARY",
              "FINAL",
              "PRELIMINARY_AND_FINAL"
            ]
          },
          "documentType": {
            "maxLength": 100,
            "type": "string",
            "description": "Type of document for which the period is used.",
            "xml": {
              "name": "DocumentType"
            },
            "enum": [
              "EXPENSE",
              "ORDER_BASED",
              "CONTRACT_BASED",
              "SUPPLIER_INVOICE"
            ]
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          }
        },
        "xml": {
          "name": "Period"
        }
      },
      "PurchaseOrderExportPageDto": {
        "required": [
          "limit",
          "offset",
          "total"
        ],
        "type": "object",
        "properties": {
          "purchaseOrders": {
            "type": "array",
            "xml": {
              "name": "PurchaseOrders",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/PurchaseOrderDto"
            }
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "Offset"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "Limit"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "Total"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/Paging"
          }
        },
        "xml": {
          "name": "PurchaseOrderPage"
        }
      },
      "PurchaseOrderDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "name": "Name"
            }
          },
          "supplierId": {
            "type": "string",
            "xml": {
              "name": "SupplierId"
            }
          },
          "supplierGlobalId": {
            "type": "string",
            "xml": {
              "name": "SupplierGlobalId"
            }
          },
          "currencyCode": {
            "type": "string",
            "xml": {
              "name": "CurrencyCode"
            }
          },
          "taxIndicator1": {
            "type": "string",
            "xml": {
              "name": "TaxIndicator1"
            }
          },
          "taxIndicator2": {
            "type": "string",
            "xml": {
              "name": "TaxIndicator2"
            }
          },
          "companyId": {
            "type": "string",
            "xml": {
              "name": "CompanyId"
            }
          },
          "companyName": {
            "type": "string",
            "xml": {
              "name": "CompanyName"
            }
          },
          "companyGlobalId": {
            "type": "string",
            "xml": {
              "name": "CompanyGlobalId"
            }
          },
          "purchaseOrderLines": {
            "type": "array",
            "xml": {
              "name": "PurchaseOrderLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/PurchaseOrderLineDto"
            }
          },
          "orderIdentifier": {
            "type": "string",
            "xml": {
              "name": "OrderIdentifier"
            }
          },
          "orderIdentifier2": {
            "type": "string",
            "xml": {
              "name": "OrderIdentifier2"
            }
          },
          "supplierName": {
            "type": "string",
            "xml": {
              "name": "SupplierName"
            }
          },
          "orderType": {
            "type": "string",
            "xml": {
              "name": "OrderType"
            }
          },
          "globalId": {
            "type": "string",
            "xml": {
              "name": "GlobalId"
            }
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "Amount"
            }
          },
          "reference": {
            "type": "string",
            "xml": {
              "name": "Reference"
            }
          },
          "reference2": {
            "type": "string",
            "xml": {
              "name": "Reference2"
            }
          },
          "paymentTermId": {
            "type": "string",
            "xml": {
              "name": "PaymentTermId"
            }
          },
          "registerDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "RegisterDate"
            }
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "DueDate"
            }
          },
          "additionalOrderIdentifiers": {
            "type": "array",
            "xml": {
              "name": "AdditionalOrderIdentifiers",
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "AdditionalOrderIdentifier",
                "wrapped": true
              }
            }
          },
          "erpSourceId": {
            "type": "string",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "isActive": {
            "type": "boolean",
            "xml": {
              "name": "IsActive"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrder"
        }
      },
      "PurchaseOrderLineDto": {
        "required": [
          "isServiceBased",
          "quantity",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "lineNumber": {
            "type": "string",
            "xml": {
              "name": "LineNumber"
            }
          },
          "itemNumber": {
            "type": "string",
            "xml": {
              "name": "ItemNumber"
            }
          },
          "itemDescription": {
            "type": "string",
            "xml": {
              "name": "ItemDescription"
            }
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "UnitPrice"
            }
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "Quantity"
            }
          },
          "isServiceBased": {
            "type": "boolean",
            "xml": {
              "name": "IsServiceBased"
            }
          },
          "taxIndicator1": {
            "type": "string",
            "xml": {
              "name": "TaxIndicator1"
            }
          },
          "taxIndicator2": {
            "type": "string",
            "xml": {
              "name": "TaxIndicator2"
            }
          },
          "unit": {
            "type": "string",
            "xml": {
              "name": "Unit"
            }
          },
          "isTwoWayMatch": {
            "type": "boolean",
            "xml": {
              "name": "IsTwoWayMatch"
            }
          },
          "codingLines": {
            "type": "array",
            "xml": {
              "name": "CodingLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/PurchaseOrderCodingLineDto"
            }
          },
          "deliveryLines": {
            "type": "array",
            "xml": {
              "name": "DeliveryLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/DeliveryLineDto"
            }
          },
          "supplierItems": {
            "type": "array",
            "xml": {
              "name": "SupplierItems",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/SupplierItemDto"
            }
          },
          "erpSourceId": {
            "type": "string",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "isActive": {
            "type": "boolean",
            "xml": {
              "name": "IsActive"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrderLine"
        }
      },
      "PurchaseOrderCodingLineDto": {
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "dimensions": {
            "$ref": "#/components/schemas/PurchaseOrderCodingLineDimensionsDto"
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "Amount"
            }
          },
          "tag": {
            "type": "string",
            "xml": {
              "name": "Tag"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrderCodingLine"
        }
      },
      "PurchaseOrderCodingLineDimensionsDto": {
        "type": "object",
        "properties": {
          "dimension1": {
            "type": "string",
            "xml": {
              "name": "Dimension1"
            }
          },
          "dimension2": {
            "type": "string",
            "xml": {
              "name": "Dimension2"
            }
          },
          "dimension3": {
            "type": "string",
            "xml": {
              "name": "Dimension3"
            }
          },
          "dimension4": {
            "type": "string",
            "xml": {
              "name": "Dimension4"
            }
          },
          "dimension5": {
            "type": "string",
            "xml": {
              "name": "Dimension5"
            }
          },
          "dimension6": {
            "type": "string",
            "xml": {
              "name": "Dimension6"
            }
          },
          "dimension7": {
            "type": "string",
            "xml": {
              "name": "Dimension7"
            }
          },
          "dimension8": {
            "type": "string",
            "xml": {
              "name": "Dimension8"
            }
          },
          "dimension9": {
            "type": "string",
            "xml": {
              "name": "Dimension9"
            }
          },
          "dimension10": {
            "type": "string",
            "xml": {
              "name": "Dimension10"
            }
          },
          "dimension11": {
            "type": "string",
            "xml": {
              "name": "Dimension11"
            }
          },
          "dimension12": {
            "type": "string",
            "xml": {
              "name": "Dimension12"
            }
          },
          "freeText1": {
            "type": "string",
            "xml": {
              "name": "FreeText1"
            }
          },
          "freeText2": {
            "type": "string",
            "xml": {
              "name": "FreeText2"
            }
          },
          "freeText3": {
            "type": "string",
            "xml": {
              "name": "FreeText3"
            }
          },
          "freeText4": {
            "type": "string",
            "xml": {
              "name": "FreeText4"
            }
          },
          "freeText5": {
            "type": "string",
            "xml": {
              "name": "FreeText5"
            }
          }
        },
        "xml": {
          "name": "Dimensions"
        }
      },
      "DeliveryLineDto": {
        "required": [
          "deliveredDate",
          "deliveredQuantity"
        ],
        "type": "object",
        "properties": {
          "deliveredQuantity": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "DeliveredQuantity"
            }
          },
          "deliveredDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "DeliveredDate"
            }
          },
          "deliveryNote": {
            "type": "string",
            "xml": {
              "name": "DeliveryNote"
            }
          },
          "erpSourceId": {
            "type": "string",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "isActive": {
            "type": "boolean",
            "xml": {
              "name": "IsActive"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          }
        },
        "xml": {
          "name": "DeliveryLine"
        }
      },
      "MasterDataDto": {
        "required": [
          "isActive"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "type": "string",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "isActive": {
            "type": "boolean",
            "xml": {
              "name": "IsActive"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          }
        }
      },
      "SupplierItemDto": {
        "type": "object",
        "properties": {
          "itemNumber": {
            "type": "string",
            "xml": {
              "name": "ItemNumber"
            }
          },
          "erpSourceId": {
            "type": "string",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "isActive": {
            "type": "boolean",
            "xml": {
              "name": "IsActive"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          }
        },
        "xml": {
          "name": "SupplierItem"
        }
      },
      "IntegrationPurchaseOrderDto": {
        "required": [
          "amount",
          "companyId",
          "currencyCode",
          "externalSystemId",
          "isActive",
          "orderIdentifier",
          "purchaseOrderLines",
          "registerDate",
          "supplier"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive",
            "xml": {
              "name": "IsActive"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CompanyId"
            }
          },
          "amount": {
            "type": "number",
            "description": "Total NET amount of the order. Decimal format (28,14)",
            "format": "decimal",
            "xml": {
              "name": "Amount"
            }
          },
          "currencyCode": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CurrencyCode"
            }
          },
          "orderIdentifier": {
            "maxLength": 300,
            "type": "string",
            "description": "Order identifier, e.g. Order number",
            "xml": {
              "name": "OrderIdentifier"
            }
          },
          "orderIdentifier2": {
            "maxLength": 300,
            "type": "string",
            "description": "Order identifier 2, e.g. Order number 2",
            "xml": {
              "name": "OrderIdentifier2"
            }
          },
          "registerDate": {
            "type": "string",
            "description": "Date of register",
            "format": "date-time",
            "xml": {
              "name": "RegisterDate"
            }
          },
          "dueDate": {
            "type": "string",
            "description": "Purchase order due date",
            "format": "date-time",
            "xml": {
              "name": "DueDate"
            }
          },
          "supplier": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "Supplier"
            }
          },
          "reference": {
            "maxLength": 450,
            "type": "string",
            "description": "Purchase Order reference. Used to distribute invoice to PO responsible. UserName or Firstname + lastname (Maria Authorizer).",
            "xml": {
              "name": "Reference"
            }
          },
          "reference2": {
            "maxLength": 450,
            "type": "string",
            "description": "Purchase Order reference. Used to distribute invoice to PO responsible. UserName or Firstname + lastname (Maria Authorizer).",
            "xml": {
              "name": "Reference2"
            }
          },
          "paymentTerm": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "PaymentTerm"
            }
          },
          "prepayment": {
            "type": "boolean",
            "description": "Indicates whether the purchase order was prepaid outside of Medius. Invoices connected to a purchase order that was prepaid in the ERP can be stopped for manual post control using the *Match - Prepayment detected on connected PO(s)* document validation rule. Note that this field is imported with a purchase order and cannot be changed in Medius.",
            "xml": {
              "name": "Prepayment"
            }
          },
          "orderType": {
            "type": "string",
            "description": "If the order should be treated as internal or external order in Medius. T=external (default), M=internal.",
            "xml": {
              "name": "OrderType"
            },
            "enum": [
              "T",
              "M"
            ]
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "purchaseOrderLines": {
            "type": "array",
            "xml": {
              "name": "PurchaseOrderLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationPurchaseOrderLineDto"
            }
          },
          "purchaseOrderComments": {
            "type": "array",
            "xml": {
              "name": "PurchaseOrderComments",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationPurchaseOrderCommentDto"
            }
          },
          "additionalOrderIdentifiers": {
            "type": "array",

            "xml": {
              "name": "AdditionalOrderIdentifiers",
              "wrapped": true
            },
            "items": {
              "type": "string",
              "description": "Add additional order identifiers in this array. Make sure not to use the same `orderIdentifier` as provided in the header. No duplicates allowed.",
              "xml": {
                "name": "AdditionalOrderIdentifier",
                "wrapped": true
              }
            }
          }
        },
        "xml": {
          "name": "PurchaseOrder"
        }
      },
      "IntegrationPurchaseOrderLineDto": {
        "required": [
          "amount",
          "codingLines",
          "externalSystemId",
          "isActive",
          "lineNumber",
          "quantity",
          "unit",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive",
            "xml": {
              "name": "IsActive"
            }
          },
          "amount": {
            "type": "number",
            "description": "Total NET amount of the order line. Currency taken from header. Decimal format (28,14)",
            "format": "decimal",
            "xml": {
              "name": "Amount"
            }
          },
          "codingLines": {
            "type": "array",
            "xml": {
              "name": "CodingLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationPreCodingLineDto"
            }
          },
          "conversionFactor": {
            "type": "number",
            "description": "Function not available due to legacy reason. Set ``conversionFactor`` to 1.000 and use the UoM from the PO origin.",
            "format": "decimal",
            "xml": {
              "name": "ConversionFactor"
            }
          },
          "itemDescription": {
            "maxLength": 450,
            "type": "string",
            "description": "Item description",
            "xml": {
              "name": "ItemDescription"
            }
          },
          "itemNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Item number to be matched on invoice line",
            "xml": {
              "name": "ItemNumber"
            }
          },
          "lineNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "Line number of the order line",
            "xml": {
              "name": "LineNumber"
            }
          },
          "itemId": {
            "maxLength": 100,
            "type": "string",
            "description": "If items are imported it can be referenced by externalsystemid",
            "xml": {
              "name": "ItemId"
            }
          },
          "quantity": {
            "type": "number",
            "description": "Ordered quantity of the order line. Decimal format (28,14)",
            "format": "decimal",
            "xml": {
              "name": "Quantity"
            }
          },
          "unit": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Most common is to set to dash ``-`` which already is available in APA.",
            "xml": {
              "name": "Unit"
            }
          },
          "unitPrice": {
            "type": "number",
            "description": "Unit price of the order line. Currency taken from PO head. Decimal format (28,14)",
            "format": "decimal",
            "xml": {
              "name": "UnitPrice"
            }
          },
          "reference": {
            "maxLength": 450,
            "type": "string",
            "description": "Purchase Order line reference. Used to distribute invoice to PO responsible. UserName or Firstname + lastname (Maria Authorizer).",
            "xml": {
              "name": "Reference"
            }
          },
          "reference2": {
            "maxLength": 450,
            "type": "string",
            "description": "Purchase Order line reference 2. Used to distribute invoice to PO responsible. UserName or Firstname + lastname (Maria Authorizer).",
            "xml": {
              "name": "Reference2"
            }
          },
          "deliveryLines": {
            "type": "array",
            "xml": {
              "name": "DeliveryLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationDeliveryLineDto"
            }
          },
          "taxIndicator1": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity (TaxGroup)",
            "xml": {
              "name": "TaxIndicator1"
            }
          },
          "taxIndicator2": {
            "maxLength": 450,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity (TaxGroup)",
            "xml": {
              "name": "TaxIndicator2"
            }
          },
          "isServiceBased": {
            "type": "boolean",
            "description": "If purchase order line is service based or not. Only set during initial import, not possible to update.",
            "xml": {
              "name": "IsServiceBased"
            }
          },
          "isTwoWayMatch": {
            "type": "boolean",
            "description": "If true, no goods receipts are expected and IntegrationDeliveryLineDto should not be included.",
            "xml": {
              "name": "IsTwoWayMatch"
            }
          },
          "twoWayMatchTotalInvoicedQuantity": {
            "type": "number",
            "description": "Only for two-way match. When used, Medius can keep track of invoiced quantity in the case of two-way match.",
            "format": "decimal",
            "xml": {
              "name": "TwoWayMatchTotalInvoicedQuantity"
            }
          },
          "additionalItemNumbers": {
            "type": "array",
            "xml": {
              "name": "AdditionalItemNumbers",
              "wrapped": true
            },
            "items": {
              "type": "string",
              "maxLength": 450,
              "description": "Add additional item numbers to enhance the automatic connection on invoices. Import up to 5 additional item numbers. Duplicate checks are performed against `itemNumber` and `additionalItemNumbers`.",
              "xml": {
                "name": "AdditionalItemNumber",
                "wrapped": true
              }
            }
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrderLine"
        }
      },
      "IntegrationPreCodingLineDto": {
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "~~NET~~ amount for pre coding line. Amount field is mandatory in case there are multiple coding lines with same Type imported for one PO. Decimal format (28,14)",
            "format": "decimal",
            "xml": {
              "name": "Amount"
            }
          },
          "dimensions": {
            "$ref": "#/components/schemas/IntegrationCodingDimensionsMasterdataDto"
          },
          "type": {
            "maxLength": 450,
            "type": "string",
            "description": "See list for possible values. At least one CodingLine with Type = Cost is mandatory to provide to be able to import PO to Medius.",
            "xml": {
              "name": "Type"
            },
            "enum": [
              "Cost",
              "ExceptionType",
              "DeviationUnitPrice",
              "DeviationQuantity",
              "DeviationLineTotal",
              "DeviationNetAmount",
              "DeviationUnitPriceWithinTolerance",
              "DeviationQuantityWithinTolerance",
              "DeviationLineTotalWithinTolerance",
              "DeviationLineTotalApproved",
              "DeviationLineTotalRejected",
              "DeviationUnitPriceApproved",
              "DeviationUnitPriceRejected",
              "DeviationQuantityApproved",
              "DeviationQuantityRejected",
              "DeviationNetAmountApproved",
              "DeviationNetAmountRejected",
              "DeviationSameAsCost"
            ]
          }
        },
        "xml": {
          "name": "PreCodingLine"
        }
      },
      "IntegrationDeliveryLineDto": {
        "required": [
          "amount",
          "deliveryDate",
          "deliveryNumber",
          "externalSystemId",
          "isActive",
          "quantity",
          "unit",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive",
            "xml": {
              "name": "IsActive"
            }
          },
          "amount": {
            "type": "number",
            "description": "Total NET amount of the delivery line. Currency taken from PO head",
            "format": "decimal",
            "xml": {
              "name": "Amount"
            }
          },
          "conversionFactor": {
            "type": "number",
            "description": "Function not available due to legacy reason. Set ``conversionFactor`` to 1.000 and use the UoM from the PO origin.",
            "format": "decimal",
            "xml": {
              "name": "ConversionFactor"
            }
          },
          "deliveryDate": {
            "type": "string",
            "description": "Delivery date",
            "format": "date-time",
            "xml": {
              "name": "DeliveryDate"
            }
          },
          "deliveryNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Delivery number of this line",
            "xml": {
              "name": "DeliveryNumber"
            }
          },
          "deliveryNote": {
            "maxLength": 450,
            "type": "string",
            "description": "Delivery note",
            "xml": {
              "name": "DeliveryNote"
            }
          },
          "releaseNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Release number",
            "xml": {
              "name": "ReleaseNumber"
            }
          },
          "quantity": {
            "type": "number",
            "description": "Delivered quantity. Decimal format (28,14)",
            "format": "decimal",
            "xml": {
              "name": "Quantity"
            }
          },
          "unit": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Most common is to set to dash ``-`` which already is available in APA.",
            "xml": {
              "name": "Unit"
            }
          },
          "unitPrice": {
            "type": "number",
            "description": "Unit price. Currency taken from PO head. Decimal format (28,14)",
            "format": "decimal",
            "xml": {
              "name": "UnitPrice"
            }
          },
          "isFictive": {
            "type": "boolean",
            "description": "If the delivery line isfictive or not",
            "xml": {
              "name": "IsFictive"
            }
          },
          "totalInvoicedQuantity": {
            "type": "number",
            "description": "Total invoiced quantity. Decimal format (28,14)",
            "format": "decimal",
            "xml": {
              "name": "TotalInvoicedQuantity"
            }
          },
          "purchaseOrderLineExternalSystemId": {
            "maxLength": 450,
            "type": "string",
            "description": "ExternalSystemId to PurchaseOrderLine to which this delivery line should be connected to. Only used when doing a goods receipt import without PO header and PO line.",
            "xml": {
              "name": "PurchaseOrderLineExternalSystemId"
            }
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          }
        },
        "xml": {
          "name": "DeliveryLine"
        }
      },
      "ExternalSystemMetadataEntry": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 25,
            "type": "string",
            "description": "Name of the entry key. Custom value that will pass through Medius. The value will be available in the supplier invoice posting message.",
            "xml": {
              "name": "Name"
            }
          },
          "value": {
            "maxLength": 350,
            "type": "string",
            "description": "Custom value that will pass through Medius. The value will be available in the supplier invoice posting message.",
            "xml": {
              "name": "Value"
            }
          }
        },
        "xml": {
          "name": "ExternalSystemMetadataEntry"
        }
      },
      "IntegrationPurchaseOrderCommentDto": {
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 450,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "commentDate": {
            "type": "string",
            "description": "Date of the comment.",
            "format": "date-time",
            "xml": {
              "name": "CommentDate"
            }
          },
          "comment": {
            "maxLength": 450,
            "type": "string",
            "description": "Comment text.",
            "xml": {
              "name": "Comment"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrderComment"
        }
      },
      "PurchaseOrderRequestMessageDto": {
        "required": [
          "documentId",
          "orderDate",
          "requestedDeliveryDate",
          "total"
        ],
        "type": "object",
        "properties": {
          "correlationKey": {
            "type": "string",
            "xml": {
              "name": "CorrelationKey"
            }
          },
          "companyId": {
            "type": "string",
            "xml": {
              "name": "CompanyId"
            }
          },
          "companyExternalDisplayName": {
            "type": "string",
            "xml": {
              "name": "CompanyExternalDisplayName"
            }
          },
          "from": {
            "$ref": "#/components/schemas/CompanyProcurementDto"
          },
          "documentId": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "DocumentId"
            }
          },
          "to": {
            "$ref": "#/components/schemas/SupplierContactDto"
          },
          "supplierId": {
            "type": "string",
            "xml": {
              "name": "SupplierId"
            }
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "OrderDate"
            }
          },
          "orderNumber": {
            "type": "string",
            "xml": {
              "name": "OrderNumber"
            }
          },
          "revisionNumber": {
            "type": "string",
            "xml": {
              "name": "RevisionNumber"
            }
          },
          "revisionCreatedDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "RevisionCreatedDate"
            }
          },
          "requisitionId": {
            "type": "string",
            "xml": {
              "name": "RequisitionId"
            }
          },
          "total": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "Total"
            }
          },
          "currencyCode": {
            "type": "string",
            "xml": {
              "name": "CurrencyCode"
            }
          },
          "requestedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "RequestedDeliveryDate"
            }
          },
          "shipToAddress": {
            "type": "string",
            "xml": {
              "name": "ShipToAddress"
            }
          },
          "shipToAddressDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressProcurementDto"
              }
            ],
            "xml": {
              "name": "ShipToAddressDetails"
            }
          },
          "billToAddress": {
            "type": "string",
            "xml": {
              "name": "BillToAddress"
            }
          },
          "billToAddressDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressProcurementDto"
              }
            ],
            "xml": {
              "name": "BillToAddressDetails"
            }
          },
          "paymentTermId": {
            "type": "string",
            "xml": {
              "name": "PaymentTermId"
            }
          },
          "paymentTermName": {
            "type": "string",
            "xml": {
              "name": "PaymentTermName"
            }
          },
          "paymentTermDescription": {
            "type": "string",
            "xml": {
              "name": "PaymentTermDescription"
            }
          },
          "deliveryTermId": {
            "type": "string",
            "xml": {
              "name": "DeliveryTermId"
            }
          },
          "deliveryTermName": {
            "type": "string",
            "xml": {
              "name": "DeliveryTermName"
            }
          },
          "deliveryTermDescription": {
            "type": "string",
            "xml": {
              "name": "DeliveryTermDescription"
            }
          },
          "deliveryTermLocation": {
            "type": "string",
            "xml": {
              "name": "DeliveryTermLocation"
            }
          },
          "ourReference": {
            "type": "string",
            "xml": {
              "name": "OurReference"
            }
          },
          "ourReferenceEmail": {
            "type": "string",
            "xml": {
              "name": "OurReferenceEmail"
            }
          },
          "buyer": {
            "type": "string",
            "xml": {
              "name": "Buyer"
            }
          },
          "buyerEmail": {
            "type": "string",
            "xml": {
              "name": "BuyerEmail"
            }
          },
          "yourReference": {
            "type": "string",
            "xml": {
              "name": "YourReference"
            }
          },
          "shippingMarks": {
            "type": "string",
            "xml": {
              "name": "ShippingMarks"
            }
          },
          "comments": {
            "type": "string",
            "xml": {
              "name": "Comments"
            }
          },
          "erpId": {
            "type": "string",
            "xml": {
              "name": "ERPId"
            }
          },
          "requisitionTypeName": {
            "type": "string",
            "xml": {
              "name": "RequisitionTypeName"
            }
          },
          "lines": {
            "type": "array",
            "xml": {
              "name": "Lines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/PurchaseOrderLineProcurementDto"
            }
          },
          "supplierContactPersons": {
            "type": "array",
            "xml": {
              "name": "SupplierContactPersons",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/SupplierContactPersonDto"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrder"
        }
      },
      "CompanyProcurementDto": {
        "title": "CompanyDto",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "name": "Name"
            }
          },
          "identifiers": {
            "type": "array",
            "xml": {
              "name": "Identifiers",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IdentifierDto"
            }
          },
          "addresses": {
            "type": "array",
            "xml": {
              "name": "Addresses",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/AddressProcurementDto"
            }
          }
        },
        "xml": {
          "name": "From"
        }
      },
      "AddressProcurementDto": {
        "title": "AddressDto",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "name": "Name"
            }
          },
          "recipient": {
            "type": "string",
            "xml": {
              "name": "Recipient"
            }
          },
          "streetAddress": {
            "type": "string",
            "xml": {
              "name": "StreetAddress"
            }
          },
          "streetAddress2": {
            "type": "string",
            "xml": {
              "name": "StreetAddress2"
            }
          },
          "division": {
            "type": "string",
            "xml": {
              "name": "Division"
            }
          },
          "building": {
            "type": "string",
            "xml": {
              "name": "Building"
            }
          },
          "location": {
            "type": "string",
            "xml": {
              "name": "Location"
            }
          },
          "state": {
            "type": "string",
            "xml": {
              "name": "State"
            }
          },
          "zip": {
            "type": "string",
            "xml": {
              "name": "Zip"
            }
          },
          "country": {
            "type": "string",
            "xml": {
              "name": "Country"
            }
          },
          "city": {
            "type": "string",
            "xml": {
              "name": "City"
            }
          },
          "telephone": {
            "type": "string",
            "xml": {
              "name": "Telephone"
            }
          },
          "fax": {
            "type": "string",
            "xml": {
              "name": "Fax"
            }
          },
          "homepage": {
            "type": "string",
            "xml": {
              "name": "Homepage"
            }
          },
          "email": {
            "type": "string",
            "xml": {
              "name": "Email"
            }
          }
        },
        "xml": {
          "name": "Address"
        }
      },
      "SupplierContactDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "name": "Name"
            }
          },
          "identifiers": {
            "type": "array",
            "xml": {
              "name": "Identifiers",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IdentifierDto"
            }
          },
          "address": {
            "$ref": "#/components/schemas/AddressProcurementDto"
          }
        },
        "xml": {
          "name": "To"
        }
      },
      "CodingDto": {
        "type": "object",
        "properties": {
          "dimension1": {
            "type": "string",
            "xml": {
              "name": "Dimension1"
            }
          },
          "dimension2": {
            "type": "string",
            "xml": {
              "name": "Dimension2"
            }
          },
          "dimension3": {
            "type": "string",
            "xml": {
              "name": "Dimension3"
            }
          },
          "dimension4": {
            "type": "string",
            "xml": {
              "name": "Dimension4"
            }
          },
          "dimension5": {
            "type": "string",
            "xml": {
              "name": "Dimension5"
            }
          },
          "dimension6": {
            "type": "string",
            "xml": {
              "name": "Dimension6"
            }
          },
          "dimension7": {
            "type": "string",
            "xml": {
              "name": "Dimension7"
            }
          },
          "dimension8": {
            "type": "string",
            "xml": {
              "name": "Dimension8"
            }
          },
          "dimension9": {
            "type": "string",
            "xml": {
              "name": "Dimension9"
            }
          },
          "dimension10": {
            "type": "string",
            "xml": {
              "name": "Dimension10"
            }
          },
          "dimension11": {
            "type": "string",
            "xml": {
              "name": "Dimension11"
            }
          },
          "dimension12": {
            "type": "string",
            "xml": {
              "name": "Dimension12"
            }
          },
          "freeText1": {
            "type": "string",
            "xml": {
              "name": "FreeText1"
            }
          },
          "freeText2": {
            "type": "string",
            "xml": {
              "name": "FreeText2"
            }
          },
          "freeText3": {
            "type": "string",
            "xml": {
              "name": "FreeText3"
            }
          },
          "freeText4": {
            "type": "string",
            "xml": {
              "name": "FreeText4"
            }
          },
          "freeText5": {
            "type": "string",
            "xml": {
              "name": "FreeText5"
            }
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "Amount"
            }
          }
        },
        "xml": {
          "name": "Coding"
        }
      },
      "SupplierContactPersonDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "xml": {
              "name": "FirstName"
            }
          },
          "lastName": {
            "type": "string",
            "xml": {
              "name": "LastName"
            }
          },
          "email": {
            "type": "string",
            "xml": {
              "name": "Email"
            }
          },
          "telephone": {
            "type": "string",
            "xml": {
              "name": "Telephone"
            }
          }
        },
        "xml": {
          "name": "SupplierContactPerson"
        }
      },
      "PurchaseOrderLineProcurementDto": {
        "title": "PurchaseOrderLineDto",
        "type": "object",
        "properties": {
          "lineNumber": {
            "type": "string",
            "xml": {
              "name": "LineNumber"
            }
          },
          "requisitionId": {
            "type": "string",
            "xml": {
              "name": "RequisitionId"
            }
          },
          "isServiceItem": {
            "type": "boolean",
            "xml": {
              "name": "IsServiceItem"
            }
          },
          "contractNumber": {
            "type": "string",
            "xml": {
              "name": "ContractNumber"
            }
          },
          "requestedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "RequestedDeliveryDate"
            }
          },
          "itemNumber": {
            "type": "string",
            "xml": {
              "name": "ItemNumber"
            }
          },
          "itemDescription": {
            "type": "string",
            "xml": {
              "name": "ItemDescription"
            }
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "Quantity"
            }
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "UnitPrice"
            }
          },
          "unit": {
            "type": "string",
            "xml": {
              "name": "Unit"
            }
          },
          "total": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "Total"
            }
          },
          "comments": {
            "type": "string",
            "xml": {
              "name": "Comments"
            }
          },
          "taxIndicator1": {
            "type": "string",
            "xml": {
              "name": "TaxIndicator1"
            }
          },
          "taxIndicator2": {
            "type": "string",
            "xml": {
              "name": "TaxIndicator2"
            }
          },
          "codingLines": {
            "type": "array",
            "xml": {
              "name": "CodingLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/CodingDto"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrderLine"
        }
      },
      "ProcurementPurchaseOrderDto": {
        "required": [
          "documentId",
          "orderDate",
          "requestedDeliveryDate",
          "total"
        ],
        "type": "object",
        "properties": {
          "correlationKey": {
            "type": "string",
            "xml": {
              "name": "CorrelationKey"
            }
          },
          "companyId": {
            "type": "string",
            "xml": {
              "name": "CompanyId"
            }
          },
          "companyExternalDisplayName": {
            "type": "string",
            "xml": {
              "name": "CompanyExternalDisplayName"
            }
          },
          "from": {
            "$ref": "#/components/schemas/CompanyProcurementDto"
          },
          "documentId": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "DocumentId"
            }
          },
          "to": {
            "$ref": "#/components/schemas/SupplierContactDto"
          },
          "supplierId": {
            "type": "string",
            "xml": {
              "name": "SupplierId"
            }
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "OrderDate"
            }
          },
          "orderNumber": {
            "type": "string",
            "xml": {
              "name": "OrderNumber"
            }
          },
          "externalOrderNumber": {
            "type": "string",
            "xml": {
              "name": "ExternalOrderNumber"
            }
          },
          "revisionNumber": {
            "type": "string",
            "xml": {
              "name": "RevisionNumber"
            }
          },
          "revisionCreatedDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "RevisionCreatedDate"
            }
          },
          "requisitionId": {
            "type": "string",
            "xml": {
              "name": "RequisitionId"
            }
          },
          "total": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "Total"
            }
          },
          "currencyCode": {
            "type": "string",
            "xml": {
              "name": "CurrencyCode"
            }
          },
          "requestedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "RequestedDeliveryDate"
            }
          },
          "shipToAddress": {
            "type": "string",
            "xml": {
              "name": "ShipToAddress"
            }
          },
          "shipToAddressDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressProcurementDto"
              }
            ],
            "xml": {
              "name": "ShipToAddressDetails"
            }
          },
          "billToAddress": {
            "type": "string",
            "xml": {
              "name": "BillToAddress"
            }
          },
          "billToAddressDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressProcurementDto"
              }
            ],
            "xml": {
              "name": "BillToAddressDetails"
            }
          },
          "paymentTermId": {
            "type": "string",
            "xml": {
              "name": "PaymentTermId"
            }
          },
          "paymentTermName": {
            "type": "string",
            "xml": {
              "name": "PaymentTermName"
            }
          },
          "paymentTermDescription": {
            "type": "string",
            "xml": {
              "name": "PaymentTermDescription"
            }
          },
          "deliveryTermId": {
            "type": "string",
            "xml": {
              "name": "DeliveryTermId"
            }
          },
          "deliveryTermName": {
            "type": "string",
            "xml": {
              "name": "DeliveryTermName"
            }
          },
          "deliveryTermDescription": {
            "type": "string",
            "xml": {
              "name": "DeliveryTermDescription"
            }
          },
          "deliveryTermLocation": {
            "type": "string",
            "xml": {
              "name": "DeliveryTermLocation"
            }
          },
          "ourReference": {
            "type": "string",
            "xml": {
              "name": "OurReference"
            }
          },
          "ourReferenceEmail": {
            "type": "string",
            "xml": {
              "name": "OurReferenceEmail"
            }
          },
          "ourReferenceUserName": {
            "type": "string",
            "xml": {
              "name": "OurReferenceUserName"
            }
          },
          "buyer": {
            "type": "string",
            "xml": {
              "name": "Buyer"
            }
          },
          "buyerEmail": {
            "type": "string",
            "xml": {
              "name": "BuyerEmail"
            }
          },
          "buyerUserName": {
            "type": "string",
            "xml": {
              "name": "BuyerUserName"
            }
          },
          "yourReference": {
            "type": "string",
            "xml": {
              "name": "YourReference"
            }
          },
          "shippingMarks": {
            "type": "string",
            "xml": {
              "name": "ShippingMarks"
            }
          },
          "comments": {
            "type": "string",
            "xml": {
              "name": "Comments"
            }
          },
          "erpId": {
            "type": "string",
            "xml": {
              "name": "ERPId"
            }
          },
          "requisitionTypeName": {
            "type": "string",
            "xml": {
              "name": "RequisitionTypeName"
            }
          },
          "lines": {
            "type": "array",
            "xml": {
              "name": "Lines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/GrnPurchaseOrderLineDto"
            }
          },
          "supplierContactPersons": {
            "type": "array",
            "xml": {
              "name": "SupplierContactPersons",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/SupplierContactPersonDto"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrder"
        }
      },
      "GrnPurchaseOrderDto": {
        "required": [
          "documentId",
          "orderDate",
          "requestedDeliveryDate",
          "total"
        ],
        "type": "object",
        "properties": {
          "correlationKey": {
            "type": "string",
            "xml": {
              "name": "CorrelationKey"
            }
          },
          "companyId": {
            "type": "string",
            "xml": {
              "name": "CompanyId"
            }
          },
          "companyExternalDisplayName": {
            "type": "string",
            "xml": {
              "name": "CompanyExternalDisplayName"
            }
          },
          "from": {
            "$ref": "#/components/schemas/CompanyProcurementDto"
          },
          "documentId": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "DocumentId"
            }
          },
          "to": {
            "$ref": "#/components/schemas/SupplierContactDto"
          },
          "supplierId": {
            "type": "string",
            "xml": {
              "name": "SupplierId"
            }
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "OrderDate"
            }
          },
          "orderNumber": {
            "type": "string",
            "xml": {
              "name": "OrderNumber"
            }
          },
          "externalOrderNumber": {
            "type": "string",
            "xml": {
              "name": "ExternalOrderNumber"
            }
          },
          "revisionNumber": {
            "type": "string",
            "xml": {
              "name": "RevisionNumber"
            }
          },
          "revisionCreatedDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "RevisionCreatedDate"
            }
          },
          "requisitionId": {
            "type": "string",
            "xml": {
              "name": "RequisitionId"
            }
          },
          "total": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "Total"
            }
          },
          "currencyCode": {
            "type": "string",
            "xml": {
              "name": "CurrencyCode"
            }
          },
          "requestedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "RequestedDeliveryDate"
            }
          },
          "shipToAddress": {
            "type": "string",
            "xml": {
              "name": "ShipToAddress"
            }
          },
          "shipToAddressDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressProcurementDto"
              }
            ],
            "xml": {
              "name": "ShipToAddressDetails"
            }
          },
          "billToAddress": {
            "type": "string",
            "xml": {
              "name": "BillToAddress"
            }
          },
          "billToAddressDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressProcurementDto"
              }
            ],
            "xml": {
              "name": "BillToAddressDetails"
            }
          },
          "paymentTermId": {
            "type": "string",
            "xml": {
              "name": "PaymentTermId"
            }
          },
          "paymentTermName": {
            "type": "string",
            "xml": {
              "name": "PaymentTermName"
            }
          },
          "paymentTermDescription": {
            "type": "string",
            "xml": {
              "name": "PaymentTermDescription"
            }
          },
          "deliveryTermId": {
            "type": "string",
            "xml": {
              "name": "DeliveryTermId"
            }
          },
          "deliveryTermName": {
            "type": "string",
            "xml": {
              "name": "DeliveryTermName"
            }
          },
          "deliveryTermDescription": {
            "type": "string",
            "xml": {
              "name": "DeliveryTermDescription"
            }
          },
          "deliveryTermLocation": {
            "type": "string",
            "xml": {
              "name": "DeliveryTermLocation"
            }
          },
          "ourReference": {
            "type": "string",
            "xml": {
              "name": "OurReference"
            }
          },
          "ourReferenceEmail": {
            "type": "string",
            "xml": {
              "name": "OurReferenceEmail"
            }
          },
          "buyer": {
            "type": "string",
            "xml": {
              "name": "Buyer"
            }
          },
          "buyerEmail": {
            "type": "string",
            "xml": {
              "name": "BuyerEmail"
            }
          },
          "yourReference": {
            "type": "string",
            "xml": {
              "name": "YourReference"
            }
          },
          "shippingMarks": {
            "type": "string",
            "xml": {
              "name": "ShippingMarks"
            }
          },
          "comments": {
            "type": "string",
            "xml": {
              "name": "Comments"
            }
          },
          "erpId": {
            "type": "string",
            "xml": {
              "name": "ERPId"
            }
          },
          "requisitionTypeName": {
            "type": "string",
            "xml": {
              "name": "RequisitionTypeName"
            }
          },
          "lines": {
            "type": "array",
            "xml": {
              "name": "Lines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/GrnPurchaseOrderLineDto"
            }
          },
          "supplierContactPersons": {
            "type": "array",
            "xml": {
              "name": "SupplierContactPersons",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/SupplierContactPersonDto"
            }
          },
          "goodsReceiptNote": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GoodsReceiptNoteDto"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrder"
        }
      },
      "GrnPurchaseOrderLineDto": {
        "required": [
          "isActive",
          "isOpen",
          "isServiceItem",
          "isTwoWayMatch",
          "quantity",
          "requestedDeliveryDate",
          "total",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "lineNumber": {
            "type": "string",
            "xml": {
              "name": "LineNumber"
            }
          },
          "externalOrderLineNumber": {
            "type": "string",
            "xml": {
              "name": "ExternalOrderLineNumber"
            }
          },
          "requisitionId": {
            "type": "string",
            "xml": {
              "name": "RequisitionId"
            }
          },
          "isServiceItem": {
            "type": "boolean",
            "xml": {
              "name": "IsServiceItem"
            }
          },
          "contractNumber": {
            "type": "string",
            "xml": {
              "name": "ContractNumber"
            }
          },
          "requestedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "RequestedDeliveryDate"
            }
          },
          "itemNumber": {
            "type": "string",
            "xml": {
              "name": "ItemNumber"
            }
          },
          "itemDescription": {
            "type": "string",
            "xml": {
              "name": "ItemDescription"
            }
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "Quantity"
            }
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "UnitPrice"
            }
          },
          "unit": {
            "type": "string",
            "xml": {
              "name": "Unit"
            }
          },
          "total": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "Total"
            }
          },
          "comments": {
            "type": "string",
            "xml": {
              "name": "Comments"
            }
          },
          "taxIndicator1": {
            "type": "string",
            "xml": {
              "name": "TaxIndicator1"
            }
          },
          "taxIndicator2": {
            "type": "string",
            "xml": {
              "name": "TaxIndicator2"
            }
          },
          "codingLines": {
            "type": "array",
            "xml": {
              "name": "CodingLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/CodingDto"
            }
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "isTwoWayMatch": {
            "type": "boolean",
            "xml": {
              "name": "IsTwoWayMatch"
            }
          },
          "categoryExternalSystemId": {
            "type": "string",
            "xml": {
              "name": "CategoryExternalSystemId"
            }
          },
          "categoryCode": {
            "type": "string",
            "xml": {
              "name": "CategoryCode"
            }
          },
          "isActive": {
            "type": "boolean",
            "xml": {
              "name": "IsActive"
            }
          },
          "isOpen": {
            "type": "boolean",
            "xml": {
              "name": "IsOpen"
            }
          }
        },
        "xml": {
          "name": "Line"
        }
      },
      "GoodsReceiptNoteDto": {
        "required": [
          "date"
        ],
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "xml": {
              "name": "ReferenceNumber"
            }
          },
          "externalReferenceNumber": {
            "type": "string",
            "xml": {
              "name": "ExternalReferenceNumber"
            }
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "Date"
            }
          },
          "comment": {
            "type": "string",
            "xml": {
              "name": "Comment"
            }
          },
          "lines": {
            "type": "array",
            "xml": {
              "name": "Lines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/GoodsReceiptNoteLineDto"
            }
          }
        },
        "xml": {
          "name": "GoodsReceiptNote"
        }
      },
      "GoodsReceiptNoteLineDto": {
        "required": [
          "deliveredDate",
          "isActive",
          "quantity",
          "total",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "purchaseOrderLineNumber": {
            "type": "string",
            "xml": {
              "name": "PurchaseOrderLineNumber"
            }
          },
          "purchaseOrderExternalLineNumber": {
            "type": "string",
            "xml": {
              "name": "PurchaseOrderExternalLineNumber"
            }
          },
          "deliveryNumber": {
            "type": "string",
            "xml": {
              "name": "DeliveryNumber"
            }
          },
          "deliveryNote": {
            "type": "string",
            "xml": {
              "name": "DeliveryNote"
            }
          },
          "releaseNumber": {
            "type": "string",
            "xml": {
              "name": "ReleaseNumber"
            }
          },
          "externalDeliveryNumber": {
            "type": "string",
            "xml": {
              "name": "ExternalDeliveryNumber"
            }
          },
          "deliveredDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "DeliveredDate"
            }
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "Quantity"
            }
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "UnitPrice"
            }
          },
          "reasonCode": {
            "type": "string",
            "xml": {
              "name": "ReasonCode"
            }
          },
          "total": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "Total"
            }
          },
          "isActive": {
            "type": "boolean",
            "xml": {
              "name": "IsActive"
            }
          },
          "originGoodsReceiptNoteReferenceNumber": {
            "type": "string",
            "xml": {
              "name": "OriginGoodsReceiptNoteReferenceNumber"
            }
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          }
        },
        "xml": {
          "name": "Line"
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "xml": {
              "name": "Url"
            }
          }
        },
        "xml": {
          "name": "Link"
        }
      },
      "StatusRequest": {
        "type": "object",
        "properties": {
          "newStatus": {
            "type": "string",
            "xml": {
              "name": "NewStatus"
            }
          }
        }
      },
      "OrderRequestResponseDto": {
        "type": "object",
        "properties": {
          "correlationKey": {
            "type": "string",
            "xml": {
              "name": "CorrelationKey"
            }
          },
          "responseData": {
            "$ref": "#/components/schemas/ConfirmationDataDto"
          }
        }
      },
      "ConfirmationDataDto": {
        "type": "object",
        "properties": {
          "customField_Boolean1": {
            "type": "boolean",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Text1": {
            "type": "string",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "type": "string",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "type": "string",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "type": "string",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "type": "string",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "externalOrderNumber": {
            "type": "string",
            "xml": {
              "name": "ExternalOrderNumber"
            }
          }
        },
        "xml": {
          "name": "ConfirmationData"
        }
      },
      "PurchaseOrderRequestResponseDto": {
        "type": "object",
        "required": [
          "correlationKey",
          "purchaseOrderConfirmation"
        ],
        "properties": {
          "correlationKey": {
            "type": "string",
            "description": "A unique identifier that needs to match the `correlationKey` in the corresponding request message.",
            "xml": {
              "name": "CorrelationKey"
            }
          },
          "purchaseOrderConfirmation": {
            "$ref": "#/components/schemas/PurchaseOrderConfirmationDto"
          }
        },
        "xml": {
          "name": "PurchaseOrderResponse"
        }
      },
      "GoodsReceiptNoteRequestResponseDto": {
        "type": "object",
        "required": [
          "correlationKey",
          "purchaseOrderConfirmation",
          "goodsReceiptNoteConfirmation"
        ],
        "properties": {
          "correlationKey": {
            "type": "string",
            "description": "A unique identifier that needs to match the `correlationKey` in the corresponding request message.",
            "xml": {
              "name": "CorrelationKey"
            }
          },
          "purchaseOrderConfirmation": {
            "$ref": "#/components/schemas/PurchaseOrderGRConfirmationDto"
          },
          "goodsReceiptNoteConfirmation": {
            "$ref": "#/components/schemas/GoodsReceiptNoteConfirmationDto"
          }
        },
        "xml": {
          "name": "PurchaseOrderResponse"
        }
      },
      "CancelationResponseDto": {
        "type": "object",
        "required": [
          "correlationKey"
        ],
        "properties": {
          "correlationKey": {
            "type": "string",
            "description": "A unique identifier that needs to match the `correlationKey` in the corresponding request message.",
            "xml": {
              "name": "CorrelationKey"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrderResponse"
        }
      },
      "PurchaseOrderRequestResponseXMLDto": {
        "type": "object",
        "description": "Take a look at the examples for information on what is needed in the different scenarios, purchase order, goods receipt or cancelation response confirmation.",
        "properties": {
          "correlationKey": {
            "type": "string",
            "description": "A unique identifier that needs to match the `correlationKey` in the corresponding request message.",
            "xml": {
              "name": "CorrelationKey"
            }
          },
          "purchaseOrderConfirmation": {
            "$ref": "#/components/schemas/PurchaseOrderConfirmationDto"
          },
          "goodsReceiptNoteConfirmation": {
            "$ref": "#/components/schemas/GoodsReceiptNoteConfirmationDto"
          }
        },
        "xml": {
          "name": "PurchaseOrderResponse"
        }
      },
      "PurchaseOrderConfirmationDto": {
        "type": "object",
        "required":[
          "orderNumber",
          "externalOrderNumber",
          "lines"
        ],
        "properties": {
          "orderNumber": {
            "type": "string",
            "description": "Order number from Medius Procurement.",
            "xml": {
              "name": "OrderNumber"
            }
          },
          "externalOrderNumber": {
            "type": "string",
            "description": "Order number received from external system.",
            "xml": {
              "name": "ExternalOrderNumber"
            }
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "lines": {
            "type": "array",
            "xml": {
              "name": "Lines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/PurchaseOrderLineConfirmationDto"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrderConfirmation"
        }
      },
      "PurchaseOrderGRConfirmationDto": {
        "type": "object",
        "required":[
          "orderNumber",
          "externalOrderNumber"
        ],
        "properties": {
          "orderNumber": {
            "type": "string",
            "description": "Order number from Medius Procurement.",
            "xml": {
              "name": "OrderNumber"
            }
          },
          "externalOrderNumber": {
            "type": "string",
            "description": "Order number received from external system.",
            "xml": {
              "name": "ExternalOrderNumber"
            }
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrderConfirmation"
        }
      },
      "PurchaseOrderLineConfirmationDto": {
        "type": "object",
        "required":[
          "lineNumber",
          "externalOrderLineNumber"
        ],
        "properties": {
          "lineNumber": {
            "type": "string",
            "description": "Purchase order line number from Medius Procurement.",
            "xml": {
              "name": "LineNumber"
            }
          },
          "externalOrderLineNumber": {
            "type": "string",
            "description": "Purchase order line number received from external system.",
            "xml": {
              "name": "ExternalOrderLineNumber"
            }
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrderLineConfirmation"
        }
      },
      "GoodsReceiptNoteConfirmationDto": {
        "type": "object",
        "required":[
          "referenceNumber",
          "externalReferenceNumber",
          "lines"
        ],
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "Reference number received from Medius Procurement.",
            "xml": {
              "name": "ReferenceNumber"
            }
          },
          "externalReferenceNumber": {
            "type": "string",
            "description": "Reference number received from external system.",
            "xml": {
              "name": "ExternalReferenceNumber"
            }
          },
          "lines": {
            "type": "array",
            "xml": {
              "name": "Lines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/GoodsReceiptNoteLineConfirmationDto"
            }
          }
        },
        "xml": {
          "name": "GoodsReceiptNoteConfirmation"
        }
      },
      "GoodsReceiptNoteLineConfirmationDto": {
        "type": "object",
        "required":[
          "deliveryNumber",
          "externalDeliveryNumber"
        ],
        "properties": {
          "deliveryNumber": {
            "type": "string",
            "description": "Delivery number from Medius Procurement.",
            "xml": {
              "name": "DeliveryNumber"
            }
          },
          "externalDeliveryNumber": {
            "type": "string",
            "description": "Delivery number received from external system.",
            "xml": {
              "name": "ExternalDeliveryNumber"
            }
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          }
        },
        "xml": {
          "name": "GoodsReceiptNoteLineConfirmation"
        }
      },
      "ReleasePaymentResponseDto": {
        "type": "object",
        "properties": {
          "correlationKey": {
            "type": "string",
            "xml": {
              "name": "CorrelationKey"
            }
          },
          "releasePayment": {
            "$ref": "#/components/schemas/IntegrationResponseReleasePaymentDto"
          }
        },
        "xml": {
          "name": "ReleasePaymentResponse"
        }
      },
      "IntegrationResponseReleasePaymentDto": {
        "required": [
          "releasePayment"
        ],
        "type": "object",
        "properties": {
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "releasePayment": {
            "type": "boolean",
            "description": "Updates the related invoice with 'paymentBlocked = NO' when true value is passed.",
            "xml": {
              "name": "ReleasePayment"
            }
          }
        },
        "xml": {
          "name": "ReleasePayment"
        }
      },
      "IntegrationBasicRestrictionsDto": {
        "required": [
          "controllingDimensionValueKey"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity.",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "controllingDimensionValueKey": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId of controlling dimension value.",
            "xml": {
              "name": "ControllingDimensionValueKey"
            }
          },
          "restrictedDimensions": {
            "type": "array",
            "xml": {
              "name": "RestrictedDimensions",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationRestrictedDimensionDto"
            }
          }
        },
        "xml": {
          "name": "BasicRestriction"
        }
      },
      "IntegrationRestrictedDimensionDto": {
        "required": [
          "dimension",
          "restrictionType"
        ],
        "type": "object",
        "properties": {
          "defaultDimensionValueKey": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId of restricted dimension value. Only set a value if RestrictionType = Default or set a value optionally if RestrictionType = Required.",
            "xml": {
              "name": "DefaultDimensionValueKey"
            }
          },
          "fixedDimensionValueKey": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId of restricted dimension value. Only set a value if RestrictionType = Fixed.",
            "xml": {
              "name": "FixedDimensionValueKey"
            }
          },
          "dimension": {
            "maxLength": 100,
            "type": "string",
            "description": "Dimension order where the restriction should apply.",
            "xml": {
              "name": "Dimension"
            },
            "enum": [
              "DIMENSION1",
              "DIMENSION2",
              "DIMENSION3",
              "DIMENSION4",
              "DIMENSION5",
              "DIMENSION6",
              "DIMENSION7",
              "DIMENSION8",
              "DIMENSION9",
              "DIMENSION10",
              "DIMENSION11",
              "DIMENSION12"
            ]
          },
          "restrictionType": {
            "type": "string",
            "description": "Set which type of restriction to be used.",
            "xml": {
              "name": "RestrictionType"
            },
            "enum": [
              "Default",
              "Fixed",
              "Forbidden",
              "Required"
            ]
          }
        },
        "xml": {
          "name": "RestrictedDimension"
        }
      },
      "RestrictionRuleGroupDto": {
        "required": [
          "companyId",
          "externalSystemId",
          "isActive"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity.",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP.",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "Unique identifier for the Company. I.e. CompanyId and not the ExternalSystemId for the Company.",
            "xml": {
              "name": "CompanyId"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive.",
            "xml": {
              "name": "IsActive"
            }
          },
          "restrictionRules": {
            "type": "array",
            "xml": {
              "name": "RestrictionRules",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/RestrictionRuleDto"
            }
          }
        },
        "xml": {
          "name": "RestrictionRuleGroup"
        }
      },
      "RestrictionRuleDto": {
        "type": "object",
        "properties": {
          "controllingDimension": {
            "type": "string",
            "description": "Controlling dimension is the dimension the rule will be based on.",
            "xml": {
              "name": "ControllingDimension"
            },
            "enum": [
              "DIMENSION1",
              "DIMENSION2",
              "DIMENSION3",
              "DIMENSION4",
              "DIMENSION5",
              "DIMENSION6",
              "DIMENSION7",
              "DIMENSION8",
              "DIMENSION9",
              "DIMENSION10",
              "DIMENSION11",
              "DIMENSION12"
            ]
          },
          "controllingDimensionValues": {
            "type": "array",
            "description": "Multiple ControllingDimension sets of values are allowed, but each set will be mapped to separate restriction rules in Medius.",
            "xml": {
              "name": "ControllingDimensionValues",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ControllingDimensionDto"
            }
          },
          "restrictedOrderedDimensionGroups": {
            "type": "array",
            "xml": {
              "name": "RestrictedOrderedDimensionGroups",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/RestrictedDimensionGroupDto"
            }
          }
        },
        "xml": {
          "name": "RestrictionRule"
        }
      },
      "ControllingDimensionDto": {
        "required": [
          "includeEdges"
        ],
        "type": "object",
        "properties": {
          "from": {
            "maxLength": 200,
            "type": "string",
            "description": "Operator in Medius: Is greater than. Use IncludeEdges for including or not.",
            "xml": {
              "name": "From"
            }
          },
          "to": {
            "maxLength": 200,
            "type": "string",
            "description": "Operator in Medius: Is less than. Use IncludeEdges for including or not.",
            "xml": {
              "name": "To"
            }
          },
          "startsWith": {
            "maxLength": 200,
            "type": "string",
            "description": "Operator in Medius: Begins with.",
            "xml": {
              "name": "StartsWith"
            }
          },
          "endsWith": {
            "maxLength": 200,
            "type": "string",
            "description": "Operator in Medius: Ends with.",
            "xml": {
              "name": "EndsWith"
            }
          },
          "is": {
            "maxLength": 200,
            "type": "string",
            "description": "Operator in Medius: Is.",
            "xml": {
              "name": "Is"
            }
          },
          "in": {
            "type": "array",
            "description": "Operator in Medius: Is. Each list value will be mapped as separate rules.",
            "xml": {
              "name": "In",
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "string"
              }
            }
          },
          "isAnyValue": {
            "type": "boolean",
            "description": "Operator in Medius: Is any value.",
            "xml": {
              "name": "IsAnyValue"
            }
          },
          "includeEdges": {
            "type": "boolean",
            "description": "Include edges is used in combination with other operators to determine use of start and end values.",
            "xml": {
              "name": "IncludeEdges"
            }
          }
        },
        "xml": {
          "name": "ControllingDimension"
        }
      },
      "RestrictedDimensionGroupDto": {
        "type": "object",
        "properties": {
          "dimension": {
            "type": "string",
            "description": "Dimension which the child rule will be based on.",
            "xml": {
              "name": "Dimension"
            },
            "enum": [
              "DIMENSION1",
              "DIMENSION2",
              "DIMENSION3",
              "DIMENSION4",
              "DIMENSION5",
              "DIMENSION6",
              "DIMENSION7",
              "DIMENSION8",
              "DIMENSION9",
              "DIMENSION10",
              "DIMENSION11",
              "DIMENSION12",
              "FREETEXT1",
              "FREETEXT2",
              "FREETEXT3",
              "FREETEXT4",
              "FREETEXT5"
            ]
          },
          "childRules": {
            "type": "array",
            "xml": {
              "name": "ChildRules",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/RuleDto"
            }
          }
        },
        "xml": {
          "name": "RestrictedDimensionGroup"
        }
      },
      "RuleDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The following types exist:\n\n**Required** the value of the selected dimension on the document must be set according to the Value column.\n\n**Forbidden** the value of the selected dimension on the document cannot be set to values specified in the Value column.\n\n**Optional** the value of the selected dimension on the document can be empty or set according to the Value column. If the Value column is set to empty value, only empty value is permitted.\n\n**Fixed** the value of the selected dimension on the document will be automatically set according to the Value column. Users will not be able to change it.\n\n**Default** the value of the selected dimension on the document will be automatically set according to the Value column. Users will be able to change it.",
            "xml": {
              "name": "Type"
            },
            "enum": [
              "Required",
              "Forbidden",
              "Optional",
              "Fixed",
              "Default"
            ]
          },
          "dimensionValues": {
            "$ref": "#/components/schemas/DimensionValueDto"
          }
        },
        "xml": {
          "name": "Rule"
        }
      },
      "DimensionValueDto": {
        "required": [
          "includeEdges"
        ],
        "type": "object",
        "properties": {
          "from": {
            "maxLength": 200,
            "type": "string",
            "description": "Operator in Medius: Is greater than. Use IncludeEdges for including or not.",
            "xml": {
              "name": "From"
            }
          },
          "to": {
            "maxLength": 200,
            "type": "string",
            "description": "Operator in Medius: Is less than. Use IncludeEdges for including or not.",
            "xml": {
              "name": "To"
            }
          },
          "startsWith": {
            "maxLength": 200,
            "type": "string",
            "description": "Operator in Medius: Begins with.",
            "xml": {
              "name": "StartsWith"
            }
          },
          "endsWith": {
            "maxLength": 200,
            "type": "string",
            "description": "Operator in Medius: Ends with.",
            "xml": {
              "name": "EndsWith"
            }
          },
          "is": {
            "maxLength": 200,
            "type": "string",
            "description": "Operator in Medius: Is.",
            "xml": {
              "name": "Is"
            }
          },
          "in": {
            "type": "array",
            "description": "Operator in Medius: Is. Each list value will be mapped as separate rules.",
            "xml": {
              "name": "In",
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "string"
              }
            }
          },
          "isAnyValue": {
            "type": "boolean",
            "description": "Operator in Medius: Is any value.",
            "xml": {
              "name": "IsAnyValue"
            }
          },
          "isEmptyValue": {
            "type": "boolean",
            "description": "Operator in Medius: Is empty value.",
            "xml": {
              "name": "IsEmptyValue"
            }
          },
          "includeEdges": {
            "type": "boolean",
            "description": "Include edges is used in combination with other operators to determine use of start and end values.",
            "xml": {
              "name": "IncludeEdges"
            }
          }
        },
        "xml": {
          "name": "DimensionValues"
        }
      },
      "IntegrationSupplierConfigurationDto": {
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity.",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "company": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity.",
            "xml": {
              "name": "Company"
            }
          },
          "responsible": {
            "maxLength": 450,
            "type": "string",
            "description": "Used to distribute invoice to supplier responsible. Format: UserName or Full name (FirstName + LastName) in Medius. Can be used instead of ResponsibleRole.",
            "xml": {
              "name": "Responsible"
            }
          },
          "responsibleRole": {
            "maxLength": 450,
            "type": "string",
            "description": "Role to distribute invoice to supplier responsible. Format: Needs to be Role.Name in Medius. Can be used instead of Responsible.",
            "xml": {
              "name": "ResponsibleRole"
            }
          },
          "supplier": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity.",
            "xml": {
              "name": "Supplier"
            }
          },
          "contactPersons": {
            "type": "array",
            "xml": {
              "name": "ContactPersons",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationContactPersonDto"
            }
          },
          "expectedDeliveryTimeInDays": {
            "type": "integer",
            "description": "Number of days that invoice should be hidden when using Goods in Transit inbox filter.",
            "format": "int32",
            "xml": {
              "name": "ExpectedDeliveryTimeInDays"
            }
          },
          "sendPurchaseOrderAsIntegrationMessage": {
            "type": "boolean",
            "description": "Enable this option to automatically send the purchase order as an integration message. Integration message setting must be active for the PO to be sent. You can combine this option with sending the order as a PDF file.",
            "xml": {
              "name": "SendPurchaseOrderAsIntegrationMessage"
            }
          },
          "sendPurchaseOrderAsPdf": {
            "type": "boolean",
            "description": "Enable this option to be able to send the purchase order as a PDF file attached to an email directly in Medius. You can combine this option with sending the purchase order as an integration message.",
            "xml": {
              "name": "SendPurchaseOrderAsPdf"
            }
          },
          "registerGoodsReceiptType": {
            "type": "string",
            "description": "Change this parameter if the default behavior for the supplier should be to skip the goods receipt step and work with two-way match. If not provided, setting in Medius is kept.",
            "xml": {
              "name": "RegisterGoodsReceiptType"
            },
            "enum": [
              "Yes_ThreeWayMatch",
              "Yes_ExceptForService",
              "No_TwoWayMatch"
            ]
          }
        },
        "xml": {
          "name": "SupplierConfiguration"
        }
      },
      "IntegrationContactPersonDto": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 60,
            "type": "string",
            "description": "First name of Contact person.",
            "xml": {
              "name": "FirstName"
            }
          },
          "lastName": {
            "maxLength": 60,
            "type": "string",
            "description": "Last name of Contact person.",
            "xml": {
              "name": "LastName"
            }
          },
          "streetAddress": {
            "maxLength": 450,
            "type": "string",
            "description": "Street address.",
            "xml": {
              "name": "StreetAddress"
            }
          },
          "city": {
            "maxLength": 450,
            "type": "string",
            "description": "City",
            "xml": {
              "name": "City"
            }
          },
          "zip": {
            "maxLength": 450,
            "type": "string",
            "description": "Zip.",
            "xml": {
              "name": "Zip"
            }
          },
          "country": {
            "maxLength": 450,
            "type": "string",
            "description": "Country.",
            "xml": {
              "name": "Country"
            }
          },
          "telephone": {
            "maxLength": 450,
            "type": "string",
            "description": "Telephone.",
            "xml": {
              "name": "Telephone"
            }
          },
          "fax": {
            "maxLength": 450,
            "type": "string",
            "description": "Fax.",
            "xml": {
              "name": "Fax"
            }
          },
          "homepage": {
            "maxLength": 450,
            "type": "string",
            "description": "Home page.",
            "xml": {
              "name": "Homepage"
            }
          },
          "email": {
            "maxLength": 450,
            "type": "string",
            "description": "E-mail address.",
            "xml": {
              "name": "Email"
            }
          },
          "state": {
            "maxLength": 450,
            "type": "string",
            "description": "State.",
            "xml": {
              "name": "State"
            }
          },
          "type": {
            "type": "string",
            "description": "Type of Contact person. Available values listed in enum.",
            "xml": {
              "name": "Type"
            },
            "enum": [
              "AdjustmentRequest",
              "Order",
              "Short Payment",
              "Supplier Portal",
              "Supplier Conversations"
            ]
          }
        },
        "description": "List of Contact persons. List in Medius will be deleted and new entrie(s) in this batch will be added.",
        "xml": {
          "name": "ContactPerson"
        }
      },
      "SupplierExportPageDto": {
        "required": [
          "limit",
          "offset",
          "total"
        ],
        "type": "object",
        "properties": {
          "suppliers": {
            "type": "array",
            "xml": {
              "name": "Suppliers",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/SupplierDto"
            }
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "Offset"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "Limit"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "Total"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/Paging"
          }
        },
        "xml": {
          "name": "SupplierPage"
        }
      },
      "SupplierDto": {
        "type": "object",
        "xml": {
          "name": "Supplier"
        },
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "name": "Name"
            }
          },
          "supplierId": {
            "type": "string",
            "xml": {
              "name": "SupplierId"
            }
          },
          "currencyCode": {
            "type": "string",
            "xml": {
              "name": "CurrencyCode"
            }
          },
          "paymentTermId": {
            "type": "string",
            "xml": {
              "name": "PaymentTermId"
            }
          },
          "taxIndicator1": {
            "type": "string",
            "xml": {
              "name": "TaxIndicator1"
            }
          },
          "taxIndicator2": {
            "type": "string",
            "xml": {
              "name": "TaxIndicator2"
            }
          },
          "companyId": {
            "type": "string",
            "xml": {
              "name": "CompanyId"
            }
          },
          "companyName": {
            "type": "string",
            "xml": {
              "name": "CompanyName"
            }
          },
          "companyGlobalId": {
            "type": "string",
            "xml": {
              "name": "CompanyGlobalId"
            }
          },
          "streetAddress": {
            "type": "string",
            "xml": {
              "name": "StreetAddress"
            }
          },
          "zip": {
            "type": "string",
            "xml": {
              "name": "Zip"
            }
          },
          "city": {
            "type": "string",
            "xml": {
              "name": "City"
            }
          },
          "country": {
            "type": "string",
            "xml": {
              "name": "Country"
            }
          },
          "email": {
            "type": "string",
            "xml": {
              "name": "Email"
            }
          },
          "fax": {
            "type": "string",
            "xml": {
              "name": "Fax"
            }
          },
          "state": {
            "type": "string",
            "xml": {
              "name": "State"
            }
          },
          "telephone": {
            "type": "string",
            "xml": {
              "name": "Telephone"
            }
          },
          "homepage": {
            "type": "string",
            "xml": {
              "name": "Homepage"
            }
          },
          "identifiers": {
            "type": "array",
            "xml": {
              "wrapped": true,
              "name": "Identifiers"
            },
            "items": {
              "$ref": "#/components/schemas/IdentifierDto"
            }
          },
          "paymentDetails": {
            "type": "array",
            "xml": {
              "wrapped": true,
              "name": "PaymentDetails"
            },
            "items": {
              "$ref": "#/components/schemas/PaymentDetailsDto"
            }
          },
          "globalId": {
            "type": "string",
            "xml": {
              "name": "GlobalId"
            }
          },
          "countryCode": {
            "type": "string",
            "xml": {
              "name": "CountryCode"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/MasterDataDto"
          }
        ]
      },
      "PaymentDetailsDto": {
        "required": [
          "default",
          "isActive"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "xml": {
              "name": "Description"
            }
          },
          "identifiers": {
            "type": "array",
            "xml": {
              "name": "Identifiers",
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "String"
              }
            }
          },
          "isActive": {
            "type": "boolean",
            "xml": {
              "name": "IsActive"
            }
          },
          "paymentDetailId": {
            "type": "string",
            "xml": {
              "name": "PaymentDetailId"
            }
          },
          "default": {
            "type": "boolean",
            "xml": {
              "name": "Default"
            }
          }
        },
        "xml": {
          "name": "PaymentDetails"
        }
      },
      "IntegrationSupplierDto": {
        "required": [
          "companyId",
          "currencyCode",
          "externalSystemId",
          "isActive",
          "isProcurable",
          "name",
          "paymentTerm",
          "supplierId"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive",
            "xml": {
              "name": "IsActive"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CompanyId"
            }
          },
          "currencyCode": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CurrencyCode"
            }
          },
          "identifiers": {
            "type": "array",
            "xml": {
              "name": "Identifiers",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationSupplierIdentifierDto"
            }
          },
          "name": {
            "maxLength": 450,
            "type": "string",
            "description": "Supplier name",
            "xml": {
              "name": "Name"
            }
          },
          "paymentTerm": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "PaymentTerm"
            }
          },
          "deliveryTerm": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "DeliveryTerm"
            }
          },
          "supplierId": {
            "maxLength": 100,
            "type": "string",
            "description": "SupplierId in ERP",
            "xml": {
              "name": "SupplierId"
            }
          },
          "ledgerDimension1": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 1 for ledger entry coding",
            "xml": {
              "name": "LedgerDimension1"
            }
          },
          "ledgerDimension2": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 2 for ledger entry coding",
            "xml": {
              "name": "LedgerDimension2"
            }
          },
          "ledgerDimension3": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 3 for ledger entry coding",
            "xml": {
              "name": "LedgerDimension3"
            }
          },
          "ledgerDimension4": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 4 for ledger entry coding",
            "xml": {
              "name": "LedgerDimension4"
            }
          },
          "ledgerDimension5": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 5 for ledger entry coding",
            "xml": {
              "name": "LedgerDimension5"
            }
          },
          "ledgerDimension6": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 6 for ledger entry coding",
            "xml": {
              "name": "LedgerDimension6"
            }
          },
          "ledgerDimension7": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 7 for ledger entry coding",
            "xml": {
              "name": "LedgerDimension7"
            }
          },
          "ledgerDimension8": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 8 for ledger entry coding",
            "xml": {
              "name": "LedgerDimension8"
            }
          },
          "ledgerDimension9": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 9 for ledger entry coding",
            "xml": {
              "name": "LedgerDimension9"
            }
          },
          "ledgerDimension10": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 10 for ledger entry coding",
            "xml": {
              "name": "LedgerDimension10"
            }
          },
          "ledgerDimension11": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 11 for ledger entry coding",
            "xml": {
              "name": "LedgerDimension11"
            }
          },
          "ledgerDimension12": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 12 for ledger entry coding",
            "xml": {
              "name": "LedgerDimension12"
            }
          },
          "taxDimension1": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 1 for tax coding",
            "xml": {
              "name": "TaxDimension1"
            }
          },
          "taxDimension2": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 2 for tax coding",
            "xml": {
              "name": "TaxDimension2"
            }
          },
          "taxDimension3": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 3 for tax coding",
            "xml": {
              "name": "TaxDimension3"
            }
          },
          "taxDimension4": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 4 for tax coding",
            "xml": {
              "name": "TaxDimension4"
            }
          },
          "taxDimension5": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 5 for tax coding",
            "xml": {
              "name": "TaxDimension5"
            }
          },
          "taxDimension6": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 6 for tax coding",
            "xml": {
              "name": "TaxDimension6"
            }
          },
          "taxDimension7": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 7 for tax coding",
            "xml": {
              "name": "TaxDimension7"
            }
          },
          "taxDimension8": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 8 for tax coding",
            "xml": {
              "name": "TaxDimension8"
            }
          },
          "taxDimension9": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 9 for tax coding",
            "xml": {
              "name": "TaxDimension9"
            }
          },
          "taxDimension10": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 10 for tax coding",
            "xml": {
              "name": "TaxDimension10"
            }
          },
          "taxDimension11": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 11 for tax coding",
            "xml": {
              "name": "TaxDimension11"
            }
          },
          "taxDimension12": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Pre coding dimension 12 for tax coding",
            "xml": {
              "name": "TaxDimension12"
            }
          },
          "clearance1Dimension1": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 1 value for clearance coding 1",
            "xml": {
              "name": "Clearance1Dimension1"
            }
          },
          "clearance1Dimension2": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 2 value for clearance coding 1",
            "xml": {
              "name": "Clearance1Dimension2"
            }
          },
          "clearance1Dimension3": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 3 value for clearance coding 1",
            "xml": {
              "name": "Clearance1Dimension3"
            }
          },
          "clearance1Dimension4": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 4 value for clearance coding 1",
            "xml": {
              "name": "Clearance1Dimension4"
            }
          },
          "clearance1Dimension5": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 5 value for clearance coding 1",
            "xml": {
              "name": "Clearance1Dimension5"
            }
          },
          "clearance1Dimension6": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 6 value for clearance coding 1",
            "xml": {
              "name": "Clearance1Dimension6"
            }
          },
          "clearance1Dimension7": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 7 value for clearance coding 1",
            "xml": {
              "name": "Clearance1Dimension7"
            }
          },
          "clearance1Dimension8": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 8 value for clearance coding 1",
            "xml": {
              "name": "Clearance1Dimension8"
            }
          },
          "clearance1Dimension9": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 9 value for clearance coding 1",
            "xml": {
              "name": "Clearance1Dimension9"
            }
          },
          "clearance1Dimension10": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 10 value for clearance coding 1",
            "xml": {
              "name": "Clearance1Dimension10"
            }
          },
          "clearance1Dimension11": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 11 value for clearance coding 1",
            "xml": {
              "name": "Clearance1Dimension11"
            }
          },
          "clearance1Dimension12": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 12 value for clearance coding 1",
            "xml": {
              "name": "Clearance1Dimension12"
            }
          },
          "clearance2Dimension1": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 1 value for clearance coding 2",
            "xml": {
              "name": "Clearance2Dimension1"
            }
          },
          "clearance2Dimension2": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 2 value for clearance coding 2",
            "xml": {
              "name": "Clearance2Dimension2"
            }
          },
          "clearance2Dimension3": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 3 value for clearance coding 2",
            "xml": {
              "name": "Clearance2Dimension3"
            }
          },
          "clearance2Dimension4": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 4 value for clearance coding 2",
            "xml": {
              "name": "Clearance2Dimension4"
            }
          },
          "clearance2Dimension5": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 5 value for clearance coding 2",
            "xml": {
              "name": "Clearance2Dimension5"
            }
          },
          "clearance2Dimension6": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 6 value for clearance coding 2",
            "xml": {
              "name": "Clearance2Dimension6"
            }
          },
          "clearance2Dimension7": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 7 value for clearance coding 2",
            "xml": {
              "name": "Clearance2Dimension7"
            }
          },
          "clearance2Dimension8": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 8 value for clearance coding 2",
            "xml": {
              "name": "Clearance2Dimension8"
            }
          },
          "clearance2Dimension9": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 9 value for clearance coding 2",
            "xml": {
              "name": "Clearance2Dimension9"
            }
          },
          "clearance2Dimension10": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 10 value for clearance coding 2",
            "xml": {
              "name": "Clearance2Dimension10"
            }
          },
          "clearance2Dimension11": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 11 value for clearance coding 2",
            "xml": {
              "name": "Clearance2Dimension11"
            }
          },
          "clearance2Dimension12": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Dimension 12 value for clearance coding 2",
            "xml": {
              "name": "Clearance2Dimension12"
            }
          },
          "taxIndicator1": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity (Taxgroup). Only in use if TaxDimensions not provided and Medius configured to code on taxcodes",
            "xml": {
              "name": "TaxIndicator1"
            }
          },
          "taxIndicator2": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity (Taxgroup). Only in use if TaxDimensions not provided and Medius configured to code on taxcodes",
            "xml": {
              "name": "TaxIndicator2"
            }
          },
          "streetAddress": {
            "maxLength": 450,
            "type": "string",
            "description": "StreetAddress",
            "xml": {
              "name": "StreetAddress"
            }
          },
          "city": {
            "maxLength": 450,
            "type": "string",
            "description": "City",
            "xml": {
              "name": "City"
            }
          },
          "zip": {
            "maxLength": 450,
            "type": "string",
            "description": "Zip",
            "xml": {
              "name": "Zip"
            }
          },
          "country": {
            "maxLength": 450,
            "type": "string",
            "description": "Country",
            "xml": {
              "name": "Country"
            }
          },
          "telephone": {
            "maxLength": 450,
            "type": "string",
            "description": "Telephone",
            "xml": {
              "name": "Telephone"
            }
          },
          "fax": {
            "maxLength": 450,
            "type": "string",
            "description": "Fax",
            "xml": {
              "name": "Fax"
            }
          },
          "homepage": {
            "maxLength": 450,
            "type": "string",
            "description": "Homepage",
            "xml": {
              "name": "Homepage"
            }
          },
          "emailAddress": {
            "maxLength": 450,
            "type": "string",
            "description": "EmailAddress",
            "xml": {
              "name": "EmailAddress"
            }
          },
          "state": {
            "maxLength": 450,
            "type": "string",
            "description": "State",
            "xml": {
              "name": "State"
            }
          },
          "isProcurable": {
            "type": "boolean",
            "description": "If the supplier is to be used by the Medius Buy module. Default value 1",
            "xml": {
              "name": "IsProcurable"
            }
          },
          "prepayment": {
            "type": "boolean",
            "description": "If the supplier is to be used for pre payment",
            "xml": {
              "name": "Prepayment"
            }
          },
          "countryCode": {
            "maxLength": 2,
            "type": "string",
            "description": "The supplier country of origin. Can be used to track local regulations and data storage requirements. Format: ISO 3166-1 alpha 2, two-letter country code.",
            "xml": {
              "name": "CountryCode"
            }
          },
          "paymentDetails": {
            "type": "array",
            "xml": {
              "name": "PaymentDetails",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationPaymentDetailsDto"
            }
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          }
        },
        "xml": {
          "name": "Supplier"
        }
      },
      "IntegrationSupplierIdentifierDto": {
        "required": [
          "identifierType",
          "identifierValue"
        ],
        "type": "object",
        "properties": {
          "identifierType": {
            "maxLength": 450,
            "type": "string",
            "description": "See list of available values for the identifier type. In GUI they are named differently, e.g. Bank Account for BANK_ACCOUNT.",
            "xml": {
              "name": "IdentifierType"
            },
            "enum": [
              "FINANCIAL_SYSTEM",
              "PURCHASING_SYSTEM",
              "BANK_ACCOUNT",
              "ORGANIZATION_NUMBER",
              "VAT_REGISTRATION_NUMBER",
              "EAN_NUMBER",
              "POSTAL_ACCOUNT",
              "IBAN_NUMBER",
              "EXTERNAL_SYSTEM_ID",
              "SUPPLIER_PORTAL_ID",
              "OTHER"
            ]
          },
          "identifierValue": {
            "maxLength": 450,
            "type": "string",
            "description": "Identifier value, e.g. bank account number",
            "xml": {
              "name": "IdentifierValue"
            }
          }
        },
        "xml": {
          "name": "SupplierIdentifier"
        }
      },
      "IntegrationPaymentDetailsDto": {
        "required": [
          "description",
          "externalSystemId",
          "isActive"
        ],
        "type": "object",
        "properties": {
          "externalSystemId": {
            "maxLength": 450,
            "type": "string",
            "description": "Unique Identifier of payment details in ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "description": {
            "maxLength": 450,
            "type": "string",
            "description": "User-presented description of payment details",
            "xml": {
              "name": "Description"
            }
          },
          "paymentDetailId": {
            "maxLength": 450,
            "type": "string",
            "description": "PaymentDetail Id in ERP",
            "xml": {
              "name": "PaymentDetailId"
            }
          },
          "identifiers": {
            "type": "array",
            "xml": {
              "name": "Identifiers",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationPaymentDetailsIdentifierDto"
            }
          },
          "isActive": {
            "type": "boolean",
            "xml": {
              "name": "IsActive"
            }
          },
          "default": {
            "type": "boolean",
            "description": "Possible to set default payment detail",
            "xml": {
              "name": "Default"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          }
        },
        "xml": {
          "name": "PaymentDetails"
        }
      },
      "IntegrationPaymentDetailsIdentifierDto": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "value": {
            "maxLength": 450,
            "type": "string",
            "description": "Identifier of payment details that would be matched with information on invoice",
            "xml": {
              "name": "Value"
            }
          },
          "externalSystemId": {
            "maxLength": 450,
            "type": "string",
            "description": "Unique Identifier of payment details in ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          }
        },
        "xml": {
          "name": "PaymentDetailsIdentifier"
        }
      },
      "ImportDocumentStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "xml": {
              "name": "Status"
            }
          },
          "finalDocumentId": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "FinalDocumentId"
            }
          }
        }
      },
      "ImportDocumentSupplierInvoiceFile": {
        "type": "string",
        "xml": {
          "name": "Invoice",
          "namespace": "urn:oasis:names:specification:ubl:schema:xsd:Invoice-2",
          "wrapped": true
        }
      },
      "InvoiceRequestDto": {
        "type": "object",
        "properties": {
          "correlationKey": {
            "type": "string",
            "xml": {
              "name": "CorrelationKey"
            }
          },
          "invoice": {
            "$ref": "#/components/schemas/IntegrationSupplierInvoiceDto"
          },
          "tag": {
            "type": "string",
            "xml": {
              "name": "Tag"
            }
          }
        },
        "xml": {
          "name": "SupplierInvoice"
        }
      },
      "IntegrationSupplierInvoiceDto": {
        "required": [
          "currencyRate",
          "documentId",
          "hasCrossCompanyPostings",
          "invoiceDate",
          "isCurrencyRateImported",
          "isPaymentBlocked",
          "netAmount",
          "roundingAmount",
          "taxAmount",
          "totalAmount",
          "totalCodedNetAmount",
          "totalCodedTaxAmount"
        ],
        "type": "object",
        "properties": {
          "importedOrderIdentifier": {
            "maxLength": 450,
            "type": "string",
            "description": "The order identifier from invoice head",
            "xml": {
              "name": "ImportedOrderIdentifier"
            }
          },
          "importedOrderIdentifier2": {
            "maxLength": 450,
            "type": "string",
            "description": "The order identifier 2 from invoice head",
            "xml": {
              "name": "ImportedOrderIdentifier2"
            }
          },
          "documentId": {
            "type": "integer",
            "description": "Unique Id to document in Medius",
            "format": "int32",
            "xml": {
              "name": "DocumentId"
            }
          },
          "balanceCodeString": {
            "$ref": "#/components/schemas/IntegrationBalanceCodeStringDto"
          },
          "companyExternalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Unique ExternalSystemId to the Company.",
            "xml": {
              "name": "CompanyExternalSystemId"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "Unique Company Id.",
            "xml": {
              "name": "CompanyId"
            }
          },
          "companyName": {
            "maxLength": 450,
            "type": "string",
            "description": "Name of the Company.",
            "xml": {
              "name": "CompanyName"
            }
          },
          "companyIdentifiers": {
            "type": "array",
            "xml": {
              "name": "CompanyIdentifiers",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationCompanyIdentifierDto"
            }
          },
          "companyOrganizationNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "Organization number for the Company.",
            "xml": {
              "name": "CompanyOrganizationNumber"
            }
          },
          "connectedAmount": {
            "type": "number",
            "description": "Total Connected amount on connected purchase orders. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "ConnectedAmount"
            }
          },
          "connectedQuantity": {
            "type": "number",
            "description": "Total connected quantity on connected purchase orders. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "ConnectedQuantity"
            }
          },
          "currencyCode": {
            "maxLength": 10,
            "type": "string",
            "description": "ISO Code for currency on invoice.",
            "xml": {
              "name": "CurrencyCode"
            }
          },
          "currencyExternalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to currency code.",
            "xml": {
              "name": "CurrencyExternalSystemId"
            }
          },
          "currencyRate": {
            "type": "number",
            "description": "Currency rate. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CurrencyRate"
            }
          },
          "isCurrencyRateImported": {
            "type": "boolean",
            "description": "Field determining whether currency rate was imported from invoice on document.",
            "xml": {
              "name": "IsCurrencyRateImported"
            }
          },
          "hasCrossCompanyPostings": {
            "type": "boolean",
            "description": "Indicates if CodingLines have different Line companies.",
            "xml": {
              "name": "HasCrossCompanyPostings"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "customField_List1": {
            "maxLength": 50,
            "type": "string",
            "description": "Custom list value of type text.",
            "xml": {
              "name": "CustomField_List1"
            }
          },
          "customField_List2": {
            "maxLength": 50,
            "type": "string",
            "description": "Custom list value of type text.",
            "xml": {
              "name": "CustomField_List2"
            }
          },
          "customField_List3": {
            "maxLength": 50,
            "type": "string",
            "description": "Custom list value of type text.",
            "xml": {
              "name": "CustomField_List3"
            }
          },
          "customField_List4": {
            "maxLength": 50,
            "type": "string",
            "description": "Custom list value of type text.",
            "xml": {
              "name": "CustomField_List4"
            }
          },
          "customField_List5": {
            "maxLength": 50,
            "type": "string",
            "description": "Custom list value of type text.",
            "xml": {
              "name": "CustomField_List5"
            }
          },
          "companyCustomField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CompanyCustomField_Boolean1"
            }
          },
          "companyCustomField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CompanyCustomField_Boolean2"
            }
          },
          "companyCustomField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CompanyCustomField_Boolean3"
            }
          },
          "companyCustomField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CompanyCustomField_Boolean4"
            }
          },
          "companyCustomField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CompanyCustomField_Boolean5"
            }
          },
          "companyCustomField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CompanyCustomField_Numeric1"
            }
          },
          "companyCustomField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CompanyCustomField_Numeric2"
            }
          },
          "companyCustomField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CompanyCustomField_Numeric3"
            }
          },
          "companyCustomField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CompanyCustomField_Numeric4"
            }
          },
          "companyCustomField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CompanyCustomField_Numeric5"
            }
          },
          "companyCustomField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CompanyCustomField_Text1"
            }
          },
          "companyCustomField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CompanyCustomField_Text2"
            }
          },
          "companyCustomField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CompanyCustomField_Text3"
            }
          },
          "companyCustomField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CompanyCustomField_Text4"
            }
          },
          "companyCustomField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CompanyCustomField_Text5"
            }
          },
          "companyCustomField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CompanyCustomField_DateTime1"
            }
          },
          "companyCustomField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CompanyCustomField_DateTime2"
            }
          },
          "companyCustomField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CompanyCustomField_DateTime3"
            }
          },
          "companyCustomField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CompanyCustomField_DateTime4"
            }
          },
          "companyCustomField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CompanyCustomField_DateTime5"
            }
          },
          "supplierCustomField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "SupplierCustomField_Boolean1"
            }
          },
          "supplierCustomField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "SupplierCustomField_Boolean2"
            }
          },
          "supplierCustomField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "SupplierCustomField_Boolean3"
            }
          },
          "supplierCustomField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "SupplierCustomField_Boolean4"
            }
          },
          "supplierCustomField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "SupplierCustomField_Boolean5"
            }
          },
          "supplierCustomField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "SupplierCustomField_Numeric1"
            }
          },
          "supplierCustomField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "SupplierCustomField_Numeric2"
            }
          },
          "supplierCustomField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "SupplierCustomField_Numeric3"
            }
          },
          "supplierCustomField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "SupplierCustomField_Numeric4"
            }
          },
          "supplierCustomField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "SupplierCustomField_Numeric5"
            }
          },
          "supplierCustomField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "SupplierCustomField_Text1"
            }
          },
          "supplierCustomField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "SupplierCustomField_Text2"
            }
          },
          "supplierCustomField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "SupplierCustomField_Text3"
            }
          },
          "supplierCustomField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "SupplierCustomField_Text4"
            }
          },
          "supplierCustomField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "SupplierCustomField_Text5"
            }
          },
          "supplierCustomField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "SupplierCustomField_DateTime1"
            }
          },
          "supplierCustomField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "SupplierCustomField_DateTime2"
            }
          },
          "supplierCustomField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "SupplierCustomField_DateTime3"
            }
          },
          "supplierCustomField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "SupplierCustomField_DateTime4"
            }
          },
          "supplierCustomField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "SupplierCustomField_DateTime5"
            }
          },
          "supplierCountry": {
            "maxLength": 450,
            "type": "string",
            "description": "Supplier country.",
            "xml": {
              "name": "SupplierCountry"
            }
          },
          "supplierState": {
            "maxLength": 450,
            "type": "string",
            "description": "Supplier state.",
            "xml": {
              "name": "SupplierState"
            }
          },
          "originalDocumentType": {
            "maxLength": 450,
            "type": "string",
            "description": "Type of document.",
            "xml": {
              "name": "OriginalDocumentType"
            },
            "enum": [
              "EXPENSE",
              "ORDER_BASED",
              "CONTRACT_BASED",
              "PAYMENT_REQUEST",
              "PREPAYMENT"
            ]
          },
          "dueDate": {
            "type": "string",
            "description": "Due date.",
            "format": "date-time",
            "xml": {
              "name": "DueDate"
            }
          },
          "finalBookingDate": {
            "type": "string",
            "description": "Final booking date.",
            "format": "date-time",
            "xml": {
              "name": "FinalBookingDate"
            }
          },
          "imagePath": {
            "maxLength": 450,
            "type": "string",
            "description": "URL to invoice image. Requires user to be logged in to Medius to access the image.",
            "xml": {
              "name": "ImagePath"
            }
          },
          "imageUNCPath": {
            "maxLength": 450,
            "type": "string",
            "description": "Only available for on-premise installations.",
            "xml": {
              "name": "ImageUNCPath"
            }
          },
          "documentURL": {
            "maxLength": 450,
            "type": "string",
            "description": "URL to document in Medius. User will be redirected to login page if not already logged in.",
            "xml": {
              "name": "DocumentURL"
            }
          },
          "invoiceDate": {
            "type": "string",
            "description": "Invoice date.",
            "format": "date-time",
            "xml": {
              "name": "InvoiceDate"
            }
          },
          "invoiceNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Invoice number.",
            "xml": {
              "name": "InvoiceNumber"
            }
          },
          "netAmount": {
            "type": "number",
            "description": "Invoice total NET amount. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "NetAmount"
            }
          },
          "paymentTerm": {
            "maxLength": 100,
            "type": "string",
            "description": "Payment term from Supplier.",
            "xml": {
              "name": "PaymentTerm"
            }
          },
          "paymentTermExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "PaymentTermExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "preferredPaymentDate": {
            "type": "string",
            "description": "Invoice preferred payment date.",
            "format": "date-time",
            "xml": {
              "name": "PreferredPaymentDate"
            }
          },
          "preliminaryBookingDate": {
            "type": "string",
            "description": "Invoice preliminary booking date.",
            "format": "date-time",
            "xml": {
              "name": "PreliminaryBookingDate"
            }
          },
          "preliminaryVoucherNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Voucher number from preliminary booking. Empty if the booking is a preliminary or direct booking.",
            "xml": {
              "name": "PreliminaryVoucherNumber"
            }
          },
          "finalVoucherNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Voucher number from final booking.",
            "xml": {
              "name": "FinalVoucherNumber"
            }
          },
          "roundingAmount": {
            "type": "number",
            "description": "Imported rounding amount. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "RoundingAmount"
            }
          },
          "supplierExternalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId for the supplier.",
            "xml": {
              "name": "SupplierExternalSystemId"
            }
          },
          "supplierId": {
            "maxLength": 450,
            "type": "string",
            "description": "Id for the Supplier.",
            "xml": {
              "name": "SupplierId"
            }
          },
          "supplierIdentifiers": {
            "type": "array",
            "xml": {
              "name": "SupplierIdentifiers",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationSupplierIdentifierDto"
            }
          },
          "supplierExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "SupplierExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "supplierName": {
            "maxLength": 450,
            "type": "string",
            "description": "Name of the Supplier.",
            "xml": {
              "name": "SupplierName"
            }
          },
          "contractNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Contract number from recurring invoices.",
            "xml": {
              "name": "ContractNumber"
            }
          },
          "invoiceReference": {
            "maxLength": 450,
            "type": "string",
            "description": "Invoice reference from invoice.",
            "xml": {
              "name": "InvoiceReference"
            }
          },
          "paymentReference": {
            "maxLength": 450,
            "type": "string",
            "description": "Payment reference from Invoice.",
            "xml": {
              "name": "PaymentReference"
            }
          },
          "referencedDocuments": {
            "type": "array",
            "description": "List of referenced documents.",
            "xml": {
              "name": "ReferencedDocuments",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationReferencedDocumentDto"
            }
          },
          "taxAmount": {
            "type": "number",
            "description": "Invoice total tax amount (imported value). Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "TaxAmount"
            }
          },
          "taxIndicator": {
            "maxLength": 450,
            "type": "string",
            "description": "Tax group from invoice.",
            "xml": {
              "name": "TaxIndicator"
            }
          },
          "taxIndicatorExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "TaxIndicatorExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "taxIndicator2": {
            "maxLength": 450,
            "type": "string",
            "description": "Tax indicator 2 from invoice.",
            "xml": {
              "name": "TaxIndicator2"
            }
          },
          "taxIndicator2ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "TaxIndicator2ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "supplierTaxIndicator1": {
            "maxLength": 450,
            "type": "string",
            "description": "Tax indicator 1 from invoice's supplier.",
            "xml": {
              "name": "SupplierTaxIndicator1"
            }
          },
          "supplierTaxIndicator2": {
            "maxLength": 450,
            "type": "string",
            "description": "Tax indicator 2 from invoice's supplier.",
            "xml": {
              "name": "SupplierTaxIndicator2"
            }
          },
          "totalAmount": {
            "type": "number",
            "description": "Invoice total amount incl. tax.",
            "format": "decimal",
            "xml": {
              "name": "TotalAmount"
            }
          },
          "totalCodedNetAmount": {
            "type": "number",
            "description": "Total coded NET amount. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "TotalCodedNetAmount"
            }
          },
          "totalCodedTaxAmount": {
            "type": "number",
            "description": "Total coded TAX amount. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "TotalCodedTaxAmount"
            }
          },
          "preliminaryPeriodExternalSystemId": {
            "maxLength": 450,
            "type": "string",
            "description": "ExternalSystemId to the preliminary period used. Empty if direct booking.",
            "xml": {
              "name": "PreliminaryPeriodExternalSystemId"
            }
          },
          "preliminaryPeriodName": {
            "maxLength": 450,
            "type": "string",
            "description": "Name of the preliminary period. Empty if direct booking.",
            "xml": {
              "name": "PreliminaryPeriodName"
            }
          },
          "finalPeriodName": {
            "maxLength": 450,
            "type": "string",
            "description": "Name of the Final period.",
            "xml": {
              "name": "FinalPeriodName"
            }
          },
          "finalPeriodExternalSystemId": {
            "maxLength": 450,
            "type": "string",
            "description": "ExternalSystemId to the final period used.",
            "xml": {
              "name": "FinalPeriodExternalSystemId"
            }
          },
          "invoiceLines": {
            "type": "array",
            "xml": {
              "name": "InvoiceLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationSupplierInvoiceLineDto"
            }
          },
          "codingLines": {
            "type": "array",
            "xml": {
              "name": "CodingLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationCodingLineDto"
            }
          },
          "taxLines": {
            "type": "array",
            "xml": {
              "name": "TaxLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationTaxLineDto"
            }
          },
          "poLines": {
            "type": "array",
            "xml": {
              "name": "POLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationPurchaseOrderLineInformationDto"
            }
          },
          "poConnectionLines": {
            "type": "array",
            "xml": {
              "name": "POConnectionLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationPurchaseOrderLineConnectionDto"
            }
          },
          "deviationLines": {
            "type": "array",
            "xml": {
              "name": "DeviationLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationDeviationLineDto"
            }
          },
          "exceptionTypeConnections": {
            "type": "array",
            "xml": {
              "name": "ExceptionTypeConnections",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationExceptionTypeConnectionDto"
            }
          },
          "prepaymentPOConnections": {
            "type": "array",
            "description": "Available on prepayment invoice when there is a connection to a PO.",
            "xml": {
              "name": "PrepaymentPOConnections",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationPrepaymentPOConnectionDto"
            }
          },
          "linkedPrepayments": {
            "type": "array",
            "description": "Available on Non-PO or PO-invoice when there is a linked prepayment.",
            "xml": {
              "name": "LinkedPrepayments",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationLinkedPrepaymentDto"
            }
          },
          "orderType": {
            "maxLength": 450,
            "type": "string",
            "description": "Type of connected purchase order(s). Internal - when connected POs are from Procurement module, External - when connected POs are imported from ERP, Mixed - when connected to Pos from different sources.",
            "xml": {
              "name": "OrderType"
            }
          },
          "isPaymentBlocked": {
            "type": "boolean",
            "description": "If the invoice should be blocked for payment.",
            "xml": {
              "name": "IsPaymentBlocked"
            }
          },
          "paymentDetailsExternalSystemId": {
            "maxLength": 450,
            "type": "string",
            "description": "ExternalSystemId of PaymentDetails connected with invoice. Can be empty if the PaymentDetails is not used or not found (and configured to allow empty).",
            "xml": {
              "name": "PaymentDetailsExternalSystemId"
            }
          },
          "paymentDetailId": {
            "maxLength": 450,
            "type": "string",
            "description": "PaymentDetailId of PaymentDetails connected with invoice. Can be empty if the PaymentDetails is not used or not found (and configured to allow empty).",
            "xml": {
              "name": "PaymentDetailId"
            }
          },
          "paymentDetailCustomField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "PaymentDetailCustomField_Boolean1"
            }
          },
          "paymentDetailCustomField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "PaymentDetailCustomField_Boolean2"
            }
          },
          "paymentDetailCustomField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "PaymentDetailCustomField_Boolean3"
            }
          },
          "paymentDetailCustomField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "PaymentDetailCustomField_Boolean4"
            }
          },
          "paymentDetailCustomField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "PaymentDetailCustomField_Boolean5"
            }
          },
          "paymentDetailCustomField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "PaymentDetailCustomField_Numeric1"
            }
          },
          "paymentDetailCustomField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "PaymentDetailCustomField_Numeric2"
            }
          },
          "paymentDetailCustomField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "PaymentDetailCustomField_Numeric3"
            }
          },
          "paymentDetailCustomField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "PaymentDetailCustomField_Numeric4"
            }
          },
          "paymentDetailCustomField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "PaymentDetailCustomField_Numeric5"
            }
          },
          "paymentDetailCustomField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "PaymentDetailCustomField_Text1"
            }
          },
          "paymentDetailCustomField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "PaymentDetailCustomField_Text2"
            }
          },
          "paymentDetailCustomField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "PaymentDetailCustomField_Text3"
            }
          },
          "paymentDetailCustomField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "PaymentDetailCustomField_Text4"
            }
          },
          "paymentDetailCustomField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "PaymentDetailCustomField_Text5"
            }
          },
          "paymentDetailCustomField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "PaymentDetailCustomField_DateTime1"
            }
          },
          "paymentDetailCustomField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "PaymentDetailCustomField_DateTime2"
            }
          },
          "paymentDetailCustomField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "PaymentDetailCustomField_DateTime3"
            }
          },
          "paymentDetailCustomField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "PaymentDetailCustomField_DateTime4"
            }
          },
          "paymentDetailCustomField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "PaymentDetailCustomField_DateTime5"
            }
          },
          "erpId": {
            "maxLength": 450,
            "type": "string",
            "description": "ERPId from company setting.",
            "xml": {
              "name": "ERPId"
            }
          },
          "paymentRequestInstruction": {
            "maxLength": 450,
            "type": "string",
            "description": "Instructions from the payment request. Only available for Payment request.",
            "xml": {
              "name": "PaymentRequestInstruction"
            }
          },
          "paymentRequestMailToAddress": {
            "maxLength": 450,
            "type": "string",
            "description": "Mail to address for payment request. Only available for Payment request.",
            "xml": {
              "name": "PaymentRequestMailToAddress"
            }
          },
          "cashDiscountDueDate1": {
            "type": "string",
            "description": "Used when Cash Discount is available from the Payment term.",
            "format": "date-time",
            "xml": {
              "name": "CashDiscountDueDate1"
            }
          },
          "cashDiscountDueDate2": {
            "type": "string",
            "description": "Used when Cash Discount is available from the Payment term.",
            "format": "date-time",
            "xml": {
              "name": "CashDiscountDueDate2"
            }
          },
          "receivedDate": {
            "type": "string",
            "description": "Date when an invoice arrived.",
            "format": "date-time",
            "xml": {
              "name": "ReceivedDate"
            }
          },
          "vatDate": {
            "type": "string",
            "description": "VAT date for an invoice, for example, the date when goods have been received or a service has started.",
            "format": "date-time",
            "xml": {
              "name": "VatDate"
            }
          },
          "eInvoiceTrackingId": {
            "type": "string",
            "maxLength": 100,
            "description": "A tracking id for e-invoices for reporting and control.",
            "xml": {
              "name": "EInvoiceTrackingId"
            }
          },
          "prepaymentCategory": {
            "type": "string",
            "maxLength": 450,
            "description": "The category of the pre payment.",
            "xml": {
              "name": "PrepaymentCategory"
            }
          },
          "addressInformation": {
            "type": "array",
            "xml": {
              "name": "AddressInformation",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationAddressInformationDto"
            }
          },
          "invoiceRemark": {
            "type": "string",
            "maxLength": 450,
            "description": "Remarks/comments from the invoice header.",
            "xml": {
              "name": "InvoiceRemark"
            }
          }
        },
        "xml": {
          "name": "Invoice"
        }
      },
      "IntegrationBalanceCodeStringDto": {
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "dimensions": {
            "$ref": "#/components/schemas/IntegrationCodingDimensionsDto"
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "xml": {
              "name": "Amount"
            }
          }
        },
        "xml": {
          "name": "BalanceCodeString"
        }
      },
      "IntegrationSupplierInvoiceLineDto": {
        "required": [
          "amount",
          "lineNumber",
          "quantity",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Imported invoice line amount. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "Amount"
            }
          },
          "itemDescription": {
            "maxLength": 450,
            "type": "string",
            "description": "Imported invoice line item description.",
            "xml": {
              "name": "ItemDescription"
            }
          },
          "itemNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Imported invoice line item number.",
            "xml": {
              "name": "ItemNumber"
            }
          },
          "lineNumber": {
            "type": "integer",
            "description": "Counter for Line number. Serial number, starts with 1.",
            "format": "int32",
            "xml": {
              "name": "LineNumber"
            }
          },
          "quantity": {
            "type": "number",
            "description": "Imported invoice line quantity.",
            "format": "decimal",
            "xml": {
              "name": "Quantity"
            }
          },
          "quantityUnit": {
            "maxLength": 450,
            "type": "string",
            "description": "Imported invoice line quantity unit description.",
            "xml": {
              "name": "QuantityUnit"
            }
          },
          "unitPrice": {
            "type": "number",
            "description": "Imported invoice line unit price.",
            "format": "decimal",
            "xml": {
              "name": "UnitPrice"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          }
        },
        "xml": {
          "name": "InvoiceLine"
        }
      },
      "IntegrationReferencedDocumentDto": {
      	"type": "object",
      	"properties": {
      	  "invoiceNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Invoice number.",
            "xml": {
              "name": "InvoiceNumber"
            }
          },
          "preliminaryVoucherNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Voucher number from preliminary booking. Empty if the booking is a preliminary or direct booking.",
            "xml": {
              "name": "PreliminaryVoucherNumber"
            }
      	  },
      	  "preliminaryBookingDate": {
            "type": "string",
            "description": "Invoice preliminary booking date.",
            "format": "date-time",
            "xml": {
              "name": "PreliminaryBookingDate"
            }
      	  },
      	  "finalVoucherNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Voucher number from final booking.",
            "xml": {
              "name": "FinalVoucherNumber"
            }
      	  },
      	  "finalBookingDate": {
            "type": "string",
            "description": "Final booking date.",
            "format": "date-time",
            "xml": {
              "name": "FinalBookingDate"
            }
      	  },
      	  "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "Unique Company Id.",
            "xml": {
              "name": "CompanyId"
            }
      	  },
      	  "companyExternalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Unique ExternalSystemId to the Company.",
            "xml": {
              "name": "CompanyExternalSystemId"
            }
      	  }
      	},
      	"xml": {
      	  "name": "ReferencedDocument"
        }
      },
      "IntegrationCodingLineDto": {
        "required": [
          "amount",
          "codingLineNumber",
          "grossAmount",
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "maxLength": 450,
            "type": "string",
            "description": "Only used with CrossCompanyPosting feature. CompanyId for company connected to coding line.",
            "xml": {
              "name": "CompanyId"
            }
          },
          "companyExternalSystemId": {
            "maxLength": 450,
            "type": "string",
            "description": "Only used with CrossCompanyPosting feature. ExternalSystemId for company connected to coding line.",
            "xml": {
              "name": "CompanyExternalSystemId"
            }
          },
          "accrual": {
            "$ref": "#/components/schemas/IntegrationAccrualInformationDto"
          },
          "dimensions": {
            "$ref": "#/components/schemas/IntegrationCodingDimensionsDto"
          },
          "amount": {
            "type": "number",
            "description": "Coded NET amount. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "Amount"
            }
          },
          "grossAmount": {
            "type": "number",
            "description": "Coded Gross amount. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "GrossAmount"
            }
          },
          "invoiceLineNumber": {
            "type": "integer",
            "description": "Connected invoice line number. Reference value can be found in IntegrationSupplierInvoiceLineDto. Can be NULL if no connection to invoice line.",
            "format": "int32",
            "xml": {
              "name": "InvoiceLineNumber"
            }
          },
          "codingLineNumber": {
            "type": "integer",
            "description": "Id reference to this specific coding line.",
            "format": "int32",
            "xml": {
              "name": "CodingLineNumber"
            }
          },
          "parentCodingLineNumber": {
            "type": "integer",
            "description": "When non-deductible tax is used and APA creates an additional coding line based on the configuration, the parent coding line can be found through `parentCodingLineNumber`.",
            "format": "int32",
            "xml": {
              "name": "CodingLineNumber"
            }
          },
          "taxIndicator1": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Only in use if Medius is configured to code on tax codes and if TaxDimensions not provided.",
            "xml": {
              "name": "TaxIndicator1"
            }
          },
          "taxIndicator2": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Only in use if Medius is configured to code on tax codes and if TaxDimensions not provided.",
            "xml": {
              "name": "TaxIndicator2"
            }
          },
          "isEnabled": {
            "type": "boolean",
            "description": "If the coding line is enabled in user UI or not.",
            "xml": {
              "name": "IsEnabled"
            }
          },
          "tag": {
            "maxLength": 450,
            "type": "string",
            "description": "Type of coding line.",
            "xml": {
              "name": "Tag"
            },
            "enum": [
              "Cost",
              "ExceptionType",
              "CostBalancing",
              "Clearance",
              "ExceptionTypeAutoApproved",
              "DeviationUnitPrice",
              "DeviationQuantity",
              "DeviationLineTotal",
              "DeviationNetAmount",
              "DeviationUnitPriceWithinTolerance",
              "DeviationQuantityWithinTolerance",
              "DeviationLineTotalWithinTolerance",
              "DeviationNetAmountWithinTolerance",
              "DeviationLineTotalApproved",
              "DeviationLineTotalRejected",
              "DeviationUnitPriceApproved",
              "DeviationUnitPriceRejected",
              "DeviationQuantityApproved",
              "DeviationQuantityRejected",
              "DeviationNetAmountApproved",
              "DeviationNetAmountRejected",
              "DeviationExceptionType",
              "DeviationExceptionTypeApproved",
              "DeviationExceptionTypeRejected",
              "ItemCharge",
              "Tax",
              "RejectedWithShortPayment"
            ]
          },
          "poConnectionLineNumbers": {
            "type": "array",
            "description": "List of connected purchase order line connections.",
            "xml": {
              "name": "POConnectionLineNumbers",
              "wrapped": true
            },
            "items": {
              "type": "integer",
              "description": "Reference to LineNumber in POConnectionLines.",
              "format": "int32",
              "xml": {
                "name": "int"
              }
            }
          },
          "lastApproverFirstName": {
            "maxLength": 120,
            "type": "string",
            "description": "First name of the person who made the last approval on given coding line in Medius.",
            "xml": {
              "name": "LastApproverFirstName"
            }
          },
          "lastApproverLastName": {
            "maxLength": 120,
            "type": "string",
            "description": "Last name of the person who made the last approval on given coding line in Medius.",
            "xml": {
              "name": "LastApproverLastName"
            }
          },
          "lastApproverUserName": {
            "maxLength": 120,
            "type": "string",
            "description": "User name of the person who made the last approval on given coding line in Medius.",
            "xml": {
              "name": "LastApproverUserName"
            }
          }
        },
        "xml": {
          "name": "CodingLine"
        }
      },
      "IntegrationAccrualInformationDto": {
        "required": [
          "numberOfPeriods",
          "useLinesWithAccrualPeriods"
        ],
        "type": "object",
        "properties": {
          "accrualTemplateId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity.",
            "xml": {
              "name": "AccrualTemplateId"
            }
          },
          "dimensions": {
            "$ref": "#/components/schemas/IntegrationCodingDimensionsDto"
          },
          "numberOfPeriods": {
            "type": "integer",
            "description": "Number of periods.",
            "format": "int32",
            "xml": {
              "name": "NumberOfPeriods"
            }
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the accruals.",
            "format": "date-time",
            "xml": {
              "name": "StartDate"
            }
          },
          "endDate": {
            "type": "string",
            "description": "End date of the accruals.",
            "format": "date-time",
            "xml": {
              "name": "EndDate"
            }
          },
          "accrualPeriods": {
            "type": "array",
            "xml": {
              "name": "AccrualPeriods",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationAccrualPeriodDto"
            }
          },
          "accrualErpIdentifier": {
            "maxLength": 100,
            "type": "string",
            "description": "ERPIdentifier to corresponding entity.",
            "xml": {
              "name": "AccrualErpIdentifier"
            }
          },
          "useLinesWithAccrualPeriods": {
            "type": "boolean",
            "description": "If true, accrual periods are specified manually. If false, only NumberOfPeriods will be provided.",
            "xml": {
              "name": "UseLinesWithAccrualPeriods"
            }
          }
        },
        "xml": {
          "name": "Accrual"
        }
      },
      "IntegrationAccrualPeriodDto": {
        "required": [
          "percentage",
          "period"
        ],
        "type": "object",
        "properties": {
          "period": {
            "type": "integer",
            "description": "Number of the period.",
            "format": "int32",
            "xml": {
              "name": "Period"
            }
          },
          "percentage": {
            "type": "number",
            "description": "Percentage of the period.",
            "format": "decimal",
            "xml": {
              "name": "Percentage"
            }
          }
        },
        "xml": {
          "name": "AccrualPeriod"
        }
      },
      "IntegrationTaxLineDto": {
        "required": [
          "amount",
          "taxLineNumber"
        ],
        "type": "object",
        "properties": {
          "dimensions": {
            "$ref": "#/components/schemas/IntegrationCodingDimensionsDto"
          },
          "amount": {
            "type": "number",
            "description": "Tax amount. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "Amount"
            }
          },
          "netAmount": {
            "type": "number",
            "description": "Net amount for this Tax line. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "NetAmount"
            }
          },
          "grossAmount": {
            "type": "number",
            "description": "Gross amount for this Tax line. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "GrossAmount"
            }
          },
          "codingLineNumber": {
            "type": "integer",
            "description": "Connection to Coding line. Only available if tax codes are used in coding.",
            "format": "int32",
            "xml": {
              "name": "CodingLineNumber"
            }
          },
          "deductiblePercentage": {
            "type": "number",
            "description": "Tax code deductible percentage. Decimal format (19,5).",
            "format": "decimal",
            "xml": {
              "name": "DeductiblePercentage"
            }
          },
          "percentage": {
            "type": "number",
            "description": "Tax code percentage. Decimal format (19,5).",
            "format": "decimal",
            "xml": {
              "name": "Percentage"
            }
          },
          "taxCode": {
            "maxLength": 100,
            "type": "string",
            "description": "Tax code.",
            "xml": {
              "name": "TaxCode"
            }
          },
          "taxCodeExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "TaxCodeExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "taxLineNumber": {
            "type": "integer",
            "description": "Counter for Tax line number. Serial number, starts with 1.",
            "format": "int32",
            "xml": {
              "name": "TaxLineNumber"
            }
          },
          "taxIndicator1": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Only in use if given tax line originates from certain tax group.",
            "xml": {
              "name": "TaxIndicator1"
            }
          },
          "taxIndicator1ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "TaxIndicator1ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "taxIndicator2": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity. Only in use if given tax line originates from certain tax group and that 2 tax indicators is in use.",
            "xml": {
              "name": "TaxIndicator2"
            }
          },
          "taxIndicator2ExternalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "TaxIndicator2ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          }
        },
        "xml": {
          "name": "TaxLine"
        }
      },
      "IntegrationPurchaseOrderLineInformationDto": {
        "required": [
          "conversionFactor",
          "isTwoWayMatch",
          "lineNumber",
          "quantity",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "lineNumber": {
            "type": "integer",
            "description": "Counter for Purchase order line. Serial number, starts with 1.",
            "format": "int32",
            "xml": {
              "name": "LineNumber"
            }
          },
          "purchaseOrderNumber": {
            "maxLength": 300,
            "type": "string",
            "description": "Purchase order number for the given line.",
            "xml": {
              "name": "PurchaseOrderNumber"
            }
          },
          "purchaseOrderNumber2": {
            "maxLength": 450,
            "type": "string",
            "description": "Purchase order number 2 for the given line.",
            "xml": {
              "name": "PurchaseOrderNumber2"
            }
          },
          "purchaseOrderLineNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Purchase order line number for the given line.",
            "xml": {
              "name": "PurchaseOrderLineNumber"
            }
          },
          "itemNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Item number for the given line.",
            "xml": {
              "name": "ItemNumber"
            }
          },
          "itemDescription": {
            "maxLength": 450,
            "type": "string",
            "description": "Item description.",
            "xml": {
              "name": "ItemDescription"
            }
          },
          "conversionFactor": {
            "type": "number",
            "description": "Conversion factor for unit price and quantity.",
            "format": "decimal",
            "xml": {
              "name": "ConversionFactor"
            }
          },
          "quantity": {
            "type": "number",
            "description": "Purchase order line quantity. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "Quantity"
            }
          },
          "unit": {
            "maxLength": 100,
            "type": "string",
            "description": "Unit of measure for the purchase order line.",
            "xml": {
              "name": "Unit"
            }
          },
          "unitPrice": {
            "type": "number",
            "description": "Purchase order line unit price. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "UnitPrice"
            }
          },
          "reference": {
            "maxLength": 450,
            "type": "string",
            "description": "Purchase order line reference.",
            "xml": {
              "name": "Reference"
            }
          },
          "orderType": {
            "maxLength": 450,
            "type": "string",
            "description": "Type of connected purchase order line. Internal - when connected line are from Procurement module, External - when connected line are imported from ERP.",
            "xml": {
              "name": "OrderType"
            }
          },
          "isTwoWayMatch": {
            "type": "boolean",
            "description": "Indicates if the purchase order line is two way match or not.",
            "xml": {
              "name": "IsTwoWayMatch"
            }
          },
          "externalSystemId": {
            "maxLength": 450,
            "type": "string",
            "description": "ExternalSystemId to indicated purchase order line.",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "externalPurchaseOrderLineNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Used with Procurement module. Purchase order line number from external system. Fetched from the procurement purchase order.",
            "xml": {
              "name": "ExternalPurchaseOrderLineNumber"
            }
          },
          "isSynchronizedWithExternalSystem": {
            "type": "boolean",
            "description": "Used with Procurement module. Indicates that the purchase order has been synchronized with external system.",
            "xml": {
              "name": "IsSynchronizedWithExternalSystem"
            }
          },
          "purchaseOrderExternalSystemMetadata": {
            "type": "array",
            "xml": {
              "name": "PurchaseOrderExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          },
          "purchaseOrderLineExternalSystemMetadata": {
            "type": "array",
            "xml": {
              "name": "PurchaseOrderLineExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrderLineInformation"
        }
      },
      "IntegrationPurchaseOrderLineConnectionDto": {
        "required": [
          "connectedAmount",
          "connectedQuantity",
          "conversionFactor",
          "deliveryLineIsFictive",
          "isManual",
          "lineNumber",
          "purchaseOrderLineNumber"
        ],
        "type": "object",
        "properties": {
          "connectedAmount": {
            "type": "number",
            "description": "Connected Quantity * Connected UnitPrice. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "ConnectedAmount"
            }
          },
          "connectedQuantity": {
            "type": "number",
            "description": "Connected quantity between delivery line and invoice line. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "ConnectedQuantity"
            }
          },
          "connectionLevel": {
            "type": "string",
            "description": "Determines on what level the connection was made. Values:[LineDetail, LineTotal, Head, LineItemCharge, LineServiceBased]",
            "xml": {
              "name": "ConnectionLevel"
            }
          },
          "conversionFactor": {
            "type": "number",
            "description": "Conversion factor for unit price and quantity from delivery line. Constant '1' if no delivery exists. Decimal format (19,5).",
            "format": "decimal",
            "xml": {
              "name": "ConversionFactor"
            }
          },
          "deliveredQuantity": {
            "type": "number",
            "description": "Delivered quantity. Can be NULL if no delivery exists. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "DeliveredQuantity"
            }
          },
          "deliveredAmount": {
            "type": "number",
            "description": "Delivered amount. Can be NULL if no delivery exists. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "DeliveredAmount"
            }
          },
          "deliveredUnitPrice": {
            "type": "number",
            "description": "Delivered unit price. Can be NULL if no delivery exists. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "DeliveredUnitPrice"
            }
          },
          "deliveryDate": {
            "type": "string",
            "description": "Delivery date. Can be NULL if no delivery exists.",
            "format": "date-time",
            "xml": {
              "name": "DeliveryDate"
            }
          },
          "deliveryNote": {
            "maxLength": 450,
            "type": "string",
            "description": "Delivery note. Empty if no delivery exists.",
            "xml": {
              "name": "DeliveryNote"
            }
          },
          "deliveryNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Delivery number. Empty if no delivery exists.",
            "xml": {
              "name": "DeliveryNumber"
            }
          },
          "releaseNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Release number. Empty if no delivery exists.",
            "xml": {
              "name": "ReleaseNumber"
            }
          },
          "invoiceLineNumber": {
            "type": "integer",
            "description": "Reference to connected invoice line number.",
            "format": "int32",
            "xml": {
              "name": "InvoiceLineNumber"
            }
          },
          "isManual": {
            "type": "boolean",
            "description": "Determines if the line was system created or user created.",
            "xml": {
              "name": "IsManual"
            }
          },
          "lineNumber": {
            "type": "integer",
            "description": "Counter for Purchase order line connection. Serial number, starts with 1.",
            "format": "int32",
            "xml": {
              "name": "LineNumber"
            }
          },
          "purchaseOrderLineNumber": {
            "type": "integer",
            "description": "Reference to connected purchase order line number.",
            "format": "int32",
            "xml": {
              "name": "PurchaseOrderLineNumber"
            }
          },
          "transactionDate": {
            "type": "string",
            "description": "Transaction date. Can be null if no delivery exists.",
            "format": "date-time",
            "xml": {
              "name": "TransactionDate"
            }
          },
          "codingLineNumbers": {
            "type": "array",
            "description": "List of connected coding lines.",
            "xml": {
              "name": "CodingLineNumbers",
              "wrapped": true
            },
            "items": {
              "type": "integer",
              "description": "Reference to connected coding line number.",
              "format": "int32",
              "xml": {
                "name": "int"
              }
            }
          },
          "deliveryLineCustomField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "DeliveryLineCustomField_Boolean1"
            }
          },
          "deliveryLineCustomField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "DeliveryLineCustomField_Boolean2"
            }
          },
          "deliveryLineCustomField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "DeliveryLineCustomField_Boolean3"
            }
          },
          "deliveryLineCustomField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "DeliveryLineCustomField_Boolean4"
            }
          },
          "deliveryLineCustomField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "DeliveryLineCustomField_Boolean5"
            }
          },
          "deliveryLineCustomField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "DeliveryLineCustomField_Numeric1"
            }
          },
          "deliveryLineCustomField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "DeliveryLineCustomField_Numeric2"
            }
          },
          "deliveryLineCustomField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "DeliveryLineCustomField_Numeric3"
            }
          },
          "deliveryLineCustomField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "DeliveryLineCustomField_Numeric4"
            }
          },
          "deliveryLineCustomField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "DeliveryLineCustomField_Numeric5"
            }
          },
          "deliveryLineCustomField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "DeliveryLineCustomField_Text1"
            }
          },
          "deliveryLineCustomField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "DeliveryLineCustomField_Text2"
            }
          },
          "deliveryLineCustomField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "DeliveryLineCustomField_Text3"
            }
          },
          "deliveryLineCustomField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "DeliveryLineCustomField_Text4"
            }
          },
          "deliveryLineCustomField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "DeliveryLineCustomField_Text5"
            }
          },
          "deliveryLineCustomField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "DeliveryLineCustomField_DateTime1"
            }
          },
          "deliveryLineCustomField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "DeliveryLineCustomField_DateTime2"
            }
          },
          "deliveryLineCustomField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "DeliveryLineCustomField_DateTime3"
            }
          },
          "deliveryLineCustomField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "DeliveryLineCustomField_DateTime4"
            }
          },
          "deliveryLineCustomField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "DeliveryLineCustomField_DateTime5"
            }
          },
          "deliveryLineExternalSystemId": {
            "maxLength": 450,
            "type": "string",
            "description": "Unique Identifier of the delivery line.",
            "xml": {
              "name": "DeliveryLineExternalSystemId"
            }
          },
          "deliveryLineIsFictive": {
            "type": "boolean",
            "description": "If the delivery line is fictive or not. Default false.",
            "xml": {
              "name": "DeliveryLineIsFictive"
            }
          },
          "externalDeliveryNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Used with Procurement module. Delivery number from external system. Fetched from the procurement purchase order.",
            "xml": {
              "name": "ExternalDeliveryNumber"
            }
          },
          "isSynchronizedWithExternalSystem": {
            "type": "boolean",
            "description": "Used with Procurement module. Indicates that the delivery line has been synchronized with external system.",
            "xml": {
              "name": "IsSynchronizedWithExternalSystem"
            }
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          }
        },
        "xml": {
          "name": "PurchaseOrderLineConnection"
        }
      },
      "IntegrationDeviationLineDto": {
        "required": [
          "isApproved",
          "isAutoCoded",
          "isRejected"
        ],
        "type": "object",
        "properties": {
          "approvalUserFirstName": {
            "maxLength": 120,
            "type": "string",
            "description": "First  name for the user that approved/rejected the line.",
            "xml": {
              "name": "ApprovalUserFirstName"
            }
          },
          "approvalUserLastName": {
            "maxLength": 120,
            "type": "string",
            "description": "Last name for the user that approved/rejected the line.",
            "xml": {
              "name": "ApprovalUserLastName"
            }
          },
          "approvalUserUsername": {
            "maxLength": 120,
            "type": "string",
            "description": "Username for the user that approved/rejected the line.",
            "xml": {
              "name": "ApprovalUserUsername"
            }
          },
          "deviationAmount": {
            "type": "number",
            "description": "Total deviation amount. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "DeviationAmount"
            }
          },
          "deviationDays": {
            "type": "integer",
            "description": "Amount of deviation days. Due date deviation needs to be activated.",
            "format": "int32",
            "xml": {
              "name": "DeviationDays"
            }
          },
          "deviationQuantity": {
            "type": "number",
            "description": "Deviation quantity. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "DeviationQuantity"
            }
          },
          "deviationType": {
            "type": "string",
            "description": "Describes what type of deviation occurred. For possible values see list.",
            "xml": {
              "name": "DeviationType"
            },
            "enum": [
              "InvoiceLineAmountDeviation",
              "LineAmountExceptionTypeDeviation",
              "UnitPriceDeviation",
              "UnitPriceExceptionTypeDeviation",
              "QuantityDeviation",
              "DueDateDeviation",
              "NetAmountDeviation"
            ]
          },
          "isApproved": {
            "type": "boolean",
            "description": "Determines if this deviation line was approved by user.",
            "xml": {
              "name": "IsApproved"
            }
          },
          "isAutoCoded": {
            "type": "boolean",
            "description": "Determines if the deviation line was auto coded or manual coded in workflow.",
            "xml": {
              "name": "IsAutoCoded"
            }
          },
          "isRejected": {
            "type": "boolean",
            "description": "Determines if this deviation line was rejected by user.",
            "xml": {
              "name": "IsRejected"
            }
          },
          "isWithinTolerance": {
            "type": "boolean",
            "description": "Determines if the deviation was within tolerance limit configured in the workflow.",
            "xml": {
              "name": "IsWithinTolerance"
            }
          },
          "poConnectionLineNumbers": {
            "type": "array",
            "description": "List of connected purchase order line connections.",
            "xml": {
              "name": "POConnectionLineNumbers",
              "wrapped": true
            },
            "items": {
              "type": "integer",
              "description": "Reference to LineNumber in POConnectionLines.",
              "format": "int32",
              "xml": {
                "name": "int"
              }
            }
          },
          "codingLineNumbers": {
            "type": "array",
            "description": "List of connected coding lines.",
            "xml": {
              "name": "CodingLineNumbers",
              "wrapped": true
            },
            "items": {
              "type": "integer",
              "description": "Reference to connected coding line number.",
              "format": "int32",
              "xml": {
                "name": "int"
              }
            }
          }
        },
        "xml": {
          "name": "DeviationLine"
        }
      },
      "IntegrationExceptionTypeConnectionDto": {
        "required": [
          "invoiceLineNumber",
          "isManual"
        ],
        "type": "object",
        "properties": {
          "invoiceLineNumber": {
            "type": "integer",
            "description": "Reference to invoice line number.",
            "format": "int32",
            "xml": {
              "name": "InvoiceLineNumber"
            }
          },
          "exceptionType": {
            "maxLength": 450,
            "type": "string",
            "description": "Exception type used in Medius.",
            "xml": {
              "name": "ExceptionType"
            }
          },
          "isManual": {
            "type": "boolean",
            "description": "If exception type connection was done manually or automatically.",
            "xml": {
              "name": "IsManual"
            }
          }
        },
        "xml": {
          "name": "ExceptionTypeConnection"
        }
      },
      "IntegrationPrepaymentPOConnectionDto": {
        "type": "object",
        "properties": {
          "supplierId": {
            "maxLength": 100,
            "type": "string",
            "description": "Supplier Id from the connected PO.",
            "xml": {
              "name": "SupplierId"
            }
          },
          "connectedOrderIdentifier": {
            "maxLength": 450,
            "type": "string",
            "description": "Order identifier from the connected PO.",
            "xml": {
              "name": "ConnectedOrderIdentifier"
            }
          }
        },
        "xml": {
          "name": "PrepaymentPOConnection"
        }
      },
      "IntegrationLinkedPrepaymentDto": {
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Invoice number for the prepayment invoice.",
            "xml": {
              "name": "InvoiceNumber"
            }
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time",
            "description": "Invoice date for the prepayment invoice.",
            "xml": {
              "name": "InvoiceDate"
            }
          },
          "supplierId": {
            "maxLength": 100,
            "type": "string",
            "description": "Supplier Id from the prepayment invoice.",
            "xml": {
              "name": "SupplierId"
            }
          },
          "orderIdentifier": {
            "maxLength": 450,
            "type": "string",
            "description": "Order identifier to which the prepayment invoice is connected.",
            "xml": {
              "name": "OrderIdentifier"
            }
          },
          "finalVoucherNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Final voucher number for the prepayment invoice.",
            "xml": {
              "name": "FinalVoucherNumber"
            }
          },
          "prepaidAmount": {
            "type": "number",
            "format": "decimal",
            "description": "The pre paid amount of the prepayment invoice. Decimal format (28,14).",
            "xml": {
              "name": "PrepaidAmount"
            }
          }
        },
        "xml": {
          "name": "LinkedPrepayment"
        }
      },
      "IntegrationAddressInformationDto": {
        "type": "object",
        "description": "You can use `addressInfomration` to ensure accurate shipment tracking, financial reporting and it aids in applying correct tax rates and compliance at invoice posting to your ERP.",
        "properties": {
          "addressInformationType": {
            "maxLength": 450,
            "type": "string",
            "description": "The address type can be either `ShipTo` or `ShipFrom`. Only one set of address per address type.",
            "xml": {
              "name": "AddressInformationType"
            },
            "enum": [
              "ShipTo",
              "ShipFrom"
            ]
          },
          "street": {
            "maxLength": 450,
            "type": "string",
            "description": "Street",
            "xml": {
              "name": "Street"
            }
          },
          "city": {
            "maxLength": 450,
            "type": "string",
            "description": "City",
            "xml": {
              "name": "City"
            }
          },
          "state": {
            "maxLength": 450,
            "type": "string",
            "description": "State",
            "xml": {
              "name": "State"
            }
          },
          "postalCode": {
            "maxLength": 450,
            "type": "string",
            "description": "PostalCode",
            "xml": {
              "name": "PostalCode"
            }
          },
          "country": {
            "maxLength": 450,
            "type": "string",
            "description": "Country",
            "xml": {
              "name": "Country"
            }
          }
        },
        "xml": {
          "name": "AddressInformation"
        }
      },
      "IntegrationTaxGroupDto": {
        "required": [
          "companyId",
          "description",
          "externalSystemId",
          "groupName",
          "indicatorNumber",
          "isActive"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive",
            "xml": {
              "name": "IsActive"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CompanyId"
            }
          },
          "groupName": {
            "maxLength": 100,
            "type": "string",
            "description": "Name of the tax group",
            "xml": {
              "name": "GroupName"
            }
          },
          "description": {
            "maxLength": 450,
            "type": "string",
            "description": "Description of the tax group",
            "xml": {
              "name": "Description"
            }
          },
          "lines": {
            "type": "array",
            "xml": {
              "name": "Lines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationTaxCodeDto"
            }
          },
          "indicatorNumber": {
            "type": "integer",
            "description": "Indicator number of the tax group when using two tax indicators. Values: [1/2], default: 1.",
            "format": "int32",
            "xml": {
              "name": "IndicatorNumber"
            },
            "enum": [
              1,
              2
            ]
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          }
        },
        "xml": {
          "name": "TaxGroup"
        }
      },
      "IntegrationTaxCodeDto": {
        "required": [
          "code",
          "deductible",
          "description",
          "externalSystemId",
          "isActive",
          "percentage"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CompanyId"
            }
          },
          "dimensions": {
            "$ref": "#/components/schemas/IntegrationCodingDimensionsMasterdataDto"
          },
          "nondeductibleDimensions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntegrationCodingDimensionsMasterdataDto"
              }
            ],
            "xml": {
              "name": "NondeductibleDimensions"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive",
            "xml": {
              "name": "IsActive"
            }
          },
          "code": {
            "maxLength": 100,
            "type": "string",
            "description": "Tax code",
            "xml": {
              "name": "Code"
            }
          },
          "deductible": {
            "type": "number",
            "description": "Deductible percentage. 100.0 = the whole tax percentage is deductible. Decimal format (19,5)",
            "format": "decimal",
            "xml": {
              "name": "Deductible"
            }
          },
          "description": {
            "maxLength": 450,
            "type": "string",
            "description": "Description of the tax code",
            "xml": {
              "name": "Description"
            }
          },
          "percentage": {
            "type": "number",
            "description": "The tax percentage. Decimal format (19,5)",
            "format": "decimal",
            "xml": {
              "name": "Percentage"
            }
          },
          "externalSystemMetadata": {
            "type": "array",
            "description": "ExternalSystemMetadata is a custom property that allows you to transfer data between systems. ExternalSystemMetadata is not accessible from the GUI, but is rather used for information or identifiers that need to be passed through Medius.",
            "xml": {
              "name": "ExternalSystemMetadata",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExternalSystemMetadataEntry"
            }
          }
        },
        "xml": {
          "name": "TaxCode"
        }
      },
      "IntegrationUnitDto": {
        "required": [
          "externalSystemId",
          "isActive"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in ERP, unique key between Medius and ERP",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive",
            "xml": {
              "name": "IsActive"
            }
          },
          "description": {
            "maxLength": 450,
            "type": "string",
            "description": "Description of the unit",
            "xml": {
              "name": "Description"
            }
          }
        },
        "xml": {
          "name": "Unit"
        }
      },
      "IntegrationUserConfigurationDto": {
        "required": [
          "companyId",
          "userName"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "userName": {
            "maxLength": 60,
            "type": "string",
            "description": "Users username",
            "xml": {
              "name": "UserName"
            }
          },
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CompanyId"
            }
          },
          "responsible": {
            "maxLength": 450,
            "type": "string",
            "description": "UserName or Full name (FirstName LastName). The value is first used as username and if the fails as full name.",
            "xml": {
              "name": "Responsible"
            }
          },
          "responsibleRole": {
            "maxLength": 450,
            "type": "string",
            "description": "Roles role name (of the users supervisor). ResponsibleRole is only used when Responsible is left empty",
            "xml": {
              "name": "ResponsibleRole"
            }
          },
          "preCodingDimensions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntegrationCodingDimensionsMasterdataDto"
              }
            ],
            "xml": {
              "name": "PreCodingDimensions"
            }
          },
          "authorizationGroups": {
            "type": "array",
            "xml": {
              "name": "AuthorizationGroups",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationAuthorizationGroupDto"
            }
          },
          "followupGroups": {
            "type": "array",
            "xml": {
              "name": "FollowupGroups",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationFollowupGroupDto"
            }
          },
          "temporaryDelegations": {
            "type": "array",
            "xml": {
              "name": "TemporaryDelegations",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationTemporaryDelegationDto"
            }
          }
        },
        "xml": {
          "name": "UserConfiguration"
        }
      },
      "IntegrationAuthorizationGroupDto": {
        "required": [
          "authorizationGroupName",
          "companyId",
          "toBeRemoved"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CompanyId"
            }
          },
          "authorizationGroupName": {
            "maxLength": 450,
            "type": "string",
            "description": "Name of authorization group",
            "xml": {
              "name": "AuthorizationGroupName"
            }
          },
          "toBeRemoved": {
            "type": "boolean",
            "description": "If AuthorizationGroup should be removed from User",
            "xml": {
              "name": "ToBeRemoved"
            }
          }
        },
        "xml": {
          "name": "AuthorizationGroup"
        }
      },
      "IntegrationFollowupGroupDto": {
        "required": [
          "companyId",
          "followupGroupName",
          "toBeRemoved"
        ],
        "type": "object",
        "properties": {
          "companyId": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "CompanyId"
            }
          },
          "followupGroupName": {
            "maxLength": 450,
            "type": "string",
            "description": "Name of the follow up group",
            "xml": {
              "name": "FollowupGroupName"
            }
          },
          "toBeRemoved": {
            "type": "boolean",
            "description": "If FollowupGroup should be removed from User",
            "xml": {
              "name": "ToBeRemoved"
            }
          }
        },
        "xml": {
          "name": "FollowupGroup"
        }
      },
      "IntegrationTemporaryDelegationDto": {
        "required": [
          "endDate",
          "responsible",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "The date the delegation starts",
            "format": "date-time",
            "xml": {
              "name": "StartDate"
            }
          },
          "endDate": {
            "type": "string",
            "description": "The date the delegation ends",
            "format": "date-time",
            "xml": {
              "name": "EndDate"
            }
          },
          "responsible": {
            "type": "string",
            "description": "Users username (that is being delegated to)",
            "xml": {
              "name": "Responsible"
            }
          }
        },
        "xml": {
          "name": "TemporaryDelegation"
        }
      },
      "IntegrationUserDto": {
        "required": [
          "externalSystemId",
          "firstName",
          "format",
          "isActive",
          "language",
          "lastName",
          "roles",
          "timezone",
          "userName"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "If the entity is active or inactive",
            "xml": {
              "name": "IsActive"
            }
          },
          "userName": {
            "maxLength": 60,
            "type": "string",
            "description": "Users user name. User name has to be unique",
            "xml": {
              "name": "UserName"
            }
          },
          "firstName": {
            "maxLength": 60,
            "type": "string",
            "description": "First name of user",
            "xml": {
              "name": "FirstName"
            }
          },
          "lastName": {
            "maxLength": 60,
            "type": "string",
            "description": "Last name of user",
            "xml": {
              "name": "LastName"
            }
          },
          "externalSystemId": {
            "maxLength": 100,
            "type": "string",
            "description": "Id reference in external system (Active Directory), unique key between Medius and AD",
            "xml": {
              "name": "ExternalSystemId"
            }
          },
          "email": {
            "maxLength": 200,
            "type": "string",
            "description": "Contact email address",
            "xml": {
              "name": "Email"
            }
          },
          "timezone": {
            "maxLength": 60,
            "type": "string",
            "description": "Default time zone for user. Example: 'UTC'",
            "xml": {
              "name": "Timezone"
            }
          },
          "language": {
            "maxLength": 60,
            "type": "string",
            "description": "Default language for user. Example: English(US) 'en-US', Swedish 'sv'. See list for possible values.",
            "xml": {
              "name": "Language"
            },
            "enum": [
              "zh-CN",
              "cs",
              "da",
              "nl",
              "en-US",
              "fi",
              "fr",
              "de",
              "hu",
              "ja",
              "no",
              "pl",
              "es",
              "sv"
            ]
          },
          "format": {
            "maxLength": 60,
            "type": "string",
            "description": "Default format for user. Based on .NET CultureInfo code. Example: English (United kingdom) 'en-GB', English (United States) 'en-US', Swedish (Sweden) 'sv-SE'. List of possible values can be seen on User configuration in Medius AP Automation.",
            "xml": {
              "name": "Format"
            }
          },
          "defaultCompany": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "DefaultCompany"
            }
          },
          "roles": {
            "type": "array",
            "xml": {
              "name": "Roles",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationRoleCompanyDto"
            }
          },
          "identityProviders": {
            "type": "array",
            "xml": {
              "name": "IdentityProviders",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/IntegrationIdentityProviderDto"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "IntegrationRoleCompanyDto": {
        "required": [
          "roleCompany",
          "roleName",
          "toBeRemoved"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "roleName": {
            "maxLength": 70,
            "type": "string",
            "description": "Name of role",
            "xml": {
              "name": "RoleName"
            }
          },
          "roleCompany": {
            "maxLength": 100,
            "type": "string",
            "description": "ExternalSystemId to corresponding entity",
            "xml": {
              "name": "RoleCompany"
            }
          },
          "toBeRemoved": {
            "type": "boolean",
            "description": "If Role should be removed from User",
            "xml": {
              "name": "ToBeRemoved"
            }
          }
        },
        "xml": {
          "name": "RoleCompany"
        }
      },
      "IntegrationIdentityProviderDto": {
        "required": [
          "identityProviderName",
          "nameIdentifier"
        ],
        "type": "object",
        "properties": {
          "erpSourceId": {
            "maxLength": 450,
            "type": "string",
            "description": "Source of entity",
            "xml": {
              "name": "ErpSourceId"
            }
          },
          "identityProviderName": {
            "maxLength": 60,
            "type": "string",
            "description": "Name of the identityprovider",
            "xml": {
              "name": "IdentityProviderName"
            }
          },
          "nameIdentifier": {
            "maxLength": 100,
            "type": "string",
            "description": "Name identifier of user",
            "xml": {
              "name": "NameIdentifier"
            }
          }
        },
        "xml": {
          "name": "IdentityProvider"
        }
      },
      "VoucherResponseDto": {
        "type": "object",
        "properties": {
          "voucher": {
            "$ref": "#/components/schemas/IntegrationResponseVoucherDto"
          },
          "correlationKey": {
            "type": "string",
            "xml": {
              "name": "CorrelationKey"
            }
          }
        },
        "xml": {
          "name": "VoucherResponse"
        }
      },
      "IntegrationResponseVoucherDto": {
        "type": "object",
        "properties": {
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "voucherValue": {
            "type": "string",
            "xml": {
              "name": "VoucherValue"
            }
          },
          "voucherDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "name": "VoucherDate"
            }
          }
        },
        "xml": {
          "name": "Voucher"
        }
      },
      "EdiSupplierInvoiceImportEnvelope": {
        "type": "object",
        "properties": {
          "invoiceData": {
            "type": "object",
            "properties": {
              "ediSupplierInvoice": {
                "$ref": "#/components/schemas/EdiSupplierInvoiceDto"
              }
            },
            "xml": {
              "name": "InvoiceData",
              "wrapped": true
            }
          }
        },
        "description": "Image and Attachment(s) are available as properties here, see above disclaimer. Please see Postman example for full specification.",
        "xml": {
          "name": "EdiSupplierInvoiceImportEnvelope"
        }
      },
      "EdiSupplierInvoiceDto": {
        "required": [
          "currencyCode",
          "gross",
          "invoiceNumber"
        ],
        "type": "object",
        "properties": {
          "invoiceType": {
            "maxLength": 100,
            "type": "string",
            "description": "Type of invoice. If empty, Medius tries to set.",
            "xml": {
              "name": "InvoiceType"
            },
            "enum": [
              "EXPENSE",
              "ORDER_BASED",
              "CONTRACT_BASED",
              "PAYMENT_REQUEST",
              "PREPAYMENT"
            ]
          },
          "eInvoiceTrackingId": {
            "type": "string",
            "maxLength": 100,
            "description": "A tracking id for e-invoices for reporting and control.",
            "xml": {
              "name": "EInvoiceTrackingId"
            }
          },
          "companyIdentifiers": {
            "type": "array",
            "xml": {
              "name": "CompanyIdentifiers",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/EdiCompanyIdentifierDto"
            }
          },
          "invoiceNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Invoice number",
            "xml": {
              "name": "InvoiceNumber"
            }
          },
          "documentFormat": {
            "maxLength": 50,
            "type": "string",
            "description": "Format of the invoice. To administrate and list possible values, see 'Administration/Document source management' in APA.",
            "xml": {
              "name": "DocumentFormat"
            }
          },
          "documentProvider": {
            "maxLength": 50,
            "type": "string",
            "description": "Provider of the invoice. To administrate and list possible values, see 'Administration/Document source management' in APA.",
            "xml": {
              "name": "DocumentProvider"
            }
          },
          "documentOriginalFormat": {
            "maxLength": 50,
            "type": "string",
            "description": "Orignal format of the invoice. This is a free text field where you can input the orignal format, before it has been converted by an invoice service provider.",
            "xml": {
              "name": "DocumentOriginalFormat"
            }
          },
          "documentSource": {
            "maxLength": 450,
            "type": "string",
            "description": "Deprecated field. When 'DocumentFormat' and 'DocumentProvider' is used, 'DocumentSource' is set automatically.",
            "xml": {
              "name": "DocumentSource"
            },
            "enum": [
              "Unknown",
              "Paper",
              "EInvoice",
              "PDF",
              "ManualCreation"
            ],
            "deprecated": true
          },
          "captureUser": {
            "maxLength": 450,
            "type": "string",
            "description": "User responsible for capturing document from external source.",
            "xml": {
              "name": "CaptureUser"
            }
          },
          "invoiceDate": {
            "type": "string",
            "description": "Invoice date of the invoice. If empty, today's date will be used.",
            "format": "date-time",
            "xml": {
              "name": "InvoiceDate"
            }
          },
          "dueDate": {
            "type": "string",
            "description": "Due date of the invoice. If empty, due date will be calculated based on suppliers payment terms.",
            "format": "date-time",
            "xml": {
              "name": "DueDate"
            }
          },
          "preferredPaymentDate": {
            "type": "string",
            "description": "Preferred payment date of the invoice. If empty, preferred payment date will follow invoice due date.",
            "format": "date-time",
            "xml": {
              "name": "PreferredPaymentDate"
            }
          },
          "preliminaryBookingDate": {
            "type": "string",
            "description": "Preliminary booking date.",
            "format": "date-time",
            "xml": {
              "name": "PreliminaryBookingDate"
            }
          },
          "finalBookingDate": {
            "type": "string",
            "description": "Final booking date.",
            "format": "date-time",
            "xml": {
              "name": "FinalBookingDate"
            }
          },
          "currencyCode": {
            "maxLength": 100,
            "type": "string",
            "description": "Currency code of the invoice.",
            "xml": {
              "name": "CurrencyCode"
            }
          },
          "currencyRate": {
            "type": "number",
            "description": "Currency rate can be imported if other currency rate needed than calculated based on invoice date. Currency rate expressed as ratio of company's accounting currency value to document's currency value. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CurrencyRate"
            }
          },
          "gross": {
            "type": "number",
            "description": "Gross amount. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "Gross"
            }
          },
          "net": {
            "type": "number",
            "description": "Net amount. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "Net"
            }
          },
          "tax": {
            "type": "number",
            "description": "Tax amount. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "Tax"
            }
          },
          "rounding": {
            "type": "number",
            "description": "Rounding amount. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "Rounding"
            }
          },
          "taxIndicator1": {
            "maxLength": 100,
            "type": "string",
            "description": "External system id to corresponding TaxIndicator1.",
            "xml": {
              "name": "TaxIndicator1"
            }
          },
          "taxIndicator2": {
            "maxLength": 100,
            "type": "string",
            "description": "External system id to corresponding TaxIndicator2.",
            "xml": {
              "name": "TaxIndicator2"
            }
          },
          "reference": {
            "maxLength": 450,
            "type": "string",
            "description": "Reference is validated against user name and First + Last name, if found invoice is distributed.",
            "xml": {
              "name": "Reference"
            }
          },
          "paymentReference": {
            "maxLength": 450,
            "type": "string",
            "description": "Payment reference. Can be used as reference at payment.",
            "xml": {
              "name": "PaymentReference"
            }
          },
          "referencedDocuments": {
            "type": "array",
            "description": "List of referenced documents.",
            "xml": {
              "name": "ReferencedDocuments",
              "wrapped": true
            },
            "items": {
              "type": "string",
              "description": "Creates a link to a referenced document. Note that the system only creates the links to the referenced documents if it finds valid references. This is particularly useful for credit notes where document references to registered invoices can be used for the linkage.",
              "xml": {
                "name": "ReferencedDocument",
                "wrapped": true
              }
            }
          },
          "contractNumber": {
            "maxLength": 300,
            "type": "string",
            "description": "Contract number. Note: if this fields is populated Medius will consider this document as contract based regardless of the field InvoiceType.",
            "xml": {
              "name": "ContractNumber"
            }
          },
          "deliveryNote": {
            "maxLength": 300,
            "type": "string",
            "description": "Delivery note. Note: if this fields is populated Medius will consider this document as order based regardless of the field InvoiceType.",
            "xml": {
              "name": "DeliveryNote"
            }
          },
          "orderIdentifier": {
            "maxLength": 300,
            "type": "string",
            "description": "Order identifier, used for connection against purchase order. Note: if this fields is populated Medius will consider this document as order based regardless of the field InvoiceType.",
            "xml": {
              "name": "OrderIdentifier"
            }
          },
          "orderIdentifier2": {
            "maxLength": 300,
            "type": "string",
            "description": "Order identifier 2, used as free text information. Note: if this fields is populated Medius will consider this document as order based regardless of the field InvoiceType.",
            "xml": {
              "name": "OrderIdentifier2"
            }
          },
          "supplierIdentifiers": {
            "type": "array",
            "xml": {
              "name": "SupplierIdentifiers",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/EdiSupplierIdentifierDto"
            }
          },
          "lines": {
            "type": "array",
            "xml": {
              "name": "Lines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/EdiSupplierInvoiceLineDto"
            }
          },
          "codingLines": {
            "type": "array",
            "xml": {
              "name": "CodingLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/EdiCodingLineDto"
            }
          },
          "splitTaxLines": {
            "type": "array",
            "description": "For information on how to set-up Split tax, see Success documentation.",
            "xml": {
              "name": "SplitTaxLines",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/EdiSplitTaxLineDto"
            }
          },
          "customTaxFields": {
            "type": "array",
            "xml": {
              "name": "CustomTaxFields",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/EdiCustomTaxFieldDto"
            }
          },
          "isStraightToArchive": {
            "type": "boolean",
            "description": "Parameter to send invoice straight to archive without approval and ERP integration.",
            "xml": {
              "name": "IsStraightToArchive"
            },
            "default": false
          },
          "paymentDetails": {
            "maxLength": 300,
            "type": "string",
            "description": "Identifier for payment details. Note: this field would be used to populate the PaymentDetails on invoice only when PaymentDetails is turned on for given company.",
            "xml": {
              "name": "PaymentDetails"
            }
          },
          "vatDate": {
            "type": "string",
            "description": "VAT date for an invoice, for example, the date when goods have been received or a service has started.",
            "format": "date-time",
            "xml": {
              "name": "VatDate"
            }
          },
          "addressInformation": {
            "type": "array",
            "xml": {
              "name": "Addressinformation",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/EdiAddressInformationDto"
            }
          },
          "prepaymentCategory": {
            "type": "string",
            "maxLength": 450,
            "description": "Category for pre payments. Need to match values created in Medius AP Automation.",
            "xml": {
              "name": "PrepaymentCategory"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          },
          "customField_List1": {
            "maxLength": 50,
            "type": "string",
            "description": "Custom list value of type text. Needs to have a corresponding List value configured in Medius.",
            "xml": {
              "name": "CustomField_List1"
            }
          },
          "customField_List2": {
            "maxLength": 50,
            "type": "string",
            "description": "Custom list value of type text. Needs to have a corresponding List value configured in Medius.",
            "xml": {
              "name": "CustomField_List2"
            }
          },
          "customField_List3": {
            "maxLength": 50,
            "type": "string",
            "description": "Custom list value of type text. Needs to have a corresponding List value configured in Medius.",
            "xml": {
              "name": "CustomField_List3"
            }
          },
          "customField_List4": {
            "maxLength": 50,
            "type": "string",
            "description": "Custom list value of type text. Needs to have a corresponding List value configured in Medius.",
            "xml": {
              "name": "CustomField_List4"
            }
          },
          "customField_List5": {
            "maxLength": 50,
            "type": "string",
            "description": "Custom list value of type text. Needs to have a corresponding List value configured in Medius.",
            "xml": {
              "name": "CustomField_List5"
            }
          }
        },
        "xml": {
          "name": "EdiSupplierInvoice"
        }
      },
      "EdiSupplierInvoiceLineDto": {
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "itemNumber": {
            "maxLength": 450,
            "type": "string",
            "description": "Item number to be matched on invoice line.",
            "xml": {
              "name": "ItemNumber"
            }
          },
          "itemDescription": {
            "maxLength": 450,
            "type": "string",
            "description": "Item description.",
            "xml": {
              "name": "ItemDescription"
            }
          },
          "amount": {
            "type": "number",
            "description": "Total NET amount of the invoice line. If not provided, amount will be 0. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "Amount"
            }
          },
          "quantity": {
            "type": "number",
            "description": "Quantity of the invoice line. If not provided, quantity will be 0. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "Quantity"
            }
          },
          "unitPrice": {
            "type": "number",
            "description": "Unit price of the invoice line. If not provided, unit price will be calculated by Amount/Quantity. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "UnitPrice"
            }
          },
          "unit": {
            "maxLength": 100,
            "type": "string",
            "description": "Unit of measure. If not provided, '-' will be set as default.",
            "xml": {
              "name": "Unit"
            },
            "default": "-"
          },
          "orderIdentifier": {
            "maxLength": 300,
            "type": "string",
            "description": "Order identifier of the invoice line. If this field is not populated, Order identifier from header will be used. Note: if this fields is populated Medius will consider this document as order based regardless of the field InvoiceType.",
            "xml": {
              "name": "OrderIdentifier"
            }
          },
          "orderIdentifier2": {
            "maxLength": 300,
            "type": "string",
            "description": "Order identifier 2 of the invoice line, used as free text information.",
            "xml": {
              "name": "OrderIdentifier2"
            }
          },
          "deliveryNote": {
            "maxLength": 300,
            "type": "string",
            "description": "Delivery note of the invoice line. Note: if this fields is populated Medius will consider this document as order based regardless of the field InvoiceType.",
            "xml": {
              "name": "DeliveryNote"
            }
          },
          "customField_Text1": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text1"
            }
          },
          "customField_Text2": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text2"
            }
          },
          "customField_Text3": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text3"
            }
          },
          "customField_Text4": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text4"
            }
          },
          "customField_Text5": {
            "maxLength": 450,
            "type": "string",
            "description": "Custom field of type text.",
            "xml": {
              "name": "CustomField_Text5"
            }
          },
          "customField_Numeric1": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric1"
            }
          },
          "customField_Numeric2": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric2"
            }
          },
          "customField_Numeric3": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric3"
            }
          },
          "customField_Numeric4": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric4"
            }
          },
          "customField_Numeric5": {
            "type": "number",
            "description": "Custom field of type numeric. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "CustomField_Numeric5"
            }
          },
          "customField_Boolean1": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean1"
            }
          },
          "customField_Boolean2": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean2"
            }
          },
          "customField_Boolean3": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean3"
            }
          },
          "customField_Boolean4": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean4"
            }
          },
          "customField_Boolean5": {
            "type": "boolean",
            "description": "Custom field of type bit.",
            "xml": {
              "name": "CustomField_Boolean5"
            }
          },
          "customField_DateTime1": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime1"
            }
          },
          "customField_DateTime2": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime2"
            }
          },
          "customField_DateTime3": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime3"
            }
          },
          "customField_DateTime4": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime4"
            }
          },
          "customField_DateTime5": {
            "type": "string",
            "description": "Custom Field of type datetime.",
            "format": "date-time",
            "xml": {
              "name": "CustomField_DateTime5"
            }
          }
        },
        "xml": {
          "name": "EdiSupplierInvoiceLine"
        }
      },
      "EdiCodingLineDto": {
        "type": "object",
        "properties": {
          "lineNumber": {
            "type": "integer",
            "description": "Counter for Line number. Serial number, starts with 1.",
            "format": "int32",
            "xml": {
              "name": "LineNumber"
            }
          },
          "dimensions": {
            "$ref": "#/components/schemas/IntegrationCodingDimensionsMasterdataDto"
          }
        },
        "xml": {
          "name": "EdiCodingLine"
        }
      },
      "EdiSplitTaxLineDto": {
        "type": "object",
        "properties": {
          "taxCode": {
            "maxLength": 450,
            "type": "string",
            "description": "Name of tax code. See Success documentation for further information on Split tax.",
            "xml": {
              "name": "TaxCode"
            }
          },
          "taxPercentage": {
            "type": "number",
            "description": "Tax percentage. See Success documentation for further information on Split tax. Decimal format (19,5).",
            "format": "decimal",
            "xml": {
              "name": "TaxPercentage"
            }
          },
          "netAmount": {
            "type": "number",
            "description": "Net amount of the tax line. See Success documentation for further information on Split tax. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "NetAmount"
            }
          },
          "taxAmount": {
            "type": "number",
            "description": "Tax amount of the tax line. See Success documentation for further information on Split tax. Decimal format (28,14).",
            "format": "decimal",
            "xml": {
              "name": "TaxAmount"
            }
          }
        },
        "xml": {
          "name": "EdiSplitTaxLine"
        }
      },
      "EdiCustomTaxFieldDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 450,
            "type": "string",
            "description": "Name of custom tax. Note: Need to be set-up and correspond to information in given company.",
            "xml": {
              "name": "Name"
            }
          },
          "amount": {
            "type": "number",
            "description": "Amount of custom tax. Note: Need to be set-up and correspond to information in given company.",
            "format": "decimal",
            "xml": {
              "name": "Amount"
            }
          }
        },
        "xml": {
          "name": "EdiCustomTaxField"
        }
      },
      "EdiAddressInformationDto": {
        "type": "object",
        "description": "You can use `addressInfomration` to ensure accurate shipment tracking, financial reporting and it aids in applying correct tax rates and compliance at invoice posting to your ERP.",
        "properties": {
          "addressType": {
            "maxLength": 450,
            "type": "string",
            "description": "The address type can be either `ShipTo` or `ShipFrom`. Only one set of address per address type.",
            "xml": {
              "name": "AddressType"
            },
            "enum": [
              "ShipTo",
              "ShipFrom"
            ]
          },
          "street": {
            "maxLength": 450,
            "type": "string",
            "description": "Street",
            "xml": {
              "name": "Street"
            }
          },
          "city": {
            "maxLength": 450,
            "type": "string",
            "description": "City",
            "xml": {
              "name": "City"
            }
          },
          "state": {
            "maxLength": 450,
            "type": "string",
            "description": "State",
            "xml": {
              "name": "State"
            }
          },
          "postalCode": {
            "maxLength": 450,
            "type": "string",
            "description": "PostalCode",
            "xml": {
              "name": "PostalCode"
            }
          },
          "country": {
            "maxLength": 450,
            "type": "string",
            "description": "Country",
            "xml": {
              "name": "Country"
            }
          }
        },
        "xml": {
          "name": "AddressInformation"
        }
      },
      "EdiCompanyIdentifierDto": {
        "type": "object",
        "properties": {
          "identifierType": {
            "maxLength": 450,
            "type": "string",
            "description": "See list of available values for the identifier type. In GUI they are named differently, eg. Bank Account for BANK_ACCOUNT",
            "xml": {
              "name": "IdentifierType"
            },
            "enum": [
              "BANK_ACCOUNT",
              "ORGANIZATION_NUMBER",
              "VAT_REGISTRATION_NUMBER",
              "GLN_NUMBER",
              "IBAN_NUMBER",
              "OTHER",
              "ExternalSystemIdentifier",
              "CompanyNameIdentifier",
              "CompanyIdIdentifier"
            ]
          },
          "identifierValue": {
            "maxLength": 450,
            "type": "string",
            "description": "Identifier value, e.g. bank account number",
            "xml": {
              "name": "IdentifierValue"
            }
          }
        },
        "xml": {
          "name": "EdiCompanyIdentifier"
        }
      },
      "EdiSupplierIdentifierDto": {
        "type": "object",
        "properties": {
          "identifierType": {
            "maxLength": 450,
            "type": "string",
            "description": "See list of available values for the identifier type. In GUI they are named differently, e.g. Bank Account for BANK_ACCOUNT.",
            "xml": {
              "name": "IdentifierType"
            },
            "enum": [
              "FINANCIAL_SYSTEM",
              "PURCHASING_SYSTEM",
              "BANK_ACCOUNT",
              "ORGANIZATION_NUMBER",
              "VAT_REGISTRATION_NUMBER",
              "EAN_NUMBER",
              "POSTAL_ACCOUNT",
              "IBAN_NUMBER",
              "EXTERNAL_SYSTEM_ID",
              "SUPPLIER_PORTAL_ID",
              "OTHER"
            ]
          },
          "identifierValue": {
            "maxLength": 450,
            "type": "string",
            "description": "Identifier value, e.g. bank account number",
            "xml": {
              "name": "IdentifierValue"
            }
          }
        },
        "xml": {
          "name": "EdiSupplierIdentifier"
        }
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Detailed error message.",
            "example": "Attachments: MyAttachment.txt, not found in the content body"
          }
        }
      },
      "NotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Detailed error message.",
            "example": "There exists no document imported with id 123. Remember that it's the Id of the document import type."
          }
        }
      },
      "PaymentBatch": {
        "required": [
          "items",
          "payorId"
        ],
        "type": "object",
        "properties": {
          "payorId": {
            "type": "string",
            "description": "Same as one of the company identifiers from Medius AP Automation. In order to import payment batch, matching identifier must be found",
            "example": "Medius",
            "xml": {
              "name": "PayorId"
            }
          },
          "externalBatchId": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "External Payment Batch identifier. If provided then it has to be unique across all successfully imported batches.",
            "example": "WBC43728",
            "xml": {
              "name": "ExternalBatchId"
            }
          },
          "items": {
            "type": "array",
            "description": "Adding items to the import batch is mandatory. The limit is 5000 items per batch.  **NOTE:** follow either PaymentItemUS or PaymentItemEU depending on your company location.",
            "xml": {
              "name": "Items",
              "wrapped": true
            },
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PaymentItemUS"
                },
                {
                  "$ref": "#/components/schemas/PaymentItemEU"
                }
              ]
            }
          }
        },
        "xml": {
          "name": "PaymentBatch"
        }
      },
      "PaymentItemUS": {
        "required": [
          "invoiceAmount",
          "invoiceCompanyId",
          "invoiceCurrencyCode",
          "invoiceDate",
          "invoiceNumber",
          "payeeCity",
          "payeeCountryCode",
          "payeeId",
          "payeeName",
          "payeeStateCode",
          "payeeStreetLine1",
          "payeeZipOrPostalCode",
          "paymentAmount",
          "paymentCurrencyCode",
          "payorBankAccountIdentifier"
        ],
        "type": "object",
        "description": "**Use this schema for US Companies**",
        "properties": {
          "invoiceNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "Payee-assigned invoice number. Must not appear twice for the same payee within a payments batch file. Will also be presented on Remittance advice for the vendor.",
            "example": "2/2021",
            "xml": {
              "name": "InvoiceNumber"
            }
          },
          "voucherNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "Payment voucher number from ERP.",
            "example": "1519c142-c405-4753-bb2f-5fbec59375d4",
            "xml": {
              "name": "VoucherNumber"
            }
          },
          "invoiceVoucherNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "Invoice voucher number assigned in the ERP.",
            "example": "2419c142-c405-4753-bb2f-5fbec5937556",
            "xml": {
              "name": "InvoiceVoucherNumber"
            }
          },
          "invoiceCompanyId": {
            "type": "string",
            "description": "Company the invoice has been posted to in AP automation. Same as Company Id in Medius AP Automation. In order to import payment batch, matching identifier must be found.",
            "example": "Medius",
            "xml": {
              "name": "InvoiceCompanyId"
            }
          },
          "payeeId": {
            "maxLength": 50,
            "type": "string",
            "description": "Payee identifier - should be same as SupplierId in Medius AP Automation. Should be unique to each payee. Restricted characters: /  ? #",
            "example": "sinid",
            "xml": {
              "name": "PayeeId"
            }
          },
          "remitToId": {
            "maxLength": 50,
            "type": "string",
            "description": "Identifier for a different remittance number or name for a payee (payees with multiple locations).",
            "example": "345123R",
            "xml": {
              "name": "RemitToId"
            }
          },
          "payeeName": {
            "maxLength": 100,
            "type": "string",
            "description": "Payee name - should be same as supplier name in Medius AP Automation. Up to 255 characters allowed for domestic payments.",
            "example": "Larson - Roob",
            "xml": {
              "name": "PayeeName"
            }
          },
          "payeeStreetLine1": {
            "maxLength": 34,
            "type": "string",
            "description": "Street address of the payee. Up to 60 characters allowed for domestic payments.",
            "example": "3346 Pagac Union",
            "xml": {
              "name": "PayeeStreetLine1"
            }
          },
          "payeeStreetLine2": {
            "maxLength": 34,
            "type": "string",
            "description": "Second line of street address of the payee. Up to 60 characters allowed for domestic payments.",
            "example": "PO box 1202",
            "xml": {
              "name": "PayeeStreetLine2"
            }
          },
          "payeeCity": {
            "maxLength": 20,
            "type": "string",
            "description": "City of the payee. Up to 50 characters allowed for domestic payments",
            "example": "Lake Miller",
            "xml": {
              "name": "PayeeCity"
            }
          },
          "payeeZipOrPostalCode": {
            "maxLength": 10,
            "minLength": 5,
            "type": "string",
            "description": "Zip code or Postal code of the Payee. Max length of 10 character with minimum of 5 character length. Examples: US = 32202-4934 or 32202, Canada = A1A 1A1",
            "example": "32202-4934",
            "xml": {
              "name": "PayeeZipOrPostalCode"
            }
          },
          "payeeStateCode": {
            "maxLength": 2,
            "type": "string",
            "description": "State code of the payee. The country subdivision code, ISO 3166-2. Optional for international payments. Required for US and Canadian payments.",
            "example": "RI",
            "xml": {
              "name": "PayeeStateCode"
            }
          },
          "payeeCountryCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Country code of the payee. ISO 3166-1 alpha-2 code.",
            "example": "US",
            "xml": {
              "name": "PayeeCountryCode"
            }
          },
          "paymentAmount": {
            "type": "number",
            "description": "The amount to be paid for the invoice, may vary from invoice amount in case of partial payments or short payments. Max 12 digital places, including up to 2 decimal places",
            "format": "double",
            "example": 732.43,
            "xml": {
              "name": "PaymentAmount"
            }
          },
          "paymentCurrencyCode": {
            "maxLength": 3,
            "type": "string",
            "description": "Currency in which vendor will be paid. ISO Alfa 3 code.",
            "example": "USD",
            "xml": {
              "name": "PaymentCurrencyCode"
            }
          },
          "invoiceDate": {
            "type": "string",
            "description": "Invoice date in format yyyy-MM-dd",
            "format": "date",
            "example": "2021-04-10T00:00:00.000Z",
            "xml": {
              "name": "InvoiceDate"
            }
          },
          "invoiceDueDate": {
            "type": "string",
            "description": "Invoice Due Date in format yyyy-MM-dd. Note: If not provided, no due date will be displayed on the remittance advice.",
            "format": "date",
            "example": "2021-04-10T00:00:00.000Z",
            "xml": {
              "name": "InvoiceDueDate"
            }
          },
          "preferredPaymentDate": {
            "type": "string",
            "description": "The date on which payment should be executed. If left empty, current date will be used.",
            "format": "date",
            "example": "2021-04-10T00:00:00.000Z",
            "xml": {
              "name": "PreferredPaymentDate"
            }
          },
          "invoiceAmount": {
            "type": "number",
            "description": "Original invoice amount, may vary from paymentAmount in case of partial payments or short payment. Max 12 digital places including up to 2 decimal places",
            "format": "double",
            "example": 732.43,
            "xml": {
              "name": "InvoiceAmount"
            }
          },
          "invoiceCurrencyCode": {
            "maxLength": 3,
            "type": "string",
            "description": "Currency of invoice. Required if invoiceAmount send. ISO Alfa 3 code.",
            "example": "USD",
            "xml": {
              "name": "InvoiceCurrencyCode"
            }
          },
          "payorBankAccountIdentifier": {
            "maxLength": 25,
            "type": "string",
            "description": "Bank account identifier from customer accounting system. Needs to be an unique identifier for all payment items in the batch.",
            "example": "BankId1",
            "xml": {
              "name": "PayorBankAccountIdentifier"
            }
          },
          "payorLocationIdentifier": {
            "type": "string",
            "description": "[Deprecated field. The field will be ignored by new customers and removed by the end of December 2024.] Legal entity, department, branch office, etc.",
            "example": "1",
            "deprecated": true,
            "xml": {
              "name": "PayorLocationIdentifier"
            }
          },
          "comment": {
            "maxLength": 80,
            "type": "string",
            "description": "Comment for invoice from payor accounting system. Will be displayed on the check and remittance advice.",
            "example": "Comment for payee",
            "xml": {
              "name": "Comment"
            }
          },
          "payorIdInPayeeSystem": {
            "maxLength": 50,
            "type": "string",
            "description": "Payor assigned account number with payee. Will be displayed on remittance advice.",
            "example": "897578762",
            "xml": {
              "name": "PayorIdInPayeeSystem"
            }
          },
          "payeeBankName": {
            "maxLength": 50,
            "type": "string",
            "description": "Name of the beneficiary bank. Required for international payments.",
            "example": "Bank Zachodni WBK S.A.",
            "xml": {
              "name": "PayeeBankName"
            }
          },
          "payeeBankStreetLine1": {
            "maxLength": 34,
            "type": "string",
            "description": "Payees banks address line 1. Required for international payments.",
            "example": "PL.WOLNOSCI 15",
            "xml": {
              "name": "PayeeBankStreetLine1"
            }
          },
          "payeeBankStreetLine2": {
            "maxLength": 34,
            "type": "string",
            "description": "Payees banks address line 2. Required for international payments.",
            "example": "BUILDING B",
            "xml": {
              "name": "PayeeBankStreetLine2"
            }
          },
          "payeeBankCity": {
            "maxLength": 20,
            "type": "string",
            "description": "Payees banks city. Required for international payments.",
            "example": "POZNAN",
            "xml": {
              "name": "PayeeBankCity"
            }
          },
          "payeeBankCountryCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Payees banks country. ISO Alpha2 code. Required for international payments.",
            "example": "PL",
            "xml": {
              "name": "PayeeBankCountryCode"
            }
          },
          "payeeAccountNumber": {
            "maxLength": 34,
            "type": "string",
            "description": "IBAN or basic account number. No spaces or dashes permitted. Required for international payments.",
            "example": "PL88109013620000000036000000",
            "xml": {
              "name": "PayeeAccountNumber"
            }
          },
          "payeeRoutingNumber": {
            "maxLength": 15,
            "type": "string",
            "description": "Required field when basic account number provided in payeeAccountNumber field. Optional if IBAN provided. This could be known as RoutingNumber, BranchCode, ABA number, transit number, MICR, IFSC, etc.",
            "example": "202020",
            "xml": {
              "name": "PayeeRoutingNumber"
            }
          },
          "payeeRoutingNumberType": {
            "maxLength": 4,
            "type": "string",
            "description": "Required field when payee routing number provided in payeeRoutingNumber field. Allowed values: ACH, Wire",
            "example": "ACH",
            "xml": {
              "name": "PayeeRoutingNumberType"
            }
          },
          "payeeBankSwiftCode": {
            "maxLength": 11,
            "type": "string",
            "description": "Required field when IBAN provided in payeeAccountNumber field. A unique identification code assigned to a specific bank to proceed money transfer between banks internationally. Needs to match regex included as pattern.",
            "example": "WBKPPLPP",
            "xml": {
              "name": "PayeeBankSwiftCode"
            }
          },
          "purposeOfPayment": {
            "maxLength": 50,
            "type": "string",
            "description": "Purpose of payment. Required for international payment to some countries.",
            "example": "BillPayment",
            "xml": {
              "name": "PurposeOfPayment"
            }
          },
          "payeeContactEmail": {
            "maxLength": 1300,
            "type": "string",
            "description": "Comma-separated list of up to 4 email addresses (maximum 254 characters each). Used to send remittance emails to payees.",
            "example": "email1@example.com, email2@example.com",
            "xml": {
              "name": "PayeeContactEmail"
            }
          },
          "paymentReference": {
            "maxLength": 13,
            "type": "string",
            "description": "A payment reference number or check number from the customers accounting system. Will be displayed on remittance advice. Note: If not specified, will be generated during payment process. If generated during payment process, there will be one payment reference for all invoices to be paid to a single payee.",
            "example": "P012701",
            "xml": {
              "name": "PaymentReference"
            }
          },
          "discountAmount": {
            "type": "number",
            "description": "Amount of discount subtracted from \"Invoice amount\" to arrive at \"Amount to pay\". This field is not used for calculation. It is informational only.",
            "format": "double",
            "example": 0,
            "xml": {
              "name": "DiscountAmount"
            }
          },
          "discountCurrencyCode": {
            "maxLength": 3,
            "type": "string",
            "description": "Currency for discount provided in \"Discount Amount\". This field is not used for calculation. It is informational only. ISO Alfa 3 code.",
            "example": "USD",
            "xml": {
              "name": "DiscountCurrencyCode"
            }
          },
          "importedCheckNumber": {
            "maxLength": 10,
            "type": "string",
            "description": "The ImportedCheckNumber, or check number, from the customer's ERP system will be displayed on the remittance advice. Note: If not specified, an error will occur during the batch import process. When provided during the payment process, a single check number will be used for all invoices paid to one payee.",
            "example": "0000007455",
            "xml": {
              "name": "ImportedCheckNumber"
            }
          }
        },
        "xml": {
          "name": "Item"
        }
      },
      "PaymentItemEU": {
        "required": [
          "invoiceAmount",
          "invoiceCompanyId",
          "invoiceCurrencyCode",
          "invoiceDate",
          "invoiceNumber",
          "payeeAccountNumber",
          "payeeCountryCode",
          "payeeId",
          "payeeName",
          "paymentAmount",
          "paymentCurrencyCode",
          "payorBankAccountIdentifier"
        ],
        "type": "object",
        "description": "**Use this schema for EU Companies**",
        "properties": {
          "invoiceNumber": {
            "maxLength": 140,
            "type": "string",
            "description": "Payee-assigned invoice number. Must not appear twice for the same payee within a payments batch file.",
            "example": "2/2021",
            "xml": {
              "name": "InvoiceNumber"
            }
          },
          "voucherNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "Voucher number from ERP.",
            "example": "1519c142-c405-4753-bb2f-5fbec59375d4",
            "xml": {
              "name": "VoucherNumber"
            }
          },
          "invoiceVoucherNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "Invoice voucher number assigned in the ERP.",
            "example": "2419c142-c405-4753-bb2f-5fbec5937556",
            "xml": {
              "name": "InvoiceVoucherNumber"
            }
          },
          "invoiceCompanyId": {
            "type": "string",
            "description": "Company the invoice has been posted to in AP automation. Same as Company Id in Medius AP Automation. In order to import payment batch, matching identifier must be found",
            "example": "Medius",
            "xml": {
              "name": "InvoiceCompanyId"
            }
          },
          "payeeId": {
            "maxLength": 50,
            "type": "string",
            "description": "Payee identifier - should be same as SupplierId in Medius AP Automation. Should be unique to each payee. Restricted characters: /  ? # | ",
            "example": "sinid",
            "xml": {
              "name": "PayeeId"
            }
          },
          "remitToId": {
            "maxLength": 50,
            "type": "string",
            "description": "Identifier for a different remittance number or name for a payee (payees with multiple locations or bank accounts). Restricted characters: /  ? # | ",
            "example": "345123R",
            "xml": {
              "name": "RemitToId"
            }
          },
          "payeeName": {
            "maxLength": 140,
            "type": "string",
            "description": "Payee name - should be same as supplier name in Medius AP Automation. Up to 255 characters allowed for domestic payments",
            "example": "Larson - Roob",
            "xml": {
              "name": "PayeeName"
            }
          },
          "payeeStreetLine1": {
            "maxLength": 34,
            "type": "string",
            "description": "Street address of the payee.\n\n __Note:__ required for:\n* international payments.\n* US domestic payments.",
            "example": "3346 Pagac Union",
            "xml": {
              "name": "PayeeStreetLine1"
            }
          },
          "payeeStreetLine2": {
            "maxLength": 34,
            "type": "string",
            "description": "Second line of street address of the payee.",
            "example": "PO box 1202",
            "xml": {
              "name": "PayeeStreetLine2"
            }
          },
          "payeeCity": {
            "maxLength": 35,
            "type": "string",
            "description": "City of the payee.\n\n __Note:__ required for:\n* international payments.\n* US domestic payments.",
            "example": "Lake Miller",
            "xml": {
              "name": "PayeeCity"
            }
          },
          "payeeZipOrPostalCode": {
            "maxLength": 16,
            "type": "string",
            "description": "Zip or Postal Code of the payee.\n\n __Note:__ required for:\n* international payments.\n* US domestic payments.",
            "example": "89262-8263",
            "xml": {
              "name": "PayeeZipOrPostalCode"
            }
          },
          "payeeStateCode": {
            "maxLength": 2,
            "type": "string",
            "description": "State code of the payee. The country subdivision code, ISO 3166-2.\n\n __Note:__ required for:\n* international payments.\n* US domestic payments.\n* Canadian domestic payments.",
            "example": "RI",
            "xml": {
              "name": "PayeeStateCode"
            }
          },
          "payeeCountryCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Country code of the payee. ISO 3166-1 alpha-2 code.",
            "example": "US",
            "xml": {
              "name": "PayeeCountryCode"
            }
          },
          "paymentAmount": {
            "type": "number",
            "description": "The amount to be paid for the invoice, may vary from invoice amount in case of partial payments or short payments. Max 12 digital places, including up to 2 decimal places. Maximum amount per item __2.000.000__, minimum amount per item __0.1__",
            "format": "double",
            "example": 732.43,
            "xml": {
              "name": "PaymentAmount"
            }
          },
          "paymentCurrencyCode": {
            "maxLength": 3,
            "type": "string",
            "description": "Currency in which vendor will be paid. ISO Alfa 3 code. When payeeBankgiroNumber is provided, paymentCurrencyCode needs to be in 'SEK'.",
            "example": "USD",
            "xml": {
              "name": "PaymentCurrencyCode"
            }
          },
          "invoiceDate": {
            "type": "string",
            "description": "Invoice date in format yyyy-MM-dd",
            "format": "date",
            "example": "2021-04-10T00:00:00.000Z",
            "xml": {
              "name": "InvoiceDate"
            }
          },
          "invoiceDueDate": {
            "type": "string",
            "description": "Invoice Due Date in format yyyy-MM-dd.",
            "format": "date",
            "example": "2021-04-10T00:00:00.000Z",
            "xml": {
              "name": "InvoiceDueDate"
            }
          },
          "preferredPaymentDate": {
            "type": "string",
            "description": "The date on which payment should be executed. If left empty, current date will be used.",
            "format": "date",
            "example": "2021-04-10T00:00:00.000Z",
            "xml": {
              "name": "PreferredPaymentDate"
            }
          },
          "invoiceAmount": {
            "type": "number",
            "description": "Original invoice amount, may vary from paymentAmount in case of partial payments or short payment. Max 12 digital places including up to 2 decimal places",
            "format": "double",
            "example": 732.43,
            "xml": {
              "name": "InvoiceAmount"
            }
          },
          "invoiceCurrencyCode": {
            "maxLength": 3,
            "type": "string",
            "description": "Currency of invoice. Required if invoiceAmount send. ISO Alfa 3 code.",
            "example": "USD",
            "xml": {
              "name": "InvoiceCurrencyCode"
            }
          },
          "comment": {
            "maxLength": 80,
            "type": "string",
            "description": "Payment related comment to supplier, presented on checks and remittance advice.",
            "example": "Comment for payee",
            "xml": {
              "name": "Comment"
            }
          },
          "payorBankAccountIdentifier": {
            "maxLength": 50,
            "type": "string",
            "description": "Internal bank identifier, defined during funding bank account setup in Medius Pay. Needs to be an unique identifier for all payment items in the batch.",
            "example": "Bank1",
            "xml": {
              "name": "PayorBankAccountIdentifier"
            }
          },
          "payeeBankName": {
            "maxLength": 140,
            "type": "string",
            "description": "Name of the beneficiary bank.",
            "example": "Bank Zachodni WBK S.A.",
            "xml": {
              "name": "PayeeBankName"
            }
          },
          "payeeBankStreetLine1": {
            "maxLength": 34,
            "type": "string",
            "description": "Payees banks address line 1.",
            "example": "PL.WOLNOSCI 15",
            "xml": {
              "name": "PayeeBankStreetLine1"
            }
          },
          "payeeBankStreetLine2": {
            "maxLength": 34,
            "type": "string",
            "description": "Payees banks address line 2.",
            "example": "BUILDING B",
            "xml": {
              "name": "PayeeBankStreetLine2"
            }
          },
          "payeeBankCity": {
            "maxLength": 20,
            "type": "string",
            "description": "Payees banks city.",
            "example": "POZNAN",
            "xml": {
              "name": "PayeeBankCity"
            }
          },
          "payeeBankCountryCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Payees banks country. ISO Alpha2 code.",
            "example": "PL",
            "xml": {
              "name": "PayeeBankCountryCode"
            }
          },
          "payeeAccountNumber": {
            "maxLength": 34,
            "type": "string",
            "description": "IBAN or basic account number. No spaces or dashes permitted. If IBAN is provided, payeeBankSwiftCode is required. If basic account number is provided, payeeBankSwiftCode or payeeRoutingNumber is required. PayeeAccountNumber is optional if payeeBankgiroNumber is provided.",
            "example": "PL88109013620000000036000000",
            "xml": {
              "name": "PayeeAccountNumber"
            }
          },
          "payeeBankgiroNumber": {
            "maxLength": 34,
            "type": "string",
            "description": "When payeeBankgiroNumber is provided, payeeAccountNumber, payeeRoutingNumber and payeeBankSwiftCode are optional. If both payeeBankgiroNumber and combination of payeeAccountNumber, payeeRoutingNumber and payeeBankSwiftCode are provided, the combination of (payeeAccountNumber and payeeBankSwiftCode) or (payeeAccountNumber and payeeRoutingNumber) are used for payment execution.",
            "example": "3452334",
            "xml": {
              "name": "PayeeBankgiroNumber"
            }
          },
          "payeeRoutingNumber": {
            "maxLength": 35,
            "type": "string",
            "description": "When basic bank account number (BBAN) is provided in `payeeAccountNumber` field, the need of `payeeRoutingNumber` depends on the specific requirements of the country and the bank involved.\n\n Optional if IBAN provided.\n\n Required for international payments in some countries.\n\n This could be known as RoutingNumber, BranchCode, ABA number, transit number, MICR, IFSC, etc. Required for international payments in some countries.",
            "example": "202020",
            "xml": {
              "name": "PayeeRoutingNumber"
            }
          },
          "payeeBankSwiftCode": {
            "maxLength": 11,
            "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$",
            "type": "string",
            "description": "A unique identification code assigned to a specific bank to proceed money transfer between banks internationally. Needs to match regex included as pattern.",
            "example": "WBKPPLPP",
            "xml": {
              "name": "PayeeBankSwiftCode"
            }
          },
          "purposeOfPayment": {
            "maxLength": 50,
            "type": "string",
            "description": "Purpose of payment. Required for international payment to some countries.",
            "example": "BillPayment",
            "xml": {
              "name": "PurposeOfPayment"
            }
          },
          "payeeContactEmail": {
            "maxLength": 1300,
            "type": "string",
            "description": "Comma-separated list of up to 4 email addresses (maximum 254 characters each). Used to send remittance emails to payees.",
            "example": "email1@example.com, email2@example.com",
            "xml": {
              "name": "PayeeContactEmail"
            }
          },
          "paymentReference": {
            "maxLength": 35,
            "type": "string",
            "description": "A payment reference number from the customers accounting system. If not provided, invoiceNumber will be used as payment reference.",
            "example": "P012701",
            "xml": {
              "name": "PaymentReference"
            }
          },
          "payeeTaxRegistrationNumber": {
            "maxLength": 35,
            "type": "string",
            "description": "The payee tax registration number.",
            "example": "12598",
            "xml": {
              "name": "PayeeTaxRegistrationNumber"
            }
          }
        },
        "xml": {
          "name": "Item"
        }
      },
      "ImportResult": {
        "type": "object",
        "properties": {
          "paymentBatchId": {
            "type": "integer",
            "example": 100,
            "xml": {
              "name": "PaymentBatchId"
            }
          },
          "isSuccessful": {
            "type": "boolean",
            "description": "true when payment batch was successfully imported otherwise false.",
            "example": true,
            "xml": {
              "name": "IsSuccessful"
            }
          }
        },
        "xml": {
          "name": "Result"
        }
      },
      "PaymentBatchReconciliationStatusResponse": {
        "required": [
          "id",
          "importDateTime",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Payment batch id",
            "format": "int",
            "example": 123,
            "xml": {
              "name": "Id"
            }
          },
          "externalBatchId": {
            "type": "string",
            "description": "External payment batch id",
            "format": "string",
            "example": "aa123",
            "xml": {
              "name": "ExternalBatchId"
            }
          },
          "importDateTime": {
            "type": "string",
            "description": "Date and time of payment batch import",
            "format": "date",
            "xml": {
              "name": "ImportDateTime"
            }
          },
          "payorId": {
            "type": "string",
            "description": "Payor id",
            "example": "Medius",
            "xml": {
              "name": "PayorId"
            }
          },
          "status": {
            "type": "string",
            "description": "Available for backwards compatibility. Possible statuses, see list.",
            "example": "AwaitingApproval",
            "deprecated": true,
            "xml": {
              "name": "Status"
            },
            "enum": [
              "Processing",
              "AwaitingApproval",
              "SentForPayment",
              "Rejected",
              "PaymentInProgress",
              "ReadyForPayment",
              "ImportDataError",
              "Paid",
              "PaymentFailed",
              "ReloadingPaymentInformation",
              "PaidWithErrors",
              "Issued",
              "IssuedWithError"
            ]
          }
        },
        "xml": {
          "name": "PaymentBatch"
        }
      },
      "PaymentItemReconciliationStatusResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Internal payment item id.",
            "example": 100,
            "xml": {
              "name": "Id"
            }
          },
          "payorBankAccountIdentifier": {
            "maxLength": 50,
            "type": "string",
            "description": "Internal bank identifier, defined during funding bank account setup in Medius Pay",
            "example": "Bank1",
            "xml": {
              "name": "PayorBankAccountIdentifier"
            }
          },
          "payeeName": {
            "maxLength": 100,
            "type": "string",
            "description": "Payee name - the same as supplier name in Medius AP Automation. Up to 255 characters allowed for domestic payments",
            "example": "Larson - Roob",
            "xml": {
              "name": "PayeeName"
            }
          },
          "payeeId": {
            "maxLength": 50,
            "type": "string",
            "description": "Payee identifier - the same as SupplierId in Medius AP Automation. Should be unique to each payee. Restricted characters: /  ? # | ",
            "example": "sinid",
            "xml": {
              "name": "PayeeId"
            }
          },
          "invoiceNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "Payee-assigned invoice number. Must not appear twice for the same payee within a payments batch file",
            "example": "2/2021",
            "xml": {
              "name": "InvoiceNumber"
            }
          },
          "invoiceDate": {
            "type": "string",
            "format": "date",
            "xml": {
              "name": "InvoiceDate"
            }
          },
          "voucherNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "Payment voucher number from ERP.",
            "example": "1519c142-c405-4753-bb2f-5fbec59375d4",
            "xml": {
              "name": "VoucherNumber"
            }
          },
          "invoiceAmount": {
            "type": "number",
            "description": "Original invoice amount, may vary from paymentAmount in case of partial payments or short payment. Max 12 digital places including up to 2 decimal places",
            "format": "double",
            "example": 732.43,
            "xml": {
              "name": "InvoiceAmount"
            }
          },
          "amountToPay": {
            "type": "number",
            "description": "The amount paid for the invoice, may vary from invoice amount in case of partial payments or short payments",
            "format": "double",
            "example": 732.43,
            "xml": {
              "name": "AmountToPay"
            }
          },
          "paymentCurrency": {
            "maxLength": 3,
            "type": "string",
            "description": "Currency in which the invoice was paid. ISO Alfa 3 code.",
            "example": "USD",
            "xml": {
              "name": "PaymentCurrency"
            }
          },
          "paidAmountInSettlementCurrency": {
            "type": "number",
            "description": "The amount paid in settlement currency",
            "format": "double",
            "example": 142.43,
            "xml": {
              "name": "PaidAmountInSettlementCurrency"
            }
          },
          "exchangeRate": {
            "type": "number",
            "description": "Value of exchange rate",
            "format": "double",
            "example": 142.43,
            "xml": {
              "name": "ExchangeRate"
            }
          },
          "fee": {
            "type": "number",
            "description": "Value of fee",
            "format": "double",
            "example": 142.43,
            "xml": {
              "name": "Fee"
            }
          },
          "feeCurrency": {
            "maxLength": 3,
            "type": "string",
            "description": "Currency in which fee was paid. ISO Alfa 3 code",
            "example": "USD",
            "xml": {
              "name": "FeeCurrency"
            }
          },
          "paymentMethod": {
            "maxLength": 50,
            "type": "string",
            "description": "Payment method",
            "example": "Wire",
            "xml": {
              "name": "PaymentMethod"
            }
          },
          "issuedDate": {
            "type": "string",
            "format": "date",
            "xml": {
              "name": "IssuedDate"
            }
          },
          "paymentDate": {
            "type": "string",
            "format": "date",
            "xml": {
              "name": "PaymentDate"
            }
          },
          "paymentReference": {
            "maxLength": 13,
            "type": "string",
            "description": "Payment reference number or check number from the customers accounting system. Will be displayed on remittance advice",
            "example": "P012701",
            "xml": {
              "name": "PaymentReference"
            }
          },
          "status": {
            "type": "string",
            "description": "Possible statuses, see list.",
            "example": "AwaitingApproval",
            "xml": {
              "name": "Status"
            },
            "enum": [
              "AwaitingApproval",
              "SentForPayment",
              "Scheduled",
              "Rejected",
              "PaymentInProgress",
              "ReadyForPayment",
              "Paid",
              "PaymentFailed",
              "ReloadingPaymentInformation",
              "Issued",
              "Processing",
              "Expired",
              "Voided"
            ]
          },
          "checkNumber": {
            "maxLength": 500,
            "type": "string",
            "description": "Provided only for payments processed with payment method check",
            "example": "0000000001",
            "xml": {
              "name": "CheckNumber"
            }
          }
        },
        "xml": {
          "name": "Item"
        }
      },
      "GetSupplierIntegrationsResultDto": {
        "type": "object",
        "properties": {
          "suppliers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplierIntegrationUrlDto"
            },
            "nullable": true
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "paging": {
            "$ref": "#/components/schemas/Paging"
          }
        },
        "additionalProperties": false
      },
      "SupplierIntegrationUrlDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplierIntegrationSupplierDto": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "nullable": true
          },
          "supplierName": {
            "type": "string",
            "nullable": true
          },
          "approvalStatus": {
            "$ref": "#/components/schemas/SupplierStatus"
          },
          "approvalTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "supplierDescription": {
            "type": "string",
            "nullable": true
          },
          "supplierManagementId": {
            "type": "string",
            "nullable": true
          },
          "externalSupplierId": {
            "type": "string",
            "nullable": true
          },
          "supplierGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "founded": {
            "type": "integer",
            "format": "int32"
          },
          "companySize": {
            "$ref": "#/components/schemas/SupplierCompanySize"
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplierIntegrationCurrencyDto"
            },
            "nullable": true
          },
          "operatingCountries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplierIntegrationCountryDto"
            },
            "nullable": true
          },
          "companyRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "taxRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "mainContactName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "workNumber": {
            "type": "string",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "addressLine3": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "county": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "countryISO2": {
            "type": "string",
            "nullable": true
          },
          "countryISO3": {
            "type": "string",
            "nullable": true
          },
          "countryNumeric": {
            "type": "string",
            "nullable": true
          },
          "supplierIndustry": {
            "type": "string",
            "nullable": true
          },
          "otherIndustries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "commodities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "facebookLink": {
            "type": "string",
            "nullable": true
          },
          "instagramLink": {
            "type": "string",
            "nullable": true
          },
          "linkedInLink": {
            "type": "string",
            "nullable": true
          },
          "youTubeLink": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplierIntegrationAddressBookDto"
            },
            "nullable": true
          },
          "companyRelationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyRelationshipsDto"
            },
            "nullable": true
          },
          "onboardingQuestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplierIntegrationQuestionResponseDto"
            },
            "nullable": true
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplierIntegrationQuestionResponseDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplierStatus": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "SupplierCompanySize": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "SupplierIntegrationCurrencyDto": {
        "type": "object",
        "properties": {
          "isoCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplierIntegrationCountryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode2Letter": {
            "type": "string",
            "nullable": true
          },
          "countryCodeNumeric": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplierIntegrationAddressBookDto": {
        "type": "object",
        "properties": {
          "supplierManagementId": {
            "type": "string",
            "nullable": true
          },
          "externalAddressId": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "legalEntityName": {
            "type": "string",
            "nullable": true
          },
          "mainContactName": {
            "type": "string",
            "nullable": true
          },
          "mainContactEmail": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "addressLine3": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "county": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "countryCodeIso2": {
            "type": "string",
            "nullable": true
          },
          "countryCodeIso3": {
            "type": "string",
            "nullable": true
          },
          "countryCodeNumeric": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyRelationshipsDto": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "nullable": true
          },
          "externalSupplierId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the company relationship: Pending, Active, or Inactive",
            "nullable": true
          },
          "isActive": 
          {
            "type": "boolean",
            "description": "True if the company relationship is Pending or Active; otherwise, false.",
            "nullable": true
          },
          "paymentTerms": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "taxIndicator1": {
            "type": "string",
            "nullable": true
          },
          "taxIndicator2": {
            "type": "string",
            "nullable": true
          },
          "taxRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "taxIdType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplierIntegrationQuestionResponseDto": {
        "type": "object",
        "properties": {
          "question": {
            "type": "string",
            "nullable": true
          },
          "answer": {
            "type": "string",
            "nullable": true
          },
          "answerArray": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplierIntegrationStatus": {
        "enum": [
          "Pending",
          "Fetched",
          "Error",
          "Success"
        ],
        "type": "string"
      },
      "SupplierIntegrationSuccessDto": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "string",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressPairDto"
            },
            "nullable": true
          },
          "companyRelationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyRelationshipPairDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressPairDto": {
        "type": "object",
        "properties": {
          "supplierManagementId": {
            "type": "string",
            "nullable": false
          },
          "externalAddressId": {
            "type": "string",
            "nullable": false
          }
        },
        "additionalProperties": false
      },
      "CompanyRelationshipPairDto": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "string",
            "nullable": false
          },
          "companyId": {
            "type": "string",
            "nullable": false
          }
        },
        "additionalProperties": false
      },
      "SupplierIntegrationErrorDto": {
        "type": "object",
        "properties": {
          "errorMessages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IntegrationPurchaseOrderDocumentDto": {
        "type": "object",
        "required": [
          "deliveryDate",
          "companyId",
          "supplierId",
          "currencyCode",
          "ourReference",
          "deliveryAddress",
          "billingAddress",
          "purchaseOrderLine"
        ],
        "properties": {
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "description": "Delivery date must be set on header or on all lines."
          },
          "orderIdentifier": {
            "type": "string",
            "description": "Order identifier. It cannot start with 'MF-' since that is reserved for Medius Procurement. "
          },
          "additionalOrderIdentifiers": {
            "type": "array",
            "description": "Max 30 additional order identifiers can be added, no duplication allowed.",
            "items": {
              "type": "string"
            }
          },
          "deliveryTermLocation": {
            "type": "string"
          },
          "additionalInformation": {
            "type": "string"
          },
          "yourReference": {
            "type": "string"
          },
          "shippingMarks": {
            "type": "string"
          },
          "companyId": {
            "type": "string",
            "description": "Need to be an active, non virtual company."
          },
          "supplierId": {
            "type": "string",
            "description": "Need to be an active supplier within the company tree."
          },
          "ourReference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntegrationPurchaseOrderDocumentUserDto"
              }
            ]
          },
          "buyer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntegrationPurchaseOrderDocumentUserDto"
              }
            ]
          },
          "goodsReceiptBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntegrationPurchaseOrderDocumentUserDto"
              }
            ]
          },
          "currencyCode": {
            "type": "string",
            "description": "Need to be a currency with currency rate within the company tree."
          },
          "deliveryTermId": {
            "type": "string"
          },
          "paymentTermId": {
            "type": "string"
          },
          "orderTypeName": {
            "type": "string"
          },
          "requisitionSystem": {
            "type": "string",
            "description": "Name of the requisition system. 'MediusProcurement' or 'MediusBuy' are reserved names which can't be used."
          },
          "locationId": {
            "type": "string"
          },
          "deliveryAddress": {
            "description": "Delivery address is required for the purchase order document. If any of address fields is provided we use it as address, if not found we try to retrieve it from `locationId`, if not found we check the purchase order company for `deliveryAddress`. If there is single one - we use it.",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntegrationPurchaseOrderDocumentAddressDto"
              }
            ]
          },
          "billingAddress": {
            "description": "Billing address is required for the purchase order document. If any of address fields is provided we use it as address, if not found we check the purchase order company for `billingAddress`. If there is single one - we use it.",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntegrationPurchaseOrderDocumentAddressDto"
              }
            ]
          },
          "purchaseOrderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationPurchaseOrderDocumentLineDto"
            }
          }
        }
      },
      "IntegrationPurchaseOrderDocumentUserDto": {
        "type": "object",
        "description": "Required to send one of properties - `userName`, `email`, `firstName` or `lastName`. We only consider actvie users.",
        "properties": {
          "userName": {
            "type": "string",
            "description": "Successful if one `userName` is found."
          },
          "email": {
            "type": "string",
            "description": "Successful if one `email` is found."
          },
          "firstName": {
            "type": "string",
            "description": "Successful if `firstName`+`lastName` is found."
          },
          "lastName": {
            "type": "string",
            "description": "Successful if `firstName`+`lastName` is found."
          }
        }
      },
      "IntegrationPurchaseOrderDocumentAddressDto": {
        "type": "object",
        "properties": {
          "recipient": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "street2": {
            "type": "string"
          },
          "division": {
            "type": "string"
          },
          "building": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "IntegrationPurchaseOrderDocumentLineDto": {
        "type": "object",
        "required": [
          "lineNumber"
        ],
        "properties": {
          "lineNumber": {
            "type": "string"
          },
          "itemNumber": {
            "type": "string",
            "description": "Either `itemNumber` or `itemDescription` must be provided."
          },
          "itemDescription": {
            "type": "string",
            "description": "Either `itemNumber` or `itemDescription` must be provided."
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "description": "Delivery date must be set on header or on all lines."
          },
          "service": {
            "type": "boolean"
          },
          "additionalInformation": {
            "type": "string"
          },
          "supplierContractNumber": {
            "type": "string"
          },
          "registerGoodsReceipt": {
            "type": "boolean"
          },
          "categoryCode": {
            "type": "string"
          },
          "taxIndicator1": {
            "type": "string"
          },
          "taxIndicator2": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "description": "Amount must be greater than zero if the item is a service."
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "description": "Quantity must be greater than zero if the item is not a service."
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal",
            "description": "Unit price must be greater than zero if the item is not a service."
          },
          "codingLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationPurchaseOrderDocumentCodingLineDto"
            }
          }
        }
      },
      "IntegrationPurchaseOrderDocumentCodingLineDto": {
        "type": "object",
        "description": "When `codingLines` is used, at least one dimension value is required.",
        "required": [
          "amount"
        ],
        "properties": {
          "tag": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "dimension1": {
            "type": "string"
          },
          "dimension2": {
            "type": "string"
          },
          "dimension3": {
            "type": "string"
          },
          "dimension4": {
            "type": "string"
          },
          "dimension5": {
            "type": "string"
          },
          "dimension6": {
            "type": "string"
          },
          "dimension7": {
            "type": "string"
          },
          "dimension8": {
            "type": "string"
          },
          "dimension9": {
            "type": "string"
          },
          "dimension10": {
            "type": "string"
          },
          "dimension11": {
            "type": "string"
          },
          "dimension12": {
            "type": "string"
          },
          "freeText1": {
            "type": "string"
          },
          "freeText2": {
            "type": "string"
          },
          "freeText3": {
            "type": "string"
          },
          "freeText4": {
            "type": "string"
          },
          "freeText5": {
            "type": "string"
          }
        }
      },
      "IntegrationStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "poDocumentImportTrackingId": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "mediusflowcloudauth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.medius.com/{tenant}/oauth/authorize",
            "scopes": {
              "Integration": "Access all integration related services",
              "Integration.Erp": "Access all Messages and Master data related services",
              "Integration.DocumentImport": "Access document import service",
              "Integration.Export": "Access to companies and suppliers export services",
              "openid": "Access to UserInfo endpoint and openid tokens",
              "Integration.Pay.PaymentBatchImport": "Access payment related services",
              "Integration.PurchaseOrderDocumentImport": "Access purchase order document import",
              "Integration.SupplierManagement": "Access to supplier synchronization with ERP related services"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "mediusflowcloudauth": [
        "Integration",
        "Integration.Erp",
        "Integration.DocumentImport",
        "Integration.Export",
        "openid",
        "Integration.Pay.PaymentBatchImport",
        "Integration.PurchaseOrderDocumentImport",
        "Integration.SupplierManagement"
      ]
    }
  ]
}
